
Lab5.elf:     file format elf32-avr32

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .reset        0000200c  80000000  80000000  00000400  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .rela.got     00000000  8000200c  8000200c  0000240c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  2 .init         0000001a  8000200c  8000200c  0000240c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  3 .text         00001cc4  80002028  80002028  00002428  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  4 .exception    00000200  80003e00  80003e00  00004200  2**9
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  5 .fini         00000018  80004000  80004000  00004400  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  6 .rodata       00000260  80004018  80004018  00004418  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .dalign       00000004  00000004  00000004  00000000  2**0
                  ALLOC
  8 .ctors        00000008  00000008  80004278  00004808  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .dtors        00000008  00000010  80004280  00004810  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 10 .jcr          00000004  00000018  80004288  00004818  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 11 .got          00000000  0000001c  8000428c  0000481c  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 12 .data         0000050c  0000001c  8000428c  0000481c  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 13 .balign       00000000  00000528  80004798  00004d28  2**0
                  ALLOC
 14 .bss          00000270  00000528  00000528  00000000  2**2
                  ALLOC
 15 .heap         0000e868  00000798  00000798  00000000  2**0
                  ALLOC
 16 .comment      00000030  00000000  00000000  00004d28  2**0
                  CONTENTS, READONLY
 17 .debug_aranges 00000980  00000000  00000000  00004d58  2**3
                  CONTENTS, READONLY, DEBUGGING
 18 .debug_pubnames 000013d2  00000000  00000000  000056d8  2**0
                  CONTENTS, READONLY, DEBUGGING
 19 .debug_info   00012cf5  00000000  00000000  00006aaa  2**0
                  CONTENTS, READONLY, DEBUGGING
 20 .debug_abbrev 00002c00  00000000  00000000  0001979f  2**0
                  CONTENTS, READONLY, DEBUGGING
 21 .debug_line   00008ee3  00000000  00000000  0001c39f  2**0
                  CONTENTS, READONLY, DEBUGGING
 22 .debug_frame  00001628  00000000  00000000  00025284  2**2
                  CONTENTS, READONLY, DEBUGGING
 23 .debug_str    00003317  00000000  00000000  000268ac  2**0
                  CONTENTS, READONLY, DEBUGGING
 24 .debug_loc    00003370  00000000  00000000  00029bc3  2**0
                  CONTENTS, READONLY, DEBUGGING
 25 .debug_macinfo 00b377d7  00000000  00000000  0002cf33  2**0
                  CONTENTS, READONLY, DEBUGGING
 26 .stack        00001000  0000f000  0000f000  00000000  2**0
                  ALLOC
 27 .debug_ranges 00000940  00000000  00000000  00b6470a  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .reset:

80000000 <_start>:
80000000:	48 1f       	lddpc	pc,80000004 <_start+0x4>
80000002:	d7 03       	nop
80000004:	80 00       	ld.sh	r0,r0[0x0]
80000006:	20 28       	sub	r8,2

80000008 <_trampoline>:
80000008:	e0 8f 10 00 	bral	80002008 <program_start>
	...

80002008 <program_start>:
80002008:	fe cf ff e0 	sub	pc,pc,-32

Disassembly of section .init:

8000200c <_init>:
8000200c:	eb cd 40 40 	pushm	r6,lr
80002010:	48 26       	lddpc	r6,80002018 <_init+0xc>
80002012:	1e 26       	rsub	r6,pc
80002014:	c0 48       	rjmp	8000201c <_init+0x10>
80002016:	d7 03       	nop
80002018:	80 00       	ld.sh	r0,r0[0x0]
8000201a:	1f f6       	ld.ub	r6,pc[0x7]
8000201c:	c5 2c       	rcall	800020c0 <frame_dummy>
8000201e:	e0 a0 0e 5d 	rcall	80003cd8 <__do_global_ctors_aux>
80002022:	e3 cd 80 40 	ldm	sp++,r6,pc

Disassembly of section .text:

80002028 <_stext>:
80002028:	30 07       	mov	r7,0
8000202a:	e0 7a 00 00 	mov	r10,65536
8000202e:	5b fa       	cp.w	r10,-1
80002030:	f4 0d 17 10 	movne	sp,r10
80002034:	fe cb dd bc 	sub	r11,pc,-8772
80002038:	30 8c       	mov	r12,8
8000203a:	18 3b       	cp.w	r11,r12
8000203c:	c0 70       	breq	8000204a <_stext+0x22>
8000203e:	e0 6a 05 28 	mov	r10,1320
80002042:	b7 09       	ld.d	r8,r11++
80002044:	b9 28       	st.d	r12++,r8
80002046:	14 3c       	cp.w	r12,r10
80002048:	cf d5       	brlt	80002042 <_stext+0x1a>
8000204a:	e0 6a 07 98 	mov	r10,1944
8000204e:	e0 6c 05 28 	mov	r12,1320
80002052:	30 08       	mov	r8,0
80002054:	30 09       	mov	r9,0
80002056:	b9 28       	st.d	r12++,r8
80002058:	14 3c       	cp.w	r12,r10
8000205a:	cf e5       	brlt	80002056 <_stext+0x2e>
8000205c:	e0 a0 05 da 	rcall	80002c10 <_init_startup>
80002060:	fe cc e0 60 	sub	r12,pc,-8096
80002064:	e0 a0 09 de 	rcall	80003420 <atexit>
80002068:	cd 2f       	rcall	8000200c <_init>
8000206a:	1a 9c       	mov	r12,sp
8000206c:	30 0b       	mov	r11,0
8000206e:	e0 a0 0c 43 	rcall	800038f4 <_init_argv>
80002072:	5b fc       	cp.w	r12,-1
80002074:	f9 bc 00 00 	moveq	r12,0
80002078:	f9 ba 00 00 	moveq	r10,0
8000207c:	14 1d       	sub	sp,r10
8000207e:	cd bd       	rcall	80002434 <main>
80002080:	e0 a0 09 d8 	rcall	80003430 <exit>

80002084 <__do_global_dtors_aux>:
80002084:	d4 21       	pushm	r4-r7,lr
80002086:	e0 68 05 28 	mov	r8,1320
8000208a:	11 89       	ld.ub	r9,r8[0x0]
8000208c:	30 08       	mov	r8,0
8000208e:	f0 09 18 00 	cp.b	r9,r8
80002092:	c1 61       	brne	800020be <__do_global_dtors_aux+0x3a>
80002094:	31 08       	mov	r8,16
80002096:	31 46       	mov	r6,20
80002098:	10 95       	mov	r5,r8
8000209a:	10 16       	sub	r6,r8
8000209c:	e0 67 05 2c 	mov	r7,1324
800020a0:	a3 46       	asr	r6,0x2
800020a2:	20 16       	sub	r6,1
800020a4:	c0 68       	rjmp	800020b0 <__do_global_dtors_aux+0x2c>
800020a6:	2f f8       	sub	r8,-1
800020a8:	8f 08       	st.w	r7[0x0],r8
800020aa:	ea 08 03 28 	ld.w	r8,r5[r8<<0x2]
800020ae:	5d 18       	icall	r8
800020b0:	6e 08       	ld.w	r8,r7[0x0]
800020b2:	0c 38       	cp.w	r8,r6
800020b4:	cf 93       	brcs	800020a6 <__do_global_dtors_aux+0x22>
800020b6:	30 19       	mov	r9,1
800020b8:	e0 68 05 28 	mov	r8,1320
800020bc:	b0 89       	st.b	r8[0x0],r9
800020be:	d8 22       	popm	r4-r7,pc

800020c0 <frame_dummy>:
800020c0:	d4 01       	pushm	lr
800020c2:	31 8c       	mov	r12,24
800020c4:	78 08       	ld.w	r8,r12[0x0]
800020c6:	58 08       	cp.w	r8,0
800020c8:	c0 50       	breq	800020d2 <frame_dummy+0x12>
800020ca:	48 38       	lddpc	r8,800020d4 <frame_dummy+0x14>
800020cc:	58 08       	cp.w	r8,0
800020ce:	c0 20       	breq	800020d2 <frame_dummy+0x12>
800020d0:	5d 18       	icall	r8
800020d2:	d8 02       	popm	pc
800020d4:	00 00       	add	r0,r0
	...

800020d8 <buttonIsPressed>:
800020d8:	fe 78 10 00 	mov	r8,-61440
800020dc:	f0 f8 02 60 	ld.w	r8,r8[608]
800020e0:	f9 e8 00 08 	and	r8,r12,r8
800020e4:	5f 0c       	sreq	r12
800020e6:	5e fc       	retal	r12

800020e8 <initLED>:
800020e8:	fe 78 11 00 	mov	r8,-61184
800020ec:	fc 1b 08 00 	movh	r11,0x800
800020f0:	91 1b       	st.w	r8[0x4],r11
800020f2:	fc 1a 10 00 	movh	r10,0x1000
800020f6:	91 1a       	st.w	r8[0x4],r10
800020f8:	fc 19 20 00 	movh	r9,0x2000
800020fc:	91 19       	st.w	r8[0x4],r9
800020fe:	f1 4b 00 54 	st.w	r8[84],r11
80002102:	f1 4a 00 54 	st.w	r8[84],r10
80002106:	f1 49 00 54 	st.w	r8[84],r9
8000210a:	f1 4b 00 44 	st.w	r8[68],r11
8000210e:	f1 4a 00 44 	st.w	r8[68],r10
80002112:	f1 49 00 44 	st.w	r8[68],r9
80002116:	5e fc       	retal	r12

80002118 <toggleLED>:
80002118:	fe 78 10 00 	mov	r8,-61440
8000211c:	f1 4c 01 5c 	st.w	r8[348],r12
80002120:	5e fc       	retal	r12

80002122 <onLED>:
80002122:	fe 78 10 00 	mov	r8,-61440
80002126:	f1 4c 01 58 	st.w	r8[344],r12
8000212a:	5e fc       	retal	r12

8000212c <vButton2Task>:
	}
}

// Lights the LED for 10 sec if the button is pressed 
void vButton2Task( void *pvParameters )
{
8000212c:	eb cd 40 fe 	pushm	r1-r7,lr
80002130:	20 1d       	sub	sp,4
80002132:	18 96       	mov	r6,r12
	portTickType xLastWakeTime; // Holds tick count before suspension
	const portTickType xFreq = TASK_DELAY_MS(10000); // Time to suspend the LED task
	
	while(1)
	{
		if(buttonIsPressed(BUTTON2_PIN))
80002134:	e4 67 00 00 	mov	r7,262144
		{
			xLastWakeTime = xTaskGetTickCount();	// Sets current tick count
			vTaskSuspend(pvParameters);				// Suspends the corresponding LED task
			onLED(LED2_BIT_VALUE);
80002138:	fc 15 20 00 	movh	r5,0x2000
			usart_write_line (serialPORT_USART, "BUTTON 3 PRESSED\n");
8000213c:	48 f4       	lddpc	r4,80002178 <vButton2Task+0x4c>
8000213e:	fe 73 18 00 	mov	r3,-59392
			
			vTaskDelayUntil(&xLastWakeTime, xFreq ); // Delays this task until the suspension time is met
80002142:	e0 61 27 10 	mov	r1,10000
	portTickType xLastWakeTime; // Holds tick count before suspension
	const portTickType xFreq = TASK_DELAY_MS(10000); // Time to suspend the LED task
	
	while(1)
	{
		if(buttonIsPressed(BUTTON2_PIN))
80002146:	0e 9c       	mov	r12,r7
80002148:	f0 1f 00 0d 	mcall	8000217c <vButton2Task+0x50>
8000214c:	cf d0       	breq	80002146 <vButton2Task+0x1a>
		{
			xLastWakeTime = xTaskGetTickCount();	// Sets current tick count
8000214e:	f0 1f 00 0d 	mcall	80002180 <vButton2Task+0x54>
80002152:	50 0c       	stdsp	sp[0x0],r12
			vTaskSuspend(pvParameters);				// Suspends the corresponding LED task
80002154:	0c 9c       	mov	r12,r6
80002156:	f0 1f 00 0c 	mcall	80002184 <vButton2Task+0x58>
			onLED(LED2_BIT_VALUE);
8000215a:	0a 9c       	mov	r12,r5
8000215c:	f0 1f 00 0b 	mcall	80002188 <vButton2Task+0x5c>
			usart_write_line (serialPORT_USART, "BUTTON 3 PRESSED\n");
80002160:	08 9b       	mov	r11,r4
80002162:	06 9c       	mov	r12,r3
80002164:	f0 1f 00 0a 	mcall	8000218c <vButton2Task+0x60>
			
			vTaskDelayUntil(&xLastWakeTime, xFreq ); // Delays this task until the suspension time is met
80002168:	02 9b       	mov	r11,r1
8000216a:	1a 9c       	mov	r12,sp
8000216c:	f0 1f 00 09 	mcall	80002190 <vButton2Task+0x64>
			vTaskResume(pvParameters);				 // Resumes the LED task
80002170:	0c 9c       	mov	r12,r6
80002172:	f0 1f 00 09 	mcall	80002194 <vButton2Task+0x68>
80002176:	ce 8b       	rjmp	80002146 <vButton2Task+0x1a>
80002178:	80 00       	ld.sh	r0,r0[0x0]
8000217a:	40 34       	lddsp	r4,sp[0xc]
8000217c:	80 00       	ld.sh	r0,r0[0x0]
8000217e:	20 d8       	sub	r8,13
80002180:	80 00       	ld.sh	r0,r0[0x0]
80002182:	2d 5c       	sub	r12,-43
80002184:	80 00       	ld.sh	r0,r0[0x0]
80002186:	2f fc       	sub	r12,-1
80002188:	80 00       	ld.sh	r0,r0[0x0]
8000218a:	21 22       	sub	r2,18
8000218c:	80 00       	ld.sh	r0,r0[0x0]
8000218e:	28 08       	sub	r8,-128
80002190:	80 00       	ld.sh	r0,r0[0x0]
80002192:	30 f0       	mov	r0,15
80002194:	80 00       	ld.sh	r0,r0[0x0]
80002196:	2f 7c       	sub	r12,-9

80002198 <vButton1Task>:
	}
}

// Lights the LED for 10 sec if the button is pressed 
void vButton1Task( void *pvParameters )
{
80002198:	eb cd 40 fe 	pushm	r1-r7,lr
8000219c:	20 1d       	sub	sp,4
8000219e:	18 96       	mov	r6,r12
	portTickType xLastWakeTime; // Holds tick count before suspension
	const portTickType xFreq = TASK_DELAY_MS(10000); // Time to suspend the LED task
	
	while(1)
	{
		if(buttonIsPressed(BUTTON1_PIN))
800021a0:	fc 17 00 20 	movh	r7,0x20
		{
			xLastWakeTime = xTaskGetTickCount();	// Sets current tick count
			vTaskSuspend(pvParameters);				// Suspends the corresponding LED task
			onLED(LED1_BIT_VALUE);
800021a4:	fc 15 10 00 	movh	r5,0x1000
			usart_write_line (serialPORT_USART, "BUTTON 2 PRESSED\n");
800021a8:	48 f4       	lddpc	r4,800021e4 <vButton1Task+0x4c>
800021aa:	fe 73 18 00 	mov	r3,-59392
			
			vTaskDelayUntil(&xLastWakeTime, xFreq ); // Delays this task until the suspension time is met
800021ae:	e0 61 27 10 	mov	r1,10000
	portTickType xLastWakeTime; // Holds tick count before suspension
	const portTickType xFreq = TASK_DELAY_MS(10000); // Time to suspend the LED task
	
	while(1)
	{
		if(buttonIsPressed(BUTTON1_PIN))
800021b2:	0e 9c       	mov	r12,r7
800021b4:	f0 1f 00 0d 	mcall	800021e8 <vButton1Task+0x50>
800021b8:	cf d0       	breq	800021b2 <vButton1Task+0x1a>
		{
			xLastWakeTime = xTaskGetTickCount();	// Sets current tick count
800021ba:	f0 1f 00 0d 	mcall	800021ec <vButton1Task+0x54>
800021be:	50 0c       	stdsp	sp[0x0],r12
			vTaskSuspend(pvParameters);				// Suspends the corresponding LED task
800021c0:	0c 9c       	mov	r12,r6
800021c2:	f0 1f 00 0c 	mcall	800021f0 <vButton1Task+0x58>
			onLED(LED1_BIT_VALUE);
800021c6:	0a 9c       	mov	r12,r5
800021c8:	f0 1f 00 0b 	mcall	800021f4 <vButton1Task+0x5c>
			usart_write_line (serialPORT_USART, "BUTTON 2 PRESSED\n");
800021cc:	08 9b       	mov	r11,r4
800021ce:	06 9c       	mov	r12,r3
800021d0:	f0 1f 00 0a 	mcall	800021f8 <vButton1Task+0x60>
			
			vTaskDelayUntil(&xLastWakeTime, xFreq ); // Delays this task until the suspension time is met
800021d4:	02 9b       	mov	r11,r1
800021d6:	1a 9c       	mov	r12,sp
800021d8:	f0 1f 00 09 	mcall	800021fc <vButton1Task+0x64>
			vTaskResume(pvParameters);				 // Resumes the LED task
800021dc:	0c 9c       	mov	r12,r6
800021de:	f0 1f 00 09 	mcall	80002200 <vButton1Task+0x68>
800021e2:	ce 8b       	rjmp	800021b2 <vButton1Task+0x1a>
800021e4:	80 00       	ld.sh	r0,r0[0x0]
800021e6:	40 48       	lddsp	r8,sp[0x10]
800021e8:	80 00       	ld.sh	r0,r0[0x0]
800021ea:	20 d8       	sub	r8,13
800021ec:	80 00       	ld.sh	r0,r0[0x0]
800021ee:	2d 5c       	sub	r12,-43
800021f0:	80 00       	ld.sh	r0,r0[0x0]
800021f2:	2f fc       	sub	r12,-1
800021f4:	80 00       	ld.sh	r0,r0[0x0]
800021f6:	21 22       	sub	r2,18
800021f8:	80 00       	ld.sh	r0,r0[0x0]
800021fa:	28 08       	sub	r8,-128
800021fc:	80 00       	ld.sh	r0,r0[0x0]
800021fe:	30 f0       	mov	r0,15
80002200:	80 00       	ld.sh	r0,r0[0x0]
80002202:	2f 7c       	sub	r12,-9

80002204 <vButton0Task>:
	}
}

// Lights the LED for 10 sec if the button is pressed 
void vButton0Task( void *pvParameters )
{
80002204:	eb cd 40 fe 	pushm	r1-r7,lr
80002208:	20 1d       	sub	sp,4
8000220a:	18 96       	mov	r6,r12
	portTickType xLastWakeTime; // Holds tick count before suspension
	const portTickType xFreq = TASK_DELAY_MS(10000); // Time to suspend the LED task
	
	while(1)
	{
		if(buttonIsPressed(BUTTON0_PIN))
8000220c:	fc 17 01 00 	movh	r7,0x100
		{
			xLastWakeTime = xTaskGetTickCount();	// Sets current tick count
			vTaskSuspend(pvParameters);				// Suspends the corresponding LED task
			onLED(LED0_BIT_VALUE);
80002210:	fc 15 08 00 	movh	r5,0x800
			usart_write_line (serialPORT_USART, "BUTTON 1 PRESSED\n");
80002214:	48 f4       	lddpc	r4,80002250 <vButton0Task+0x4c>
80002216:	fe 73 18 00 	mov	r3,-59392
			
			vTaskDelayUntil(&xLastWakeTime, xFreq); // Delays this task until the suspension time is met
8000221a:	e0 61 27 10 	mov	r1,10000
	portTickType xLastWakeTime; // Holds tick count before suspension
	const portTickType xFreq = TASK_DELAY_MS(10000); // Time to suspend the LED task
	
	while(1)
	{
		if(buttonIsPressed(BUTTON0_PIN))
8000221e:	0e 9c       	mov	r12,r7
80002220:	f0 1f 00 0d 	mcall	80002254 <vButton0Task+0x50>
80002224:	cf d0       	breq	8000221e <vButton0Task+0x1a>
		{
			xLastWakeTime = xTaskGetTickCount();	// Sets current tick count
80002226:	f0 1f 00 0d 	mcall	80002258 <vButton0Task+0x54>
8000222a:	50 0c       	stdsp	sp[0x0],r12
			vTaskSuspend(pvParameters);				// Suspends the corresponding LED task
8000222c:	0c 9c       	mov	r12,r6
8000222e:	f0 1f 00 0c 	mcall	8000225c <vButton0Task+0x58>
			onLED(LED0_BIT_VALUE);
80002232:	0a 9c       	mov	r12,r5
80002234:	f0 1f 00 0b 	mcall	80002260 <vButton0Task+0x5c>
			usart_write_line (serialPORT_USART, "BUTTON 1 PRESSED\n");
80002238:	08 9b       	mov	r11,r4
8000223a:	06 9c       	mov	r12,r3
8000223c:	f0 1f 00 0a 	mcall	80002264 <vButton0Task+0x60>
			
			vTaskDelayUntil(&xLastWakeTime, xFreq); // Delays this task until the suspension time is met
80002240:	02 9b       	mov	r11,r1
80002242:	1a 9c       	mov	r12,sp
80002244:	f0 1f 00 09 	mcall	80002268 <vButton0Task+0x64>
			vTaskResume(pvParameters);				// Resumes the LED task
80002248:	0c 9c       	mov	r12,r6
8000224a:	f0 1f 00 09 	mcall	8000226c <vButton0Task+0x68>
8000224e:	ce 8b       	rjmp	8000221e <vButton0Task+0x1a>
80002250:	80 00       	ld.sh	r0,r0[0x0]
80002252:	40 5c       	lddsp	r12,sp[0x14]
80002254:	80 00       	ld.sh	r0,r0[0x0]
80002256:	20 d8       	sub	r8,13
80002258:	80 00       	ld.sh	r0,r0[0x0]
8000225a:	2d 5c       	sub	r12,-43
8000225c:	80 00       	ld.sh	r0,r0[0x0]
8000225e:	2f fc       	sub	r12,-1
80002260:	80 00       	ld.sh	r0,r0[0x0]
80002262:	21 22       	sub	r2,18
80002264:	80 00       	ld.sh	r0,r0[0x0]
80002266:	28 08       	sub	r8,-128
80002268:	80 00       	ld.sh	r0,r0[0x0]
8000226a:	30 f0       	mov	r0,15
8000226c:	80 00       	ld.sh	r0,r0[0x0]
8000226e:	2f 7c       	sub	r12,-9

80002270 <vLED2Task>:
	}
}

// Led2 blinks every 3 sec
void vLED2Task( void *pvParameters )
{
80002270:	eb cd 40 fc 	pushm	r2-r7,lr
80002274:	20 1d       	sub	sp,4
	portTickType xLastWakeTime; // Holds tick count last led toggle
	const portTickType xFreq = TASK_DELAY_MS(3000); // Holds the period
	
	xLastWakeTime = xTaskGetTickCount(); // Sets current tick count
80002276:	f0 1f 00 16 	mcall	800022cc <vLED2Task+0x5c>
8000227a:	fa c5 ff fc 	sub	r5,sp,-4
8000227e:	0a dc       	st.w	--r5,r12
	
	while(1)
	{
		toggleLED(LED2_BIT_VALUE);
80002280:	fc 14 20 00 	movh	r4,0x2000
		usart_write_line (serialPORT_USART, "LED2 TOGGLE\n");
80002284:	49 33       	lddpc	r3,800022d0 <vLED2Task+0x60>
80002286:	fe 77 18 00 	mov	r7,-59392
		
		// Detects deadline misses
		while(xTaskGetTickCount() > xLastWakeTime + xFreq) // If current tick count exceeds the last wake time + period
		{
			usart_write_line (serialPORT_USART, "LED2 DEADLINE MISSED\n");
8000228a:	49 36       	lddpc	r6,800022d4 <vLED2Task+0x64>
			xLastWakeTime += xFreq; // Adds a period to the last wake time and rechecks if another deadline was missed
		}
		
		vTaskDelayUntil(&xLastWakeTime, xFreq ); // Sleep this task until it should toggle the led again
8000228c:	e0 62 0b b8 	mov	r2,3000
	
	xLastWakeTime = xTaskGetTickCount(); // Sets current tick count
	
	while(1)
	{
		toggleLED(LED2_BIT_VALUE);
80002290:	08 9c       	mov	r12,r4
80002292:	f0 1f 00 12 	mcall	800022d8 <vLED2Task+0x68>
		usart_write_line (serialPORT_USART, "LED2 TOGGLE\n");
80002296:	06 9b       	mov	r11,r3
80002298:	0e 9c       	mov	r12,r7
8000229a:	f0 1f 00 11 	mcall	800022dc <vLED2Task+0x6c>
		
		// Detects deadline misses
		while(xTaskGetTickCount() > xLastWakeTime + xFreq) // If current tick count exceeds the last wake time + period
8000229e:	c0 98       	rjmp	800022b0 <vLED2Task+0x40>
		{
			usart_write_line (serialPORT_USART, "LED2 DEADLINE MISSED\n");
800022a0:	0c 9b       	mov	r11,r6
800022a2:	0e 9c       	mov	r12,r7
800022a4:	f0 1f 00 0e 	mcall	800022dc <vLED2Task+0x6c>
			xLastWakeTime += xFreq; // Adds a period to the last wake time and rechecks if another deadline was missed
800022a8:	40 08       	lddsp	r8,sp[0x0]
800022aa:	f0 c8 f4 48 	sub	r8,r8,-3000
800022ae:	50 08       	stdsp	sp[0x0],r8
	{
		toggleLED(LED2_BIT_VALUE);
		usart_write_line (serialPORT_USART, "LED2 TOGGLE\n");
		
		// Detects deadline misses
		while(xTaskGetTickCount() > xLastWakeTime + xFreq) // If current tick count exceeds the last wake time + period
800022b0:	f0 1f 00 07 	mcall	800022cc <vLED2Task+0x5c>
800022b4:	40 08       	lddsp	r8,sp[0x0]
800022b6:	f0 c8 f4 48 	sub	r8,r8,-3000
800022ba:	10 3c       	cp.w	r12,r8
800022bc:	fe 9b ff f2 	brhi	800022a0 <vLED2Task+0x30>
		{
			usart_write_line (serialPORT_USART, "LED2 DEADLINE MISSED\n");
			xLastWakeTime += xFreq; // Adds a period to the last wake time and rechecks if another deadline was missed
		}
		
		vTaskDelayUntil(&xLastWakeTime, xFreq ); // Sleep this task until it should toggle the led again
800022c0:	04 9b       	mov	r11,r2
800022c2:	1a 9c       	mov	r12,sp
800022c4:	f0 1f 00 07 	mcall	800022e0 <vLED2Task+0x70>
	}
800022c8:	ce 4b       	rjmp	80002290 <vLED2Task+0x20>
800022ca:	00 00       	add	r0,r0
800022cc:	80 00       	ld.sh	r0,r0[0x0]
800022ce:	2d 5c       	sub	r12,-43
800022d0:	80 00       	ld.sh	r0,r0[0x0]
800022d2:	40 70       	lddsp	r0,sp[0x1c]
800022d4:	80 00       	ld.sh	r0,r0[0x0]
800022d6:	40 80       	lddsp	r0,sp[0x20]
800022d8:	80 00       	ld.sh	r0,r0[0x0]
800022da:	21 18       	sub	r8,17
800022dc:	80 00       	ld.sh	r0,r0[0x0]
800022de:	28 08       	sub	r8,-128
800022e0:	80 00       	ld.sh	r0,r0[0x0]
800022e2:	30 f0       	mov	r0,15

800022e4 <vLED1Task>:
	}
}

// Led1 blinks every 2 sec
void vLED1Task( void *pvParameters )
{
800022e4:	eb cd 40 fc 	pushm	r2-r7,lr
800022e8:	20 1d       	sub	sp,4
	portTickType xLastWakeTime;	// Holds tick count last led toggle
	const portTickType xFreq = TASK_DELAY_MS(2000);	// Holds the period
	
	xLastWakeTime = xTaskGetTickCount(); // Sets current tick count
800022ea:	f0 1f 00 16 	mcall	80002340 <vLED1Task+0x5c>
800022ee:	fa c5 ff fc 	sub	r5,sp,-4
800022f2:	0a dc       	st.w	--r5,r12
	
	while(1)
	{
		toggleLED(LED1_BIT_VALUE);
800022f4:	fc 14 10 00 	movh	r4,0x1000
		usart_write_line (serialPORT_USART, "LED1 TOGGLE\n");
800022f8:	49 33       	lddpc	r3,80002344 <vLED1Task+0x60>
800022fa:	fe 77 18 00 	mov	r7,-59392
		
		// Detects deadline misses
		while(xTaskGetTickCount() > xLastWakeTime + xFreq) // If current tick count exceeds the last wake time + period
		{
			usart_write_line (serialPORT_USART, "LED1 DEADLINE MISSED\n");
800022fe:	49 36       	lddpc	r6,80002348 <vLED1Task+0x64>
			xLastWakeTime += xFreq; // Adds a period to the last wake time and rechecks if another deadline was missed
		}
		
		vTaskDelayUntil(&xLastWakeTime, xFreq ); // Sleep this task until it should toggle the led again
80002300:	e0 62 07 d0 	mov	r2,2000
	
	xLastWakeTime = xTaskGetTickCount(); // Sets current tick count
	
	while(1)
	{
		toggleLED(LED1_BIT_VALUE);
80002304:	08 9c       	mov	r12,r4
80002306:	f0 1f 00 12 	mcall	8000234c <vLED1Task+0x68>
		usart_write_line (serialPORT_USART, "LED1 TOGGLE\n");
8000230a:	06 9b       	mov	r11,r3
8000230c:	0e 9c       	mov	r12,r7
8000230e:	f0 1f 00 11 	mcall	80002350 <vLED1Task+0x6c>
		
		// Detects deadline misses
		while(xTaskGetTickCount() > xLastWakeTime + xFreq) // If current tick count exceeds the last wake time + period
80002312:	c0 98       	rjmp	80002324 <vLED1Task+0x40>
		{
			usart_write_line (serialPORT_USART, "LED1 DEADLINE MISSED\n");
80002314:	0c 9b       	mov	r11,r6
80002316:	0e 9c       	mov	r12,r7
80002318:	f0 1f 00 0e 	mcall	80002350 <vLED1Task+0x6c>
			xLastWakeTime += xFreq; // Adds a period to the last wake time and rechecks if another deadline was missed
8000231c:	40 08       	lddsp	r8,sp[0x0]
8000231e:	f0 c8 f8 30 	sub	r8,r8,-2000
80002322:	50 08       	stdsp	sp[0x0],r8
	{
		toggleLED(LED1_BIT_VALUE);
		usart_write_line (serialPORT_USART, "LED1 TOGGLE\n");
		
		// Detects deadline misses
		while(xTaskGetTickCount() > xLastWakeTime + xFreq) // If current tick count exceeds the last wake time + period
80002324:	f0 1f 00 07 	mcall	80002340 <vLED1Task+0x5c>
80002328:	40 08       	lddsp	r8,sp[0x0]
8000232a:	f0 c8 f8 30 	sub	r8,r8,-2000
8000232e:	10 3c       	cp.w	r12,r8
80002330:	fe 9b ff f2 	brhi	80002314 <vLED1Task+0x30>
		{
			usart_write_line (serialPORT_USART, "LED1 DEADLINE MISSED\n");
			xLastWakeTime += xFreq; // Adds a period to the last wake time and rechecks if another deadline was missed
		}
		
		vTaskDelayUntil(&xLastWakeTime, xFreq ); // Sleep this task until it should toggle the led again
80002334:	04 9b       	mov	r11,r2
80002336:	1a 9c       	mov	r12,sp
80002338:	f0 1f 00 07 	mcall	80002354 <vLED1Task+0x70>
	}
8000233c:	ce 4b       	rjmp	80002304 <vLED1Task+0x20>
8000233e:	00 00       	add	r0,r0
80002340:	80 00       	ld.sh	r0,r0[0x0]
80002342:	2d 5c       	sub	r12,-43
80002344:	80 00       	ld.sh	r0,r0[0x0]
80002346:	40 98       	lddsp	r8,sp[0x24]
80002348:	80 00       	ld.sh	r0,r0[0x0]
8000234a:	40 a8       	lddsp	r8,sp[0x28]
8000234c:	80 00       	ld.sh	r0,r0[0x0]
8000234e:	21 18       	sub	r8,17
80002350:	80 00       	ld.sh	r0,r0[0x0]
80002352:	28 08       	sub	r8,-128
80002354:	80 00       	ld.sh	r0,r0[0x0]
80002356:	30 f0       	mov	r0,15

80002358 <vLED0Task>:
	usart_init_rs232 ( configDBG_USART , & USART_OPTIONS , FOSC0 );
}

// Led0 blinks every 1 sec
void vLED0Task(void *pvParameters)
{	
80002358:	eb cd 40 fc 	pushm	r2-r7,lr
8000235c:	20 1d       	sub	sp,4
	portTickType xLastWakeTime;	// Holds tick count last led toggle
	const portTickType xFreq = TASK_DELAY_MS(1000);	// Holds the period
	
	xLastWakeTime = xTaskGetTickCount();	// Sets current tick count
8000235e:	f0 1f 00 16 	mcall	800023b4 <vLED0Task+0x5c>
80002362:	fa c5 ff fc 	sub	r5,sp,-4
80002366:	0a dc       	st.w	--r5,r12
	
	while(1)
	{
		toggleLED(LED0_BIT_VALUE);
80002368:	fc 14 08 00 	movh	r4,0x800
		usart_write_line (serialPORT_USART, "LED0 TOGGLE\n");
8000236c:	49 33       	lddpc	r3,800023b8 <vLED0Task+0x60>
8000236e:	fe 77 18 00 	mov	r7,-59392
		
		// Detects deadline misses
		while(xTaskGetTickCount() > xLastWakeTime + xFreq) // If current tick count exceeds the last wake time + period
		{
			usart_write_line (serialPORT_USART, "LED0 DEADLINE MISSED\n");
80002372:	49 36       	lddpc	r6,800023bc <vLED0Task+0x64>
			xLastWakeTime += xFreq;	// Adds a period to the last wake time and rechecks if another deadline was missed
		}
		
		vTaskDelayUntil(&xLastWakeTime, xFreq ); // Sleep this task until it should toggle the led again
80002374:	e0 62 03 e8 	mov	r2,1000
	
	xLastWakeTime = xTaskGetTickCount();	// Sets current tick count
	
	while(1)
	{
		toggleLED(LED0_BIT_VALUE);
80002378:	08 9c       	mov	r12,r4
8000237a:	f0 1f 00 12 	mcall	800023c0 <vLED0Task+0x68>
		usart_write_line (serialPORT_USART, "LED0 TOGGLE\n");
8000237e:	06 9b       	mov	r11,r3
80002380:	0e 9c       	mov	r12,r7
80002382:	f0 1f 00 11 	mcall	800023c4 <vLED0Task+0x6c>
		
		// Detects deadline misses
		while(xTaskGetTickCount() > xLastWakeTime + xFreq) // If current tick count exceeds the last wake time + period
80002386:	c0 98       	rjmp	80002398 <vLED0Task+0x40>
		{
			usart_write_line (serialPORT_USART, "LED0 DEADLINE MISSED\n");
80002388:	0c 9b       	mov	r11,r6
8000238a:	0e 9c       	mov	r12,r7
8000238c:	f0 1f 00 0e 	mcall	800023c4 <vLED0Task+0x6c>
			xLastWakeTime += xFreq;	// Adds a period to the last wake time and rechecks if another deadline was missed
80002390:	40 08       	lddsp	r8,sp[0x0]
80002392:	f0 c8 fc 18 	sub	r8,r8,-1000
80002396:	50 08       	stdsp	sp[0x0],r8
	{
		toggleLED(LED0_BIT_VALUE);
		usart_write_line (serialPORT_USART, "LED0 TOGGLE\n");
		
		// Detects deadline misses
		while(xTaskGetTickCount() > xLastWakeTime + xFreq) // If current tick count exceeds the last wake time + period
80002398:	f0 1f 00 07 	mcall	800023b4 <vLED0Task+0x5c>
8000239c:	40 08       	lddsp	r8,sp[0x0]
8000239e:	f0 c8 fc 18 	sub	r8,r8,-1000
800023a2:	10 3c       	cp.w	r12,r8
800023a4:	fe 9b ff f2 	brhi	80002388 <vLED0Task+0x30>
		{
			usart_write_line (serialPORT_USART, "LED0 DEADLINE MISSED\n");
			xLastWakeTime += xFreq;	// Adds a period to the last wake time and rechecks if another deadline was missed
		}
		
		vTaskDelayUntil(&xLastWakeTime, xFreq ); // Sleep this task until it should toggle the led again
800023a8:	04 9b       	mov	r11,r2
800023aa:	1a 9c       	mov	r12,sp
800023ac:	f0 1f 00 07 	mcall	800023c8 <vLED0Task+0x70>
	}
800023b0:	ce 4b       	rjmp	80002378 <vLED0Task+0x20>
800023b2:	00 00       	add	r0,r0
800023b4:	80 00       	ld.sh	r0,r0[0x0]
800023b6:	2d 5c       	sub	r12,-43
800023b8:	80 00       	ld.sh	r0,r0[0x0]
800023ba:	40 c0       	lddsp	r0,sp[0x30]
800023bc:	80 00       	ld.sh	r0,r0[0x0]
800023be:	40 d0       	lddsp	r0,sp[0x34]
800023c0:	80 00       	ld.sh	r0,r0[0x0]
800023c2:	21 18       	sub	r8,17
800023c4:	80 00       	ld.sh	r0,r0[0x0]
800023c6:	28 08       	sub	r8,-128
800023c8:	80 00       	ld.sh	r0,r0[0x0]
800023ca:	30 f0       	mov	r0,15

800023cc <init_usart>:
#include "gpio.h"
#include "pm.h"

// Initialize USART
void init_usart ( void )
{
800023cc:	eb cd 40 80 	pushm	r7,lr
		. charlength = 8,
		. paritytype = USART_NO_PARITY ,
		. stopbits = USART_1_STOPBIT ,
		. channelmode = USART_NORMAL_CHMODE
	};
	pm_switch_to_osc0 (& AVR32_PM , FOSC0 , OSC0_STARTUP );
800023d0:	30 3a       	mov	r10,3
800023d2:	e0 6b 1b 00 	mov	r11,6912
800023d6:	ea 1b 00 b7 	orh	r11,0xb7
800023da:	fe 7c 0c 00 	mov	r12,-62464
800023de:	f0 1f 00 10 	mcall	8000241c <init_usart+0x50>
	gpio_enable_module ( USART_SERIAL_GPIO_MAP , 2);
800023e2:	30 2b       	mov	r11,2
800023e4:	48 fc       	lddpc	r12,80002420 <init_usart+0x54>
800023e6:	f0 1f 00 10 	mcall	80002424 <init_usart+0x58>
	gpio_enable_module ( USART_DEBUG_GPIO_MAP , 2);
800023ea:	30 2b       	mov	r11,2
800023ec:	48 fc       	lddpc	r12,80002428 <init_usart+0x5c>
800023ee:	f0 1f 00 0e 	mcall	80002424 <init_usart+0x58>
	usart_init_rs232 ( serialPORT_USART , & USART_OPTIONS , FOSC0 );
800023f2:	48 f7       	lddpc	r7,8000242c <init_usart+0x60>
800023f4:	e0 6a 1b 00 	mov	r10,6912
800023f8:	ea 1a 00 b7 	orh	r10,0xb7
800023fc:	0e 9b       	mov	r11,r7
800023fe:	fe 7c 18 00 	mov	r12,-59392
80002402:	f0 1f 00 0c 	mcall	80002430 <init_usart+0x64>
	usart_init_rs232 ( configDBG_USART , & USART_OPTIONS , FOSC0 );
80002406:	e0 6a 1b 00 	mov	r10,6912
8000240a:	ea 1a 00 b7 	orh	r10,0xb7
8000240e:	0e 9b       	mov	r11,r7
80002410:	fe 7c 18 00 	mov	r12,-59392
80002414:	f0 1f 00 07 	mcall	80002430 <init_usart+0x64>
}
80002418:	e3 cd 80 80 	ldm	sp++,r7,pc
8000241c:	80 00       	ld.sh	r0,r0[0x0]
8000241e:	27 40       	sub	r0,116
80002420:	80 00       	ld.sh	r0,r0[0x0]
80002422:	41 3c       	lddsp	r12,sp[0x4c]
80002424:	80 00       	ld.sh	r0,r0[0x0]
80002426:	25 74       	sub	r4,87
80002428:	80 00       	ld.sh	r0,r0[0x0]
8000242a:	40 18       	lddsp	r8,sp[0x4]
8000242c:	80 00       	ld.sh	r0,r0[0x0]
8000242e:	40 28       	lddsp	r8,sp[0x8]
80002430:	80 00       	ld.sh	r0,r0[0x0]
80002432:	28 58       	sub	r8,-123

80002434 <main>:
	}
}


int main(void)
{
80002434:	eb cd 40 80 	pushm	r7,lr
80002438:	20 3d       	sub	sp,12
	initLED();
8000243a:	f0 1f 00 2a 	mcall	800024e0 <main+0xac>
	init_usart();
8000243e:	f0 1f 00 2a 	mcall	800024e4 <main+0xb0>
	xTaskHandle xHandle2;
	xTaskHandle xHandle3;
	
		
	// Create the task, store the handle.
	xTaskCreate(	vLED0Task,
80002442:	30 07       	mov	r7,0
80002444:	1a d7       	st.w	--sp,r7
80002446:	1a d7       	st.w	--sp,r7
80002448:	fa c8 ff f0 	sub	r8,sp,-16
8000244c:	1a d8       	st.w	--sp,r8
8000244e:	30 28       	mov	r8,2
80002450:	0e 99       	mov	r9,r7
80002452:	e0 6a 01 00 	mov	r10,256
80002456:	4a 5b       	lddpc	r11,800024e8 <main+0xb4>
80002458:	4a 5c       	lddpc	r12,800024ec <main+0xb8>
8000245a:	f0 1f 00 26 	mcall	800024f0 <main+0xbc>
					configMINIMAL_STACK_SIZE,
					NULL,
					2,
					&xHandle1);
					
	xTaskCreate(	vLED1Task, "vLED1Task", configMINIMAL_STACK_SIZE, NULL, 2, &xHandle2);
8000245e:	1a d7       	st.w	--sp,r7
80002460:	1a d7       	st.w	--sp,r7
80002462:	fa c8 ff e8 	sub	r8,sp,-24
80002466:	1a d8       	st.w	--sp,r8
80002468:	30 28       	mov	r8,2
8000246a:	0e 99       	mov	r9,r7
8000246c:	e0 6a 01 00 	mov	r10,256
80002470:	4a 1b       	lddpc	r11,800024f4 <main+0xc0>
80002472:	4a 2c       	lddpc	r12,800024f8 <main+0xc4>
80002474:	f0 1f 00 1f 	mcall	800024f0 <main+0xbc>
	
	xTaskCreate(	vLED2Task, "vLED2Task", configMINIMAL_STACK_SIZE, NULL, 2, &xHandle3);
80002478:	1a d7       	st.w	--sp,r7
8000247a:	1a d7       	st.w	--sp,r7
8000247c:	fa c8 ff e0 	sub	r8,sp,-32
80002480:	1a d8       	st.w	--sp,r8
80002482:	30 28       	mov	r8,2
80002484:	0e 99       	mov	r9,r7
80002486:	e0 6a 01 00 	mov	r10,256
8000248a:	49 db       	lddpc	r11,800024fc <main+0xc8>
8000248c:	49 dc       	lddpc	r12,80002500 <main+0xcc>
8000248e:	f0 1f 00 19 	mcall	800024f0 <main+0xbc>
	
	xTaskCreate(	vButton0Task, "vButton0Task", configMINIMAL_STACK_SIZE, xHandle1, 1, NULL);
80002492:	2f 7d       	sub	sp,-36
80002494:	1a d7       	st.w	--sp,r7
80002496:	1a d7       	st.w	--sp,r7
80002498:	1a d7       	st.w	--sp,r7
8000249a:	30 18       	mov	r8,1
8000249c:	40 59       	lddsp	r9,sp[0x14]
8000249e:	e0 6a 01 00 	mov	r10,256
800024a2:	49 9b       	lddpc	r11,80002504 <main+0xd0>
800024a4:	49 9c       	lddpc	r12,80002508 <main+0xd4>
800024a6:	f0 1f 00 13 	mcall	800024f0 <main+0xbc>
	
	xTaskCreate(	vButton1Task, "vButton1Task", configMINIMAL_STACK_SIZE, xHandle2, 1, NULL);
800024aa:	1a d7       	st.w	--sp,r7
800024ac:	1a d7       	st.w	--sp,r7
800024ae:	1a d7       	st.w	--sp,r7
800024b0:	30 18       	mov	r8,1
800024b2:	40 79       	lddsp	r9,sp[0x1c]
800024b4:	e0 6a 01 00 	mov	r10,256
800024b8:	49 5b       	lddpc	r11,8000250c <main+0xd8>
800024ba:	49 6c       	lddpc	r12,80002510 <main+0xdc>
800024bc:	f0 1f 00 0d 	mcall	800024f0 <main+0xbc>
	
	xTaskCreate(	vButton2Task, "vButton2Task", configMINIMAL_STACK_SIZE, xHandle3, 1, NULL);
800024c0:	1a d7       	st.w	--sp,r7
800024c2:	1a d7       	st.w	--sp,r7
800024c4:	1a d7       	st.w	--sp,r7
800024c6:	30 18       	mov	r8,1
800024c8:	40 99       	lddsp	r9,sp[0x24]
800024ca:	e0 6a 01 00 	mov	r10,256
800024ce:	49 2b       	lddpc	r11,80002514 <main+0xe0>
800024d0:	49 2c       	lddpc	r12,80002518 <main+0xe4>
800024d2:	f0 1f 00 08 	mcall	800024f0 <main+0xbc>
	
	vTaskStartScheduler();
800024d6:	2f 7d       	sub	sp,-36
800024d8:	f0 1f 00 11 	mcall	8000251c <main+0xe8>
800024dc:	c0 08       	rjmp	800024dc <main+0xa8>
800024de:	00 00       	add	r0,r0
800024e0:	80 00       	ld.sh	r0,r0[0x0]
800024e2:	20 e8       	sub	r8,14
800024e4:	80 00       	ld.sh	r0,r0[0x0]
800024e6:	23 cc       	sub	r12,60
800024e8:	80 00       	ld.sh	r0,r0[0x0]
800024ea:	40 e8       	lddsp	r8,sp[0x38]
800024ec:	80 00       	ld.sh	r0,r0[0x0]
800024ee:	23 58       	sub	r8,53
800024f0:	80 00       	ld.sh	r0,r0[0x0]
800024f2:	31 f0       	mov	r0,31
800024f4:	80 00       	ld.sh	r0,r0[0x0]
800024f6:	40 f4       	lddsp	r4,sp[0x3c]
800024f8:	80 00       	ld.sh	r0,r0[0x0]
800024fa:	22 e4       	sub	r4,46
800024fc:	80 00       	ld.sh	r0,r0[0x0]
800024fe:	41 00       	lddsp	r0,sp[0x40]
80002500:	80 00       	ld.sh	r0,r0[0x0]
80002502:	22 70       	sub	r0,39
80002504:	80 00       	ld.sh	r0,r0[0x0]
80002506:	41 0c       	lddsp	r12,sp[0x40]
80002508:	80 00       	ld.sh	r0,r0[0x0]
8000250a:	22 04       	sub	r4,32
8000250c:	80 00       	ld.sh	r0,r0[0x0]
8000250e:	41 1c       	lddsp	r12,sp[0x44]
80002510:	80 00       	ld.sh	r0,r0[0x0]
80002512:	21 98       	sub	r8,25
80002514:	80 00       	ld.sh	r0,r0[0x0]
80002516:	41 2c       	lddsp	r12,sp[0x48]
80002518:	80 00       	ld.sh	r0,r0[0x0]
8000251a:	21 2c       	sub	r12,18
8000251c:	80 00       	ld.sh	r0,r0[0x0]
8000251e:	33 d4       	mov	r4,61

80002520 <gpio_enable_module_pin>:
80002520:	f8 08 16 05 	lsr	r8,r12,0x5
80002524:	a9 68       	lsl	r8,0x8
80002526:	e0 28 f0 00 	sub	r8,61440
8000252a:	58 1b       	cp.w	r11,1
8000252c:	c0 d0       	breq	80002546 <gpio_enable_module_pin+0x26>
8000252e:	c0 63       	brcs	8000253a <gpio_enable_module_pin+0x1a>
80002530:	58 2b       	cp.w	r11,2
80002532:	c1 00       	breq	80002552 <gpio_enable_module_pin+0x32>
80002534:	58 3b       	cp.w	r11,3
80002536:	c1 40       	breq	8000255e <gpio_enable_module_pin+0x3e>
80002538:	5e ff       	retal	1
8000253a:	30 19       	mov	r9,1
8000253c:	f2 0c 09 49 	lsl	r9,r9,r12
80002540:	91 69       	st.w	r8[0x18],r9
80002542:	91 a9       	st.w	r8[0x28],r9
80002544:	c1 28       	rjmp	80002568 <gpio_enable_module_pin+0x48>
80002546:	30 19       	mov	r9,1
80002548:	f2 0c 09 49 	lsl	r9,r9,r12
8000254c:	91 59       	st.w	r8[0x14],r9
8000254e:	91 a9       	st.w	r8[0x28],r9
80002550:	c0 c8       	rjmp	80002568 <gpio_enable_module_pin+0x48>
80002552:	30 19       	mov	r9,1
80002554:	f2 0c 09 49 	lsl	r9,r9,r12
80002558:	91 69       	st.w	r8[0x18],r9
8000255a:	91 99       	st.w	r8[0x24],r9
8000255c:	c0 68       	rjmp	80002568 <gpio_enable_module_pin+0x48>
8000255e:	30 19       	mov	r9,1
80002560:	f2 0c 09 49 	lsl	r9,r9,r12
80002564:	91 59       	st.w	r8[0x14],r9
80002566:	91 99       	st.w	r8[0x24],r9
80002568:	30 19       	mov	r9,1
8000256a:	f2 0c 09 4c 	lsl	r12,r9,r12
8000256e:	91 2c       	st.w	r8[0x8],r12
80002570:	5e fd       	retal	0
80002572:	d7 03       	nop

80002574 <gpio_enable_module>:
80002574:	d4 21       	pushm	r4-r7,lr
80002576:	18 97       	mov	r7,r12
80002578:	16 94       	mov	r4,r11
8000257a:	58 0b       	cp.w	r11,0
8000257c:	c0 31       	brne	80002582 <gpio_enable_module+0xe>
8000257e:	30 05       	mov	r5,0
80002580:	c0 d8       	rjmp	8000259a <gpio_enable_module+0x26>
80002582:	30 06       	mov	r6,0
80002584:	0c 95       	mov	r5,r6
80002586:	6e 1b       	ld.w	r11,r7[0x4]
80002588:	6e 0c       	ld.w	r12,r7[0x0]
8000258a:	f0 1f 00 06 	mcall	800025a0 <gpio_enable_module+0x2c>
8000258e:	18 45       	or	r5,r12
80002590:	2f 87       	sub	r7,-8
80002592:	2f f6       	sub	r6,-1
80002594:	0c 34       	cp.w	r4,r6
80002596:	fe 9b ff f8 	brhi	80002586 <gpio_enable_module+0x12>
8000259a:	0a 9c       	mov	r12,r5
8000259c:	d8 22       	popm	r4-r7,pc
8000259e:	00 00       	add	r0,r0
800025a0:	80 00       	ld.sh	r0,r0[0x0]
800025a2:	25 20       	sub	r0,82

800025a4 <_unhandled_interrupt>:
800025a4:	c0 08       	rjmp	800025a4 <_unhandled_interrupt>
800025a6:	d7 03       	nop

800025a8 <INTC_register_interrupt>:
800025a8:	f6 08 16 05 	lsr	r8,r11,0x5
800025ac:	49 99       	lddpc	r9,80002610 <INTC_register_interrupt+0x68>
800025ae:	f2 08 00 39 	add	r9,r9,r8<<0x3
800025b2:	f7 db c0 05 	bfextu	r11,r11,0x0,0x5
800025b6:	72 19       	ld.w	r9,r9[0x4]
800025b8:	f2 0b 09 2c 	st.w	r9[r11<<0x2],r12
800025bc:	58 0a       	cp.w	r10,0
800025be:	c0 91       	brne	800025d0 <INTC_register_interrupt+0x28>
800025c0:	49 59       	lddpc	r9,80002614 <INTC_register_interrupt+0x6c>
800025c2:	49 6a       	lddpc	r10,80002618 <INTC_register_interrupt+0x70>
800025c4:	12 1a       	sub	r10,r9
800025c6:	fe 79 08 00 	mov	r9,-63488
800025ca:	f2 08 09 2a 	st.w	r9[r8<<0x2],r10
800025ce:	5e fc       	retal	r12
800025d0:	58 1a       	cp.w	r10,1
800025d2:	c0 a1       	brne	800025e6 <INTC_register_interrupt+0x3e>
800025d4:	49 09       	lddpc	r9,80002614 <INTC_register_interrupt+0x6c>
800025d6:	49 2a       	lddpc	r10,8000261c <INTC_register_interrupt+0x74>
800025d8:	12 1a       	sub	r10,r9
800025da:	bf aa       	sbr	r10,0x1e
800025dc:	fe 79 08 00 	mov	r9,-63488
800025e0:	f2 08 09 2a 	st.w	r9[r8<<0x2],r10
800025e4:	5e fc       	retal	r12
800025e6:	58 2a       	cp.w	r10,2
800025e8:	c0 a1       	brne	800025fc <INTC_register_interrupt+0x54>
800025ea:	48 b9       	lddpc	r9,80002614 <INTC_register_interrupt+0x6c>
800025ec:	48 da       	lddpc	r10,80002620 <INTC_register_interrupt+0x78>
800025ee:	12 1a       	sub	r10,r9
800025f0:	bf ba       	sbr	r10,0x1f
800025f2:	fe 79 08 00 	mov	r9,-63488
800025f6:	f2 08 09 2a 	st.w	r9[r8<<0x2],r10
800025fa:	5e fc       	retal	r12
800025fc:	48 69       	lddpc	r9,80002614 <INTC_register_interrupt+0x6c>
800025fe:	48 aa       	lddpc	r10,80002624 <INTC_register_interrupt+0x7c>
80002600:	12 1a       	sub	r10,r9
80002602:	ea 1a c0 00 	orh	r10,0xc000
80002606:	fe 79 08 00 	mov	r9,-63488
8000260a:	f2 08 09 2a 	st.w	r9[r8<<0x2],r10
8000260e:	5e fc       	retal	r12
80002610:	80 00       	ld.sh	r0,r0[0x0]
80002612:	41 4c       	lddsp	r12,sp[0x50]
80002614:	80 00       	ld.sh	r0,r0[0x0]
80002616:	3e 00       	mov	r0,-32
80002618:	80 00       	ld.sh	r0,r0[0x0]
8000261a:	3f 04       	mov	r4,-16
8000261c:	80 00       	ld.sh	r0,r0[0x0]
8000261e:	3f 12       	mov	r2,-15
80002620:	80 00       	ld.sh	r0,r0[0x0]
80002622:	3f 20       	mov	r0,-14
80002624:	80 00       	ld.sh	r0,r0[0x0]
80002626:	3f 2e       	mov	lr,-14

80002628 <INTC_init_interrupts>:
80002628:	d4 21       	pushm	r4-r7,lr
8000262a:	49 18       	lddpc	r8,8000266c <INTC_init_interrupts+0x44>
8000262c:	e3 b8 00 01 	mtsr	0x4,r8
80002630:	49 0e       	lddpc	lr,80002670 <INTC_init_interrupts+0x48>
80002632:	30 07       	mov	r7,0
80002634:	0e 94       	mov	r4,r7
80002636:	49 0c       	lddpc	r12,80002674 <INTC_init_interrupts+0x4c>
80002638:	49 05       	lddpc	r5,80002678 <INTC_init_interrupts+0x50>
8000263a:	10 15       	sub	r5,r8
8000263c:	fe 76 08 00 	mov	r6,-63488
80002640:	c1 08       	rjmp	80002660 <INTC_init_interrupts+0x38>
80002642:	08 98       	mov	r8,r4
80002644:	7c 1b       	ld.w	r11,lr[0x4]
80002646:	7c 0a       	ld.w	r10,lr[0x0]
80002648:	f6 08 09 2c 	st.w	r11[r8<<0x2],r12
8000264c:	2f f8       	sub	r8,-1
8000264e:	10 3a       	cp.w	r10,r8
80002650:	fe 9b ff fc 	brhi	80002648 <INTC_init_interrupts+0x20>
80002654:	ec 07 09 25 	st.w	r6[r7<<0x2],r5
80002658:	2f f7       	sub	r7,-1
8000265a:	2f 8e       	sub	lr,-8
8000265c:	59 47       	cp.w	r7,20
8000265e:	c0 50       	breq	80002668 <INTC_init_interrupts+0x40>
80002660:	7c 08       	ld.w	r8,lr[0x0]
80002662:	58 08       	cp.w	r8,0
80002664:	ce f1       	brne	80002642 <INTC_init_interrupts+0x1a>
80002666:	cf 7b       	rjmp	80002654 <INTC_init_interrupts+0x2c>
80002668:	d8 22       	popm	r4-r7,pc
8000266a:	00 00       	add	r0,r0
8000266c:	80 00       	ld.sh	r0,r0[0x0]
8000266e:	3e 00       	mov	r0,-32
80002670:	80 00       	ld.sh	r0,r0[0x0]
80002672:	41 4c       	lddsp	r12,sp[0x50]
80002674:	80 00       	ld.sh	r0,r0[0x0]
80002676:	25 a4       	sub	r4,90
80002678:	80 00       	ld.sh	r0,r0[0x0]
8000267a:	3f 04       	mov	r4,-16

8000267c <_get_interrupt_handler>:
8000267c:	fe 78 08 00 	mov	r8,-63488
80002680:	e0 69 00 83 	mov	r9,131
80002684:	f2 0c 01 0c 	sub	r12,r9,r12
80002688:	f0 0c 03 29 	ld.w	r9,r8[r12<<0x2]
8000268c:	f2 ca ff c0 	sub	r10,r9,-64
80002690:	f0 0a 03 28 	ld.w	r8,r8[r10<<0x2]
80002694:	58 08       	cp.w	r8,0
80002696:	c0 21       	brne	8000269a <_get_interrupt_handler+0x1e>
80002698:	5e fd       	retal	0
8000269a:	f0 08 12 00 	clz	r8,r8
8000269e:	48 5a       	lddpc	r10,800026b0 <_get_interrupt_handler+0x34>
800026a0:	f4 09 00 39 	add	r9,r10,r9<<0x3
800026a4:	f0 08 11 1f 	rsub	r8,r8,31
800026a8:	72 19       	ld.w	r9,r9[0x4]
800026aa:	f2 08 03 2c 	ld.w	r12,r9[r8<<0x2]
800026ae:	5e fc       	retal	r12
800026b0:	80 00       	ld.sh	r0,r0[0x0]
800026b2:	41 4c       	lddsp	r12,sp[0x50]

800026b4 <pm_set_osc0_mode>:
800026b4:	78 a8       	ld.w	r8,r12[0x28]
800026b6:	f1 db d0 03 	bfins	r8,r11,0x0,0x3
800026ba:	99 a8       	st.w	r12[0x28],r8
800026bc:	5e fc       	retal	r12
800026be:	d7 03       	nop

800026c0 <pm_enable_osc0_crystal>:
800026c0:	d4 01       	pushm	lr
800026c2:	ec 5b bb 9f 	cp.w	r11,899999
800026c6:	e0 8b 00 04 	brhi	800026ce <pm_enable_osc0_crystal+0xe>
800026ca:	30 4b       	mov	r11,4
800026cc:	c1 38       	rjmp	800026f2 <pm_enable_osc0_crystal+0x32>
800026ce:	e0 68 c6 bf 	mov	r8,50879
800026d2:	ea 18 00 2d 	orh	r8,0x2d
800026d6:	10 3b       	cp.w	r11,r8
800026d8:	e0 8b 00 04 	brhi	800026e0 <pm_enable_osc0_crystal+0x20>
800026dc:	30 5b       	mov	r11,5
800026de:	c0 a8       	rjmp	800026f2 <pm_enable_osc0_crystal+0x32>
800026e0:	e0 68 12 00 	mov	r8,4608
800026e4:	ea 18 00 7a 	orh	r8,0x7a
800026e8:	10 3b       	cp.w	r11,r8
800026ea:	f9 bb 03 06 	movlo	r11,6
800026ee:	f9 bb 02 07 	movhs	r11,7
800026f2:	f0 1f 00 02 	mcall	800026f8 <pm_enable_osc0_crystal+0x38>
800026f6:	d8 02       	popm	pc
800026f8:	80 00       	ld.sh	r0,r0[0x0]
800026fa:	26 b4       	sub	r4,107

800026fc <pm_enable_clk0_no_wait>:
800026fc:	78 a8       	ld.w	r8,r12[0x28]
800026fe:	f1 db d1 03 	bfins	r8,r11,0x8,0x3
80002702:	99 a8       	st.w	r12[0x28],r8
80002704:	78 08       	ld.w	r8,r12[0x0]
80002706:	a3 a8       	sbr	r8,0x2
80002708:	99 08       	st.w	r12[0x0],r8
8000270a:	5e fc       	retal	r12

8000270c <pm_wait_for_clk0_ready>:
8000270c:	79 58       	ld.w	r8,r12[0x54]
8000270e:	e2 18 00 80 	andl	r8,0x80,COH
80002712:	cf d0       	breq	8000270c <pm_wait_for_clk0_ready>
80002714:	5e fc       	retal	r12
80002716:	d7 03       	nop

80002718 <pm_enable_clk0>:
80002718:	eb cd 40 80 	pushm	r7,lr
8000271c:	18 97       	mov	r7,r12
8000271e:	f0 1f 00 04 	mcall	8000272c <pm_enable_clk0+0x14>
80002722:	0e 9c       	mov	r12,r7
80002724:	f0 1f 00 03 	mcall	80002730 <pm_enable_clk0+0x18>
80002728:	e3 cd 80 80 	ldm	sp++,r7,pc
8000272c:	80 00       	ld.sh	r0,r0[0x0]
8000272e:	26 fc       	sub	r12,111
80002730:	80 00       	ld.sh	r0,r0[0x0]
80002732:	27 0c       	sub	r12,112

80002734 <pm_switch_to_clock>:
80002734:	78 08       	ld.w	r8,r12[0x0]
80002736:	f1 db d0 02 	bfins	r8,r11,0x0,0x2
8000273a:	99 08       	st.w	r12[0x0],r8
8000273c:	5e fc       	retal	r12
8000273e:	d7 03       	nop

80002740 <pm_switch_to_osc0>:
80002740:	eb cd 40 c0 	pushm	r6-r7,lr
80002744:	18 97       	mov	r7,r12
80002746:	14 96       	mov	r6,r10
80002748:	f0 1f 00 06 	mcall	80002760 <pm_switch_to_osc0+0x20>
8000274c:	0c 9b       	mov	r11,r6
8000274e:	0e 9c       	mov	r12,r7
80002750:	f0 1f 00 05 	mcall	80002764 <pm_switch_to_osc0+0x24>
80002754:	30 1b       	mov	r11,1
80002756:	0e 9c       	mov	r12,r7
80002758:	f0 1f 00 04 	mcall	80002768 <pm_switch_to_osc0+0x28>
8000275c:	e3 cd 80 c0 	ldm	sp++,r6-r7,pc
80002760:	80 00       	ld.sh	r0,r0[0x0]
80002762:	26 c0       	sub	r0,108
80002764:	80 00       	ld.sh	r0,r0[0x0]
80002766:	27 18       	sub	r8,113
80002768:	80 00       	ld.sh	r0,r0[0x0]
8000276a:	27 34       	sub	r4,115

8000276c <usart_set_async_baudrate>:
8000276c:	d4 01       	pushm	lr
8000276e:	f6 08 15 04 	lsl	r8,r11,0x4
80002772:	14 38       	cp.w	r8,r10
80002774:	f9 b8 08 10 	movls	r8,16
80002778:	f9 b8 0b 08 	movhi	r8,8
8000277c:	f0 0b 02 4b 	mul	r11,r8,r11
80002780:	f6 09 16 01 	lsr	r9,r11,0x1
80002784:	f2 0a 00 3a 	add	r10,r9,r10<<0x3
80002788:	f4 0b 0d 0a 	divu	r10,r10,r11
8000278c:	f4 09 16 03 	lsr	r9,r10,0x3
80002790:	f2 cb 00 01 	sub	r11,r9,1
80002794:	e0 4b ff fe 	cp.w	r11,65534
80002798:	e0 88 00 03 	brls	8000279e <usart_set_async_baudrate+0x32>
8000279c:	da 0a       	popm	pc,r12=1
8000279e:	78 1b       	ld.w	r11,r12[0x4]
800027a0:	e8 6e 00 00 	mov	lr,524288
800027a4:	59 08       	cp.w	r8,16
800027a6:	fc 08 17 10 	movne	r8,lr
800027aa:	f9 b8 00 00 	moveq	r8,0
800027ae:	e4 1b ff f7 	andh	r11,0xfff7
800027b2:	e0 1b fe cf 	andl	r11,0xfecf
800027b6:	16 48       	or	r8,r11
800027b8:	99 18       	st.w	r12[0x4],r8
800027ba:	f5 da c0 03 	bfextu	r10,r10,0x0,0x3
800027be:	f3 ea 11 09 	or	r9,r9,r10<<0x10
800027c2:	99 89       	st.w	r12[0x20],r9
800027c4:	d8 0a       	popm	pc,r12=0

800027c6 <usart_write_char>:
800027c6:	78 58       	ld.w	r8,r12[0x14]
800027c8:	e2 18 00 02 	andl	r8,0x2,COH
800027cc:	c0 31       	brne	800027d2 <usart_write_char+0xc>
800027ce:	30 2c       	mov	r12,2
800027d0:	5e fc       	retal	r12
800027d2:	f7 db c0 09 	bfextu	r11,r11,0x0,0x9
800027d6:	99 7b       	st.w	r12[0x1c],r11
800027d8:	5e fd       	retal	0
800027da:	d7 03       	nop

800027dc <usart_putchar>:
800027dc:	eb cd 40 e0 	pushm	r5-r7,lr
800027e0:	18 96       	mov	r6,r12
800027e2:	16 95       	mov	r5,r11
800027e4:	e0 67 27 0f 	mov	r7,9999
800027e8:	c0 68       	rjmp	800027f4 <usart_putchar+0x18>
800027ea:	58 07       	cp.w	r7,0
800027ec:	c0 31       	brne	800027f2 <usart_putchar+0x16>
800027ee:	e3 cf c0 e0 	ldm	sp++,r5-r7,pc,r12=-1
800027f2:	20 17       	sub	r7,1
800027f4:	0a 9b       	mov	r11,r5
800027f6:	0c 9c       	mov	r12,r6
800027f8:	f0 1f 00 03 	mcall	80002804 <usart_putchar+0x28>
800027fc:	cf 71       	brne	800027ea <usart_putchar+0xe>
800027fe:	e3 cd 80 e0 	ldm	sp++,r5-r7,pc
80002802:	00 00       	add	r0,r0
80002804:	80 00       	ld.sh	r0,r0[0x0]
80002806:	27 c6       	sub	r6,124

80002808 <usart_write_line>:
80002808:	eb cd 40 c0 	pushm	r6-r7,lr
8000280c:	18 96       	mov	r6,r12
8000280e:	16 97       	mov	r7,r11
80002810:	17 8b       	ld.ub	r11,r11[0x0]
80002812:	58 0b       	cp.w	r11,0
80002814:	c0 80       	breq	80002824 <usart_write_line+0x1c>
80002816:	2f f7       	sub	r7,-1
80002818:	0c 9c       	mov	r12,r6
8000281a:	f0 1f 00 04 	mcall	80002828 <usart_write_line+0x20>
8000281e:	0f 8b       	ld.ub	r11,r7[0x0]
80002820:	58 0b       	cp.w	r11,0
80002822:	cf a1       	brne	80002816 <usart_write_line+0xe>
80002824:	e3 cd 80 c0 	ldm	sp++,r6-r7,pc
80002828:	80 00       	ld.sh	r0,r0[0x0]
8000282a:	27 dc       	sub	r12,125

8000282c <usart_reset>:
8000282c:	e1 b8 00 00 	mfsr	r8,0x0
80002830:	e6 18 00 01 	andh	r8,0x1,COH
80002834:	c0 71       	brne	80002842 <usart_reset+0x16>
80002836:	d3 03       	ssrf	0x10
80002838:	3f f8       	mov	r8,-1
8000283a:	99 38       	st.w	r12[0xc],r8
8000283c:	78 58       	ld.w	r8,r12[0x14]
8000283e:	d5 03       	csrf	0x10
80002840:	c0 48       	rjmp	80002848 <usart_reset+0x1c>
80002842:	3f f8       	mov	r8,-1
80002844:	99 38       	st.w	r12[0xc],r8
80002846:	78 58       	ld.w	r8,r12[0x14]
80002848:	30 08       	mov	r8,0
8000284a:	99 18       	st.w	r12[0x4],r8
8000284c:	99 98       	st.w	r12[0x24],r8
8000284e:	99 a8       	st.w	r12[0x28],r8
80002850:	ea 68 61 0c 	mov	r8,680204
80002854:	99 08       	st.w	r12[0x0],r8
80002856:	5e fc       	retal	r12

80002858 <usart_init_rs232>:
80002858:	eb cd 40 e0 	pushm	r5-r7,lr
8000285c:	18 96       	mov	r6,r12
8000285e:	16 97       	mov	r7,r11
80002860:	14 95       	mov	r5,r10
80002862:	f0 1f 00 2f 	mcall	8000291c <usart_init_rs232+0xc4>
80002866:	58 07       	cp.w	r7,0
80002868:	c5 80       	breq	80002918 <usart_init_rs232+0xc0>
8000286a:	0f c8       	ld.ub	r8,r7[0x4]
8000286c:	30 49       	mov	r9,4
8000286e:	f2 08 18 00 	cp.b	r8,r9
80002872:	e0 88 00 53 	brls	80002918 <usart_init_rs232+0xc0>
80002876:	30 99       	mov	r9,9
80002878:	f2 08 18 00 	cp.b	r8,r9
8000287c:	e0 8b 00 4e 	brhi	80002918 <usart_init_rs232+0xc0>
80002880:	0f d9       	ld.ub	r9,r7[0x5]
80002882:	30 78       	mov	r8,7
80002884:	f0 09 18 00 	cp.b	r9,r8
80002888:	e0 8b 00 48 	brhi	80002918 <usart_init_rs232+0xc0>
8000288c:	8e 39       	ld.sh	r9,r7[0x6]
8000288e:	e0 68 01 01 	mov	r8,257
80002892:	f0 09 19 00 	cp.h	r9,r8
80002896:	e0 8b 00 41 	brhi	80002918 <usart_init_rs232+0xc0>
8000289a:	ef 39 00 08 	ld.ub	r9,r7[8]
8000289e:	30 38       	mov	r8,3
800028a0:	f0 09 18 00 	cp.b	r9,r8
800028a4:	e0 8b 00 3a 	brhi	80002918 <usart_init_rs232+0xc0>
800028a8:	0a 9a       	mov	r10,r5
800028aa:	6e 0b       	ld.w	r11,r7[0x0]
800028ac:	0c 9c       	mov	r12,r6
800028ae:	f0 1f 00 1d 	mcall	80002920 <usart_init_rs232+0xc8>
800028b2:	58 1c       	cp.w	r12,1
800028b4:	c3 20       	breq	80002918 <usart_init_rs232+0xc0>
800028b6:	0f c8       	ld.ub	r8,r7[0x4]
800028b8:	30 99       	mov	r9,9
800028ba:	f2 08 18 00 	cp.b	r8,r9
800028be:	c0 51       	brne	800028c8 <usart_init_rs232+0x70>
800028c0:	6c 18       	ld.w	r8,r6[0x4]
800028c2:	b1 b8       	sbr	r8,0x11
800028c4:	8d 18       	st.w	r6[0x4],r8
800028c6:	c0 68       	rjmp	800028d2 <usart_init_rs232+0x7a>
800028c8:	6c 19       	ld.w	r9,r6[0x4]
800028ca:	20 58       	sub	r8,5
800028cc:	f3 e8 10 68 	or	r8,r9,r8<<0x6
800028d0:	8d 18       	st.w	r6[0x4],r8
800028d2:	6c 19       	ld.w	r9,r6[0x4]
800028d4:	ef 3a 00 08 	ld.ub	r10,r7[8]
800028d8:	0f d8       	ld.ub	r8,r7[0x5]
800028da:	a9 78       	lsl	r8,0x9
800028dc:	f1 ea 10 e8 	or	r8,r8,r10<<0xe
800028e0:	12 48       	or	r8,r9
800028e2:	8d 18       	st.w	r6[0x4],r8
800028e4:	8e 38       	ld.sh	r8,r7[0x6]
800028e6:	30 29       	mov	r9,2
800028e8:	f2 08 19 00 	cp.h	r8,r9
800028ec:	e0 88 00 09 	brls	800028fe <usart_init_rs232+0xa6>
800028f0:	6c 18       	ld.w	r8,r6[0x4]
800028f2:	ad b8       	sbr	r8,0xd
800028f4:	8d 18       	st.w	r6[0x4],r8
800028f6:	8e b8       	ld.uh	r8,r7[0x6]
800028f8:	20 28       	sub	r8,2
800028fa:	8d a8       	st.w	r6[0x28],r8
800028fc:	c0 68       	rjmp	80002908 <usart_init_rs232+0xb0>
800028fe:	6c 19       	ld.w	r9,r6[0x4]
80002900:	5c 78       	castu.h	r8
80002902:	f3 e8 10 c8 	or	r8,r9,r8<<0xc
80002906:	8d 18       	st.w	r6[0x4],r8
80002908:	6c 18       	ld.w	r8,r6[0x4]
8000290a:	e0 18 ff f0 	andl	r8,0xfff0
8000290e:	8d 18       	st.w	r6[0x4],r8
80002910:	35 08       	mov	r8,80
80002912:	8d 08       	st.w	r6[0x0],r8
80002914:	e3 cf 80 e0 	ldm	sp++,r5-r7,pc,r12=0
80002918:	e3 cf 90 e0 	ldm	sp++,r5-r7,pc,r12=1
8000291c:	80 00       	ld.sh	r0,r0[0x0]
8000291e:	28 2c       	sub	r12,-126
80002920:	80 00       	ld.sh	r0,r0[0x0]
80002922:	27 6c       	sub	r12,118

80002924 <vListInitialise>:
80002924:	f8 c8 ff f8 	sub	r8,r12,-8
80002928:	99 18       	st.w	r12[0x4],r8
8000292a:	3f f9       	mov	r9,-1
8000292c:	99 29       	st.w	r12[0x8],r9
8000292e:	99 38       	st.w	r12[0xc],r8
80002930:	99 48       	st.w	r12[0x10],r8
80002932:	30 08       	mov	r8,0
80002934:	99 08       	st.w	r12[0x0],r8
80002936:	5e fc       	retal	r12

80002938 <vListInitialiseItem>:
80002938:	30 08       	mov	r8,0
8000293a:	99 48       	st.w	r12[0x10],r8
8000293c:	5e fc       	retal	r12

8000293e <vListInsertEnd>:
8000293e:	78 18       	ld.w	r8,r12[0x4]
80002940:	70 19       	ld.w	r9,r8[0x4]
80002942:	97 19       	st.w	r11[0x4],r9
80002944:	78 19       	ld.w	r9,r12[0x4]
80002946:	97 29       	st.w	r11[0x8],r9
80002948:	70 19       	ld.w	r9,r8[0x4]
8000294a:	93 2b       	st.w	r9[0x8],r11
8000294c:	91 1b       	st.w	r8[0x4],r11
8000294e:	99 1b       	st.w	r12[0x4],r11
80002950:	97 4c       	st.w	r11[0x10],r12
80002952:	78 08       	ld.w	r8,r12[0x0]
80002954:	2f f8       	sub	r8,-1
80002956:	99 08       	st.w	r12[0x0],r8
80002958:	5e fc       	retal	r12

8000295a <vListInsert>:
8000295a:	76 0a       	ld.w	r10,r11[0x0]
8000295c:	5b fa       	cp.w	r10,-1
8000295e:	c0 31       	brne	80002964 <vListInsert+0xa>
80002960:	78 48       	ld.w	r8,r12[0x10]
80002962:	c0 c8       	rjmp	8000297a <vListInsert+0x20>
80002964:	f8 c8 ff f8 	sub	r8,r12,-8
80002968:	70 19       	ld.w	r9,r8[0x4]
8000296a:	72 09       	ld.w	r9,r9[0x0]
8000296c:	12 3a       	cp.w	r10,r9
8000296e:	c0 63       	brcs	8000297a <vListInsert+0x20>
80002970:	70 18       	ld.w	r8,r8[0x4]
80002972:	70 19       	ld.w	r9,r8[0x4]
80002974:	72 09       	ld.w	r9,r9[0x0]
80002976:	12 3a       	cp.w	r10,r9
80002978:	cf c2       	brcc	80002970 <vListInsert+0x16>
8000297a:	70 19       	ld.w	r9,r8[0x4]
8000297c:	97 19       	st.w	r11[0x4],r9
8000297e:	93 2b       	st.w	r9[0x8],r11
80002980:	97 28       	st.w	r11[0x8],r8
80002982:	91 1b       	st.w	r8[0x4],r11
80002984:	97 4c       	st.w	r11[0x10],r12
80002986:	78 08       	ld.w	r8,r12[0x0]
80002988:	2f f8       	sub	r8,-1
8000298a:	99 08       	st.w	r12[0x0],r8
8000298c:	5e fc       	retal	r12

8000298e <vListRemove>:
8000298e:	78 18       	ld.w	r8,r12[0x4]
80002990:	78 29       	ld.w	r9,r12[0x8]
80002992:	91 29       	st.w	r8[0x8],r9
80002994:	78 28       	ld.w	r8,r12[0x8]
80002996:	78 19       	ld.w	r9,r12[0x4]
80002998:	91 19       	st.w	r8[0x4],r9
8000299a:	78 48       	ld.w	r8,r12[0x10]
8000299c:	70 19       	ld.w	r9,r8[0x4]
8000299e:	18 39       	cp.w	r9,r12
800029a0:	f9 f9 00 02 	ld.weq	r9,r12[0x8]
800029a4:	f1 f9 0a 01 	st.weq	r8[0x4],r9
800029a8:	30 09       	mov	r9,0
800029aa:	99 49       	st.w	r12[0x10],r9
800029ac:	70 09       	ld.w	r9,r8[0x0]
800029ae:	20 19       	sub	r9,1
800029b0:	91 09       	st.w	r8[0x0],r9
800029b2:	5e fc       	retal	r12

800029b4 <pxPortInitialiseStack>:
800029b4:	e0 68 08 08 	mov	r8,2056
800029b8:	ea 18 08 08 	orh	r8,0x808
800029bc:	18 d8       	st.w	--r12,r8
800029be:	e0 68 09 09 	mov	r8,2313
800029c2:	ea 18 09 09 	orh	r8,0x909
800029c6:	18 d8       	st.w	--r12,r8
800029c8:	e0 68 0a 0a 	mov	r8,2570
800029cc:	ea 18 0a 0a 	orh	r8,0xa0a
800029d0:	18 d8       	st.w	--r12,r8
800029d2:	e0 68 0b 0b 	mov	r8,2827
800029d6:	ea 18 0b 0b 	orh	r8,0xb0b
800029da:	18 d8       	st.w	--r12,r8
800029dc:	18 da       	st.w	--r12,r10
800029de:	e0 68 be ef 	mov	r8,48879
800029e2:	ea 18 de ad 	orh	r8,0xdead
800029e6:	18 d8       	st.w	--r12,r8
800029e8:	18 db       	st.w	--r12,r11
800029ea:	fc 18 00 40 	movh	r8,0x40
800029ee:	18 d8       	st.w	--r12,r8
800029f0:	e0 68 00 ff 	mov	r8,255
800029f4:	ea 18 ff 00 	orh	r8,0xff00
800029f8:	18 d8       	st.w	--r12,r8
800029fa:	e0 68 01 01 	mov	r8,257
800029fe:	ea 18 01 01 	orh	r8,0x101
80002a02:	18 d8       	st.w	--r12,r8
80002a04:	e0 68 02 02 	mov	r8,514
80002a08:	ea 18 02 02 	orh	r8,0x202
80002a0c:	18 d8       	st.w	--r12,r8
80002a0e:	e0 68 03 03 	mov	r8,771
80002a12:	ea 18 03 03 	orh	r8,0x303
80002a16:	18 d8       	st.w	--r12,r8
80002a18:	e0 68 04 04 	mov	r8,1028
80002a1c:	ea 18 04 04 	orh	r8,0x404
80002a20:	18 d8       	st.w	--r12,r8
80002a22:	e0 68 05 05 	mov	r8,1285
80002a26:	ea 18 05 05 	orh	r8,0x505
80002a2a:	18 d8       	st.w	--r12,r8
80002a2c:	e0 68 06 06 	mov	r8,1542
80002a30:	ea 18 06 06 	orh	r8,0x606
80002a34:	18 d8       	st.w	--r12,r8
80002a36:	e0 68 07 07 	mov	r8,1799
80002a3a:	ea 18 07 07 	orh	r8,0x707
80002a3e:	18 d8       	st.w	--r12,r8
80002a40:	30 08       	mov	r8,0
80002a42:	18 d8       	st.w	--r12,r8
80002a44:	5e fc       	retal	r12
80002a46:	d7 03       	nop

80002a48 <vPortEnterCritical>:
80002a48:	d3 03       	ssrf	0x10
80002a4a:	48 38       	lddpc	r8,80002a54 <vPortEnterCritical+0xc>
80002a4c:	70 09       	ld.w	r9,r8[0x0]
80002a4e:	2f f9       	sub	r9,-1
80002a50:	91 09       	st.w	r8[0x0],r9
80002a52:	5e fc       	retal	r12
80002a54:	00 00       	add	r0,r0
80002a56:	00 1c       	sub	r12,r0

80002a58 <xPortStartScheduler>:
80002a58:	d4 01       	pushm	lr
80002a5a:	d3 03       	ssrf	0x10
80002a5c:	30 0a       	mov	r10,0
80002a5e:	14 9b       	mov	r11,r10
80002a60:	49 2c       	lddpc	r12,80002aa8 <xPortStartScheduler+0x50>
80002a62:	f0 1f 00 13 	mcall	80002aac <xPortStartScheduler+0x54>
80002a66:	e0 68 2e e0 	mov	r8,12000
80002a6a:	e3 b8 00 43 	mtsr	0x10c,r8
80002a6e:	30 08       	mov	r8,0
80002a70:	e3 b8 00 42 	mtsr	0x108,r8
80002a74:	e0 68 06 ec 	mov	r8,1772
80002a78:	ea 18 00 00 	orh	r8,0x0
80002a7c:	70 00       	ld.w	r0,r8[0x0]
80002a7e:	60 0d       	ld.w	sp,r0[0x0]
80002a80:	1b 00       	ld.w	r0,sp++
80002a82:	e0 68 00 1c 	mov	r8,28
80002a86:	ea 18 00 00 	orh	r8,0x0
80002a8a:	91 00       	st.w	r8[0x0],r0
80002a8c:	e3 cd 00 ff 	ldm	sp++,r0-r7
80002a90:	2f ed       	sub	sp,-8
80002a92:	e3 cd 5f 00 	ldm	sp++,r8-r12,lr
80002a96:	fa f0 ff e0 	ld.w	r0,sp[-32]
80002a9a:	e3 b0 00 00 	mtsr	0x0,r0
80002a9e:	fa f0 ff dc 	ld.w	r0,sp[-36]
80002aa2:	fa ff ff e4 	ld.w	pc,sp[-28]
80002aa6:	d8 0a       	popm	pc,r12=0
80002aa8:	80 00       	ld.sh	r0,r0[0x0]
80002aaa:	2b 74       	sub	r4,-73
80002aac:	80 00       	ld.sh	r0,r0[0x0]
80002aae:	25 a8       	sub	r8,90

80002ab0 <SCALLYield>:
80002ab0:	20 6d       	sub	sp,24
80002ab2:	eb cd 00 ff 	pushm	r0-r7
80002ab6:	fa c7 ff c0 	sub	r7,sp,-64
80002aba:	ee f0 ff f8 	ld.w	r0,r7[-8]
80002abe:	ef 40 ff e0 	st.w	r7[-32],r0
80002ac2:	ee f0 ff fc 	ld.w	r0,r7[-4]
80002ac6:	ef 40 ff e4 	st.w	r7[-28],r0
80002aca:	eb c7 5f 00 	stm	--r7,r8-r12,lr
80002ace:	e0 68 00 1c 	mov	r8,28
80002ad2:	ea 18 00 00 	orh	r8,0x0
80002ad6:	70 00       	ld.w	r0,r8[0x0]
80002ad8:	1a d0       	st.w	--sp,r0
80002ada:	f0 1f 00 1a 	mcall	80002b40 <LABEL_RET_SCALL_260+0x14>
80002ade:	e0 68 06 ec 	mov	r8,1772
80002ae2:	ea 18 00 00 	orh	r8,0x0
80002ae6:	70 00       	ld.w	r0,r8[0x0]
80002ae8:	81 0d       	st.w	r0[0x0],sp
80002aea:	f0 1f 00 17 	mcall	80002b44 <LABEL_RET_SCALL_260+0x18>
80002aee:	e0 68 06 ec 	mov	r8,1772
80002af2:	ea 18 00 00 	orh	r8,0x0
80002af6:	70 00       	ld.w	r0,r8[0x0]
80002af8:	60 0d       	ld.w	sp,r0[0x0]
80002afa:	1b 00       	ld.w	r0,sp++
80002afc:	e0 68 00 1c 	mov	r8,28
80002b00:	ea 18 00 00 	orh	r8,0x0
80002b04:	91 00       	st.w	r8[0x0],r0
80002b06:	fa c7 ff d8 	sub	r7,sp,-40
80002b0a:	e3 c7 5f 00 	ldm	r7++,r8-r12,lr
80002b0e:	ee f0 ff e0 	ld.w	r0,r7[-32]
80002b12:	e0 61 00 1c 	mov	r1,28
80002b16:	ea 11 00 00 	orh	r1,0x0
80002b1a:	62 02       	ld.w	r2,r1[0x0]
80002b1c:	58 02       	cp.w	r2,0
80002b1e:	c0 70       	breq	80002b2c <LABEL_RET_SCALL_260>
80002b20:	e4 c2 00 01 	sub	r2,r2,1
80002b24:	83 02       	st.w	r1[0x0],r2
80002b26:	58 02       	cp.w	r2,0
80002b28:	c0 21       	brne	80002b2c <LABEL_RET_SCALL_260>
80002b2a:	b1 c0       	cbr	r0,0x10

80002b2c <LABEL_RET_SCALL_260>:
80002b2c:	ef 40 ff f8 	st.w	r7[-8],r0
80002b30:	ee f0 ff e4 	ld.w	r0,r7[-28]
80002b34:	ef 40 ff fc 	st.w	r7[-4],r0
80002b38:	e3 cd 00 ff 	ldm	sp++,r0-r7
80002b3c:	2f ad       	sub	sp,-24
80002b3e:	d6 13       	rets
80002b40:	80 00       	ld.sh	r0,r0[0x0]
80002b42:	2a 48       	sub	r8,-92
80002b44:	80 00       	ld.sh	r0,r0[0x0]
80002b46:	2c e0       	sub	r0,-50

80002b48 <prvClearCcInt>:
80002b48:	e1 b8 00 43 	mfsr	r8,0x10c
80002b4c:	e3 b8 00 43 	mtsr	0x10c,r8
80002b50:	5e fc       	retal	r12
80002b52:	d7 03       	nop

80002b54 <vPortExitCritical>:
80002b54:	48 78       	lddpc	r8,80002b70 <vPortExitCritical+0x1c>
80002b56:	70 08       	ld.w	r8,r8[0x0]
80002b58:	58 08       	cp.w	r8,0
80002b5a:	5e 0c       	reteq	r12
80002b5c:	48 58       	lddpc	r8,80002b70 <vPortExitCritical+0x1c>
80002b5e:	70 09       	ld.w	r9,r8[0x0]
80002b60:	20 19       	sub	r9,1
80002b62:	91 09       	st.w	r8[0x0],r9
80002b64:	70 08       	ld.w	r8,r8[0x0]
80002b66:	58 08       	cp.w	r8,0
80002b68:	5e 1c       	retne	r12
80002b6a:	d5 03       	csrf	0x10
80002b6c:	5e fc       	retal	r12
80002b6e:	00 00       	add	r0,r0
80002b70:	00 00       	add	r0,r0
80002b72:	00 1c       	sub	r12,r0

80002b74 <vTick>:
80002b74:	eb cd 00 ff 	pushm	r0-r7
80002b78:	e0 68 00 1c 	mov	r8,28
80002b7c:	ea 18 00 00 	orh	r8,0x0
80002b80:	70 00       	ld.w	r0,r8[0x0]
80002b82:	1a d0       	st.w	--sp,r0
80002b84:	7a 90       	ld.w	r0,sp[0x24]
80002b86:	e1 d0 c2 c3 	bfextu	r0,r0,0x16,0x3
80002b8a:	58 10       	cp.w	r0,1
80002b8c:	e0 8b 00 08 	brhi	80002b9c <LABEL_INT_SKIP_SAVE_CONTEXT_234>
80002b90:	e0 68 06 ec 	mov	r8,1772
80002b94:	ea 18 00 00 	orh	r8,0x0
80002b98:	70 00       	ld.w	r0,r8[0x0]
80002b9a:	81 0d       	st.w	r0[0x0],sp

80002b9c <LABEL_INT_SKIP_SAVE_CONTEXT_234>:
80002b9c:	f0 1f 00 12 	mcall	80002be4 <LABEL_INT_SKIP_RESTORE_CONTEXT_251+0x14>
80002ba0:	f0 1f 00 12 	mcall	80002be8 <LABEL_INT_SKIP_RESTORE_CONTEXT_251+0x18>
80002ba4:	f0 1f 00 12 	mcall	80002bec <LABEL_INT_SKIP_RESTORE_CONTEXT_251+0x1c>
80002ba8:	f0 1f 00 12 	mcall	80002bf0 <LABEL_INT_SKIP_RESTORE_CONTEXT_251+0x20>
80002bac:	7a 90       	ld.w	r0,sp[0x24]
80002bae:	e1 d0 c2 c3 	bfextu	r0,r0,0x16,0x3
80002bb2:	58 10       	cp.w	r0,1
80002bb4:	e0 8b 00 0e 	brhi	80002bd0 <LABEL_INT_SKIP_RESTORE_CONTEXT_251>
80002bb8:	f0 1f 00 0c 	mcall	80002be8 <LABEL_INT_SKIP_RESTORE_CONTEXT_251+0x18>
80002bbc:	f0 1f 00 0e 	mcall	80002bf4 <LABEL_INT_SKIP_RESTORE_CONTEXT_251+0x24>
80002bc0:	f0 1f 00 0c 	mcall	80002bf0 <LABEL_INT_SKIP_RESTORE_CONTEXT_251+0x20>
80002bc4:	e0 68 06 ec 	mov	r8,1772
80002bc8:	ea 18 00 00 	orh	r8,0x0
80002bcc:	70 00       	ld.w	r0,r8[0x0]
80002bce:	60 0d       	ld.w	sp,r0[0x0]

80002bd0 <LABEL_INT_SKIP_RESTORE_CONTEXT_251>:
80002bd0:	1b 00       	ld.w	r0,sp++
80002bd2:	e0 68 00 1c 	mov	r8,28
80002bd6:	ea 18 00 00 	orh	r8,0x0
80002bda:	91 00       	st.w	r8[0x0],r0
80002bdc:	e3 cd 00 ff 	ldm	sp++,r0-r7
80002be0:	d6 03       	rete
80002be2:	00 00       	add	r0,r0
80002be4:	80 00       	ld.sh	r0,r0[0x0]
80002be6:	2b 48       	sub	r8,-76
80002be8:	80 00       	ld.sh	r0,r0[0x0]
80002bea:	2a 48       	sub	r8,-92
80002bec:	80 00       	ld.sh	r0,r0[0x0]
80002bee:	2d 80       	sub	r0,-40
80002bf0:	80 00       	ld.sh	r0,r0[0x0]
80002bf2:	2b 54       	sub	r4,-75
80002bf4:	80 00       	ld.sh	r0,r0[0x0]
80002bf6:	2c e0       	sub	r0,-50

80002bf8 <__malloc_lock>:
80002bf8:	d4 01       	pushm	lr
80002bfa:	f0 1f 00 02 	mcall	80002c00 <__malloc_lock+0x8>
80002bfe:	d8 02       	popm	pc
80002c00:	80 00       	ld.sh	r0,r0[0x0]
80002c02:	2c d0       	sub	r0,-51

80002c04 <__malloc_unlock>:
80002c04:	d4 01       	pushm	lr
80002c06:	f0 1f 00 02 	mcall	80002c0c <__malloc_unlock+0x8>
80002c0a:	d8 02       	popm	pc
80002c0c:	80 00       	ld.sh	r0,r0[0x0]
80002c0e:	2e 94       	sub	r4,-23

80002c10 <_init_startup>:
80002c10:	eb cd 40 80 	pushm	r7,lr
80002c14:	48 c8       	lddpc	r8,80002c44 <_init_startup+0x34>
80002c16:	e3 b8 00 01 	mtsr	0x4,r8
80002c1a:	d5 53       	csrf	0x15
80002c1c:	f0 1f 00 0b 	mcall	80002c48 <_init_startup+0x38>
80002c20:	fe 77 18 00 	mov	r7,-59392
80002c24:	48 a8       	lddpc	r8,80002c4c <_init_startup+0x3c>
80002c26:	91 07       	st.w	r8[0x0],r7
80002c28:	30 2b       	mov	r11,2
80002c2a:	48 ac       	lddpc	r12,80002c50 <_init_startup+0x40>
80002c2c:	f0 1f 00 0a 	mcall	80002c54 <_init_startup+0x44>
80002c30:	e0 6a 1b 00 	mov	r10,6912
80002c34:	ea 1a 00 b7 	orh	r10,0xb7
80002c38:	48 8b       	lddpc	r11,80002c58 <_init_startup+0x48>
80002c3a:	0e 9c       	mov	r12,r7
80002c3c:	f0 1f 00 08 	mcall	80002c5c <_init_startup+0x4c>
80002c40:	e3 cf 90 80 	ldm	sp++,r7,pc,r12=1
80002c44:	80 00       	ld.sh	r0,r0[0x0]
80002c46:	3e 00       	mov	r0,-32
80002c48:	80 00       	ld.sh	r0,r0[0x0]
80002c4a:	26 28       	sub	r8,98
80002c4c:	00 00       	add	r0,r0
80002c4e:	07 90       	ld.ub	r0,r3[0x1]
80002c50:	80 00       	ld.sh	r0,r0[0x0]
80002c52:	41 f8       	lddsp	r8,sp[0x7c]
80002c54:	80 00       	ld.sh	r0,r0[0x0]
80002c56:	25 74       	sub	r4,87
80002c58:	80 00       	ld.sh	r0,r0[0x0]
80002c5a:	41 ec       	lddsp	r12,sp[0x78]
80002c5c:	80 00       	ld.sh	r0,r0[0x0]
80002c5e:	28 58       	sub	r8,-123

80002c60 <vPortFree>:
80002c60:	eb cd 40 80 	pushm	r7,lr
80002c64:	18 97       	mov	r7,r12
80002c66:	58 0c       	cp.w	r12,0
80002c68:	c0 80       	breq	80002c78 <vPortFree+0x18>
80002c6a:	f0 1f 00 05 	mcall	80002c7c <vPortFree+0x1c>
80002c6e:	0e 9c       	mov	r12,r7
80002c70:	f0 1f 00 04 	mcall	80002c80 <vPortFree+0x20>
80002c74:	f0 1f 00 04 	mcall	80002c84 <vPortFree+0x24>
80002c78:	e3 cd 80 80 	ldm	sp++,r7,pc
80002c7c:	80 00       	ld.sh	r0,r0[0x0]
80002c7e:	2c d0       	sub	r0,-51
80002c80:	80 00       	ld.sh	r0,r0[0x0]
80002c82:	34 50       	mov	r0,69
80002c84:	80 00       	ld.sh	r0,r0[0x0]
80002c86:	2e 94       	sub	r4,-23

80002c88 <pvPortMalloc>:
80002c88:	eb cd 40 80 	pushm	r7,lr
80002c8c:	18 97       	mov	r7,r12
80002c8e:	f0 1f 00 06 	mcall	80002ca4 <pvPortMalloc+0x1c>
80002c92:	0e 9c       	mov	r12,r7
80002c94:	f0 1f 00 05 	mcall	80002ca8 <pvPortMalloc+0x20>
80002c98:	18 97       	mov	r7,r12
80002c9a:	f0 1f 00 05 	mcall	80002cac <pvPortMalloc+0x24>
80002c9e:	0e 9c       	mov	r12,r7
80002ca0:	e3 cd 80 80 	ldm	sp++,r7,pc
80002ca4:	80 00       	ld.sh	r0,r0[0x0]
80002ca6:	2c d0       	sub	r0,-51
80002ca8:	80 00       	ld.sh	r0,r0[0x0]
80002caa:	34 60       	mov	r0,70
80002cac:	80 00       	ld.sh	r0,r0[0x0]
80002cae:	2e 94       	sub	r4,-23

80002cb0 <xTaskIsTaskSuspended>:
80002cb0:	78 59       	ld.w	r9,r12[0x14]
80002cb2:	48 68       	lddpc	r8,80002cc8 <xTaskIsTaskSuspended+0x18>
80002cb4:	10 39       	cp.w	r9,r8
80002cb6:	c0 81       	brne	80002cc6 <xTaskIsTaskSuspended+0x16>
80002cb8:	78 a8       	ld.w	r8,r12[0x28]
80002cba:	48 59       	lddpc	r9,80002ccc <xTaskIsTaskSuspended+0x1c>
80002cbc:	12 38       	cp.w	r8,r9
80002cbe:	c0 40       	breq	80002cc6 <xTaskIsTaskSuspended+0x16>
80002cc0:	58 08       	cp.w	r8,0
80002cc2:	5f 0c       	sreq	r12
80002cc4:	5e fc       	retal	r12
80002cc6:	5e fd       	retal	0
80002cc8:	00 00       	add	r0,r0
80002cca:	07 40       	ld.w	r0,--r3
80002ccc:	00 00       	add	r0,r0
80002cce:	06 f0       	st.b	--r3,r0

80002cd0 <vTaskSuspendAll>:
80002cd0:	48 38       	lddpc	r8,80002cdc <vTaskSuspendAll+0xc>
80002cd2:	70 09       	ld.w	r9,r8[0x0]
80002cd4:	2f f9       	sub	r9,-1
80002cd6:	91 09       	st.w	r8[0x0],r9
80002cd8:	5e fc       	retal	r12
80002cda:	00 00       	add	r0,r0
80002cdc:	00 00       	add	r0,r0
80002cde:	07 1c       	ld.sh	r12,r3++

80002ce0 <vTaskSwitchContext>:
80002ce0:	49 a8       	lddpc	r8,80002d48 <vTaskSwitchContext+0x68>
80002ce2:	70 08       	ld.w	r8,r8[0x0]
80002ce4:	58 08       	cp.w	r8,0
80002ce6:	c0 b1       	brne	80002cfc <vTaskSwitchContext+0x1c>
80002ce8:	49 98       	lddpc	r8,80002d4c <vTaskSwitchContext+0x6c>
80002cea:	70 08       	ld.w	r8,r8[0x0]
80002cec:	f0 08 00 28 	add	r8,r8,r8<<0x2
80002cf0:	49 89       	lddpc	r9,80002d50 <vTaskSwitchContext+0x70>
80002cf2:	f2 08 03 28 	ld.w	r8,r9[r8<<0x2]
80002cf6:	58 08       	cp.w	r8,0
80002cf8:	c0 60       	breq	80002d04 <vTaskSwitchContext+0x24>
80002cfa:	c1 18       	rjmp	80002d1c <vTaskSwitchContext+0x3c>
80002cfc:	30 19       	mov	r9,1
80002cfe:	49 68       	lddpc	r8,80002d54 <vTaskSwitchContext+0x74>
80002d00:	91 09       	st.w	r8[0x0],r9
80002d02:	5e fc       	retal	r12
80002d04:	49 28       	lddpc	r8,80002d4c <vTaskSwitchContext+0x6c>
80002d06:	49 3a       	lddpc	r10,80002d50 <vTaskSwitchContext+0x70>
80002d08:	70 09       	ld.w	r9,r8[0x0]
80002d0a:	20 19       	sub	r9,1
80002d0c:	91 09       	st.w	r8[0x0],r9
80002d0e:	70 09       	ld.w	r9,r8[0x0]
80002d10:	f2 09 00 29 	add	r9,r9,r9<<0x2
80002d14:	f4 09 03 29 	ld.w	r9,r10[r9<<0x2]
80002d18:	58 09       	cp.w	r9,0
80002d1a:	cf 70       	breq	80002d08 <vTaskSwitchContext+0x28>
80002d1c:	48 c8       	lddpc	r8,80002d4c <vTaskSwitchContext+0x6c>
80002d1e:	70 08       	ld.w	r8,r8[0x0]
80002d20:	f0 08 00 28 	add	r8,r8,r8<<0x2
80002d24:	48 b9       	lddpc	r9,80002d50 <vTaskSwitchContext+0x70>
80002d26:	f2 08 00 28 	add	r8,r9,r8<<0x2
80002d2a:	70 19       	ld.w	r9,r8[0x4]
80002d2c:	72 19       	ld.w	r9,r9[0x4]
80002d2e:	91 19       	st.w	r8[0x4],r9
80002d30:	f0 ca ff f8 	sub	r10,r8,-8
80002d34:	14 39       	cp.w	r9,r10
80002d36:	f3 f9 00 01 	ld.weq	r9,r9[0x4]
80002d3a:	f1 f9 0a 01 	st.weq	r8[0x4],r9
80002d3e:	70 18       	ld.w	r8,r8[0x4]
80002d40:	70 39       	ld.w	r9,r8[0xc]
80002d42:	48 68       	lddpc	r8,80002d58 <vTaskSwitchContext+0x78>
80002d44:	91 09       	st.w	r8[0x0],r9
80002d46:	5e fc       	retal	r12
80002d48:	00 00       	add	r0,r0
80002d4a:	07 1c       	ld.sh	r12,r3++
80002d4c:	00 00       	add	r0,r0
80002d4e:	07 54       	ld.sh	r4,--r3
80002d50:	00 00       	add	r0,r0
80002d52:	06 38       	cp.w	r8,r3
80002d54:	00 00       	add	r0,r0
80002d56:	07 3c       	ld.ub	r12,r3++
80002d58:	00 00       	add	r0,r0
80002d5a:	06 ec       	st.h	--r3,r12

80002d5c <xTaskGetTickCount>:
80002d5c:	eb cd 40 80 	pushm	r7,lr
80002d60:	f0 1f 00 05 	mcall	80002d74 <xTaskGetTickCount+0x18>
80002d64:	48 58       	lddpc	r8,80002d78 <xTaskGetTickCount+0x1c>
80002d66:	70 07       	ld.w	r7,r8[0x0]
80002d68:	f0 1f 00 05 	mcall	80002d7c <xTaskGetTickCount+0x20>
80002d6c:	0e 9c       	mov	r12,r7
80002d6e:	e3 cd 80 80 	ldm	sp++,r7,pc
80002d72:	00 00       	add	r0,r0
80002d74:	80 00       	ld.sh	r0,r0[0x0]
80002d76:	2a 48       	sub	r8,-92
80002d78:	00 00       	add	r0,r0
80002d7a:	07 18       	ld.sh	r8,r3++
80002d7c:	80 00       	ld.sh	r0,r0[0x0]
80002d7e:	2b 54       	sub	r4,-75

80002d80 <vTaskIncrementTick>:
80002d80:	eb cd 40 fc 	pushm	r2-r7,lr
80002d84:	4b 98       	lddpc	r8,80002e68 <vTaskIncrementTick+0xe8>
80002d86:	70 08       	ld.w	r8,r8[0x0]
80002d88:	58 08       	cp.w	r8,0
80002d8a:	c6 91       	brne	80002e5c <vTaskIncrementTick+0xdc>
80002d8c:	4b 88       	lddpc	r8,80002e6c <vTaskIncrementTick+0xec>
80002d8e:	70 09       	ld.w	r9,r8[0x0]
80002d90:	2f f9       	sub	r9,-1
80002d92:	91 09       	st.w	r8[0x0],r9
80002d94:	70 08       	ld.w	r8,r8[0x0]
80002d96:	58 08       	cp.w	r8,0
80002d98:	c1 a1       	brne	80002dcc <vTaskIncrementTick+0x4c>
80002d9a:	4b 68       	lddpc	r8,80002e70 <vTaskIncrementTick+0xf0>
80002d9c:	70 0a       	ld.w	r10,r8[0x0]
80002d9e:	4b 69       	lddpc	r9,80002e74 <vTaskIncrementTick+0xf4>
80002da0:	72 0b       	ld.w	r11,r9[0x0]
80002da2:	91 0b       	st.w	r8[0x0],r11
80002da4:	93 0a       	st.w	r9[0x0],r10
80002da6:	4b 59       	lddpc	r9,80002e78 <vTaskIncrementTick+0xf8>
80002da8:	72 0a       	ld.w	r10,r9[0x0]
80002daa:	2f fa       	sub	r10,-1
80002dac:	93 0a       	st.w	r9[0x0],r10
80002dae:	70 08       	ld.w	r8,r8[0x0]
80002db0:	70 08       	ld.w	r8,r8[0x0]
80002db2:	58 08       	cp.w	r8,0
80002db4:	c0 51       	brne	80002dbe <vTaskIncrementTick+0x3e>
80002db6:	3f f9       	mov	r9,-1
80002db8:	4b 18       	lddpc	r8,80002e7c <vTaskIncrementTick+0xfc>
80002dba:	91 09       	st.w	r8[0x0],r9
80002dbc:	c0 88       	rjmp	80002dcc <vTaskIncrementTick+0x4c>
80002dbe:	4a d8       	lddpc	r8,80002e70 <vTaskIncrementTick+0xf0>
80002dc0:	70 08       	ld.w	r8,r8[0x0]
80002dc2:	70 38       	ld.w	r8,r8[0xc]
80002dc4:	70 38       	ld.w	r8,r8[0xc]
80002dc6:	70 19       	ld.w	r9,r8[0x4]
80002dc8:	4a d8       	lddpc	r8,80002e7c <vTaskIncrementTick+0xfc>
80002dca:	91 09       	st.w	r8[0x0],r9
80002dcc:	4a 88       	lddpc	r8,80002e6c <vTaskIncrementTick+0xec>
80002dce:	70 09       	ld.w	r9,r8[0x0]
80002dd0:	4a b8       	lddpc	r8,80002e7c <vTaskIncrementTick+0xfc>
80002dd2:	70 08       	ld.w	r8,r8[0x0]
80002dd4:	10 39       	cp.w	r9,r8
80002dd6:	c4 73       	brcs	80002e64 <vTaskIncrementTick+0xe4>
80002dd8:	4a 68       	lddpc	r8,80002e70 <vTaskIncrementTick+0xf0>
80002dda:	70 08       	ld.w	r8,r8[0x0]
80002ddc:	70 08       	ld.w	r8,r8[0x0]
80002dde:	58 08       	cp.w	r8,0
80002de0:	c0 c0       	breq	80002df8 <vTaskIncrementTick+0x78>
80002de2:	4a 48       	lddpc	r8,80002e70 <vTaskIncrementTick+0xf0>
80002de4:	70 08       	ld.w	r8,r8[0x0]
80002de6:	70 38       	ld.w	r8,r8[0xc]
80002de8:	70 37       	ld.w	r7,r8[0xc]
80002dea:	6e 18       	ld.w	r8,r7[0x4]
80002dec:	4a 09       	lddpc	r9,80002e6c <vTaskIncrementTick+0xec>
80002dee:	72 09       	ld.w	r9,r9[0x0]
80002df0:	12 38       	cp.w	r8,r9
80002df2:	e0 88 00 14 	brls	80002e1a <vTaskIncrementTick+0x9a>
80002df6:	c0 e8       	rjmp	80002e12 <vTaskIncrementTick+0x92>
80002df8:	3f f9       	mov	r9,-1
80002dfa:	4a 18       	lddpc	r8,80002e7c <vTaskIncrementTick+0xfc>
80002dfc:	91 09       	st.w	r8[0x0],r9
80002dfe:	e3 cd 80 fc 	ldm	sp++,r2-r7,pc
80002e02:	6a 08       	ld.w	r8,r5[0x0]
80002e04:	70 38       	ld.w	r8,r8[0xc]
80002e06:	70 37       	ld.w	r7,r8[0xc]
80002e08:	6e 18       	ld.w	r8,r7[0x4]
80002e0a:	64 09       	ld.w	r9,r2[0x0]
80002e0c:	12 38       	cp.w	r8,r9
80002e0e:	e0 88 00 0a 	brls	80002e22 <vTaskIncrementTick+0xa2>
80002e12:	49 b9       	lddpc	r9,80002e7c <vTaskIncrementTick+0xfc>
80002e14:	93 08       	st.w	r9[0x0],r8
80002e16:	e3 cd 80 fc 	ldm	sp++,r2-r7,pc
80002e1a:	49 a4       	lddpc	r4,80002e80 <vTaskIncrementTick+0x100>
80002e1c:	49 a3       	lddpc	r3,80002e84 <vTaskIncrementTick+0x104>
80002e1e:	49 55       	lddpc	r5,80002e70 <vTaskIncrementTick+0xf0>
80002e20:	49 32       	lddpc	r2,80002e6c <vTaskIncrementTick+0xec>
80002e22:	ee c6 ff fc 	sub	r6,r7,-4
80002e26:	0c 9c       	mov	r12,r6
80002e28:	f0 1f 00 18 	mcall	80002e88 <vTaskIncrementTick+0x108>
80002e2c:	6e a8       	ld.w	r8,r7[0x28]
80002e2e:	58 08       	cp.w	r8,0
80002e30:	c0 50       	breq	80002e3a <vTaskIncrementTick+0xba>
80002e32:	ee cc ff e8 	sub	r12,r7,-24
80002e36:	f0 1f 00 15 	mcall	80002e88 <vTaskIncrementTick+0x108>
80002e3a:	6e bc       	ld.w	r12,r7[0x2c]
80002e3c:	68 08       	ld.w	r8,r4[0x0]
80002e3e:	10 3c       	cp.w	r12,r8
80002e40:	e9 fc ba 00 	st.whi	r4[0x0],r12
80002e44:	f8 0c 00 2c 	add	r12,r12,r12<<0x2
80002e48:	0c 9b       	mov	r11,r6
80002e4a:	e6 0c 00 2c 	add	r12,r3,r12<<0x2
80002e4e:	f0 1f 00 10 	mcall	80002e8c <vTaskIncrementTick+0x10c>
80002e52:	6a 08       	ld.w	r8,r5[0x0]
80002e54:	70 08       	ld.w	r8,r8[0x0]
80002e56:	58 08       	cp.w	r8,0
80002e58:	cd 51       	brne	80002e02 <vTaskIncrementTick+0x82>
80002e5a:	cc fb       	rjmp	80002df8 <vTaskIncrementTick+0x78>
80002e5c:	48 d8       	lddpc	r8,80002e90 <vTaskIncrementTick+0x110>
80002e5e:	70 09       	ld.w	r9,r8[0x0]
80002e60:	2f f9       	sub	r9,-1
80002e62:	91 09       	st.w	r8[0x0],r9
80002e64:	e3 cd 80 fc 	ldm	sp++,r2-r7,pc
80002e68:	00 00       	add	r0,r0
80002e6a:	07 1c       	ld.sh	r12,r3++
80002e6c:	00 00       	add	r0,r0
80002e6e:	07 18       	ld.sh	r8,r3++
80002e70:	00 00       	add	r0,r0
80002e72:	06 24       	rsub	r4,r3
80002e74:	00 00       	add	r0,r0
80002e76:	06 34       	cp.w	r4,r3
80002e78:	00 00       	add	r0,r0
80002e7a:	06 30       	cp.w	r0,r3
80002e7c:	00 00       	add	r0,r0
80002e7e:	00 20       	rsub	r0,r0
80002e80:	00 00       	add	r0,r0
80002e82:	07 54       	ld.sh	r4,--r3
80002e84:	00 00       	add	r0,r0
80002e86:	06 38       	cp.w	r8,r3
80002e88:	80 00       	ld.sh	r0,r0[0x0]
80002e8a:	29 8e       	sub	lr,-104
80002e8c:	80 00       	ld.sh	r0,r0[0x0]
80002e8e:	29 3e       	sub	lr,-109
80002e90:	00 00       	add	r0,r0
80002e92:	06 1c       	sub	r12,r3

80002e94 <xTaskResumeAll>:
80002e94:	eb cd 40 fe 	pushm	r1-r7,lr
80002e98:	f0 1f 00 2c 	mcall	80002f48 <xTaskResumeAll+0xb4>
80002e9c:	4a c8       	lddpc	r8,80002f4c <xTaskResumeAll+0xb8>
80002e9e:	70 09       	ld.w	r9,r8[0x0]
80002ea0:	20 19       	sub	r9,1
80002ea2:	91 09       	st.w	r8[0x0],r9
80002ea4:	70 08       	ld.w	r8,r8[0x0]
80002ea6:	58 08       	cp.w	r8,0
80002ea8:	c4 91       	brne	80002f3a <xTaskResumeAll+0xa6>
80002eaa:	4a a8       	lddpc	r8,80002f50 <xTaskResumeAll+0xbc>
80002eac:	70 08       	ld.w	r8,r8[0x0]
80002eae:	58 08       	cp.w	r8,0
80002eb0:	c4 50       	breq	80002f3a <xTaskResumeAll+0xa6>
80002eb2:	30 04       	mov	r4,0
80002eb4:	4a 85       	lddpc	r5,80002f54 <xTaskResumeAll+0xc0>
80002eb6:	4a 93       	lddpc	r3,80002f58 <xTaskResumeAll+0xc4>
80002eb8:	4a 92       	lddpc	r2,80002f5c <xTaskResumeAll+0xc8>
80002eba:	4a a1       	lddpc	r1,80002f60 <xTaskResumeAll+0xcc>
80002ebc:	c1 e8       	rjmp	80002ef8 <xTaskResumeAll+0x64>
80002ebe:	6a 38       	ld.w	r8,r5[0xc]
80002ec0:	70 37       	ld.w	r7,r8[0xc]
80002ec2:	ee cc ff e8 	sub	r12,r7,-24
80002ec6:	f0 1f 00 28 	mcall	80002f64 <xTaskResumeAll+0xd0>
80002eca:	ee c6 ff fc 	sub	r6,r7,-4
80002ece:	0c 9c       	mov	r12,r6
80002ed0:	f0 1f 00 25 	mcall	80002f64 <xTaskResumeAll+0xd0>
80002ed4:	6e bc       	ld.w	r12,r7[0x2c]
80002ed6:	66 08       	ld.w	r8,r3[0x0]
80002ed8:	10 3c       	cp.w	r12,r8
80002eda:	e7 fc ba 00 	st.whi	r3[0x0],r12
80002ede:	f8 0c 00 2c 	add	r12,r12,r12<<0x2
80002ee2:	0c 9b       	mov	r11,r6
80002ee4:	e4 0c 00 2c 	add	r12,r2,r12<<0x2
80002ee8:	f0 1f 00 20 	mcall	80002f68 <xTaskResumeAll+0xd4>
80002eec:	62 08       	ld.w	r8,r1[0x0]
80002eee:	6e b9       	ld.w	r9,r7[0x2c]
80002ef0:	70 b8       	ld.w	r8,r8[0x2c]
80002ef2:	10 39       	cp.w	r9,r8
80002ef4:	f9 b4 02 01 	movhs	r4,1
80002ef8:	6a 08       	ld.w	r8,r5[0x0]
80002efa:	58 08       	cp.w	r8,0
80002efc:	ce 11       	brne	80002ebe <xTaskResumeAll+0x2a>
80002efe:	49 c8       	lddpc	r8,80002f6c <xTaskResumeAll+0xd8>
80002f00:	70 08       	ld.w	r8,r8[0x0]
80002f02:	58 08       	cp.w	r8,0
80002f04:	c0 f0       	breq	80002f22 <xTaskResumeAll+0x8e>
80002f06:	49 a8       	lddpc	r8,80002f6c <xTaskResumeAll+0xd8>
80002f08:	70 08       	ld.w	r8,r8[0x0]
80002f0a:	58 08       	cp.w	r8,0
80002f0c:	c1 10       	breq	80002f2e <xTaskResumeAll+0x9a>
80002f0e:	49 87       	lddpc	r7,80002f6c <xTaskResumeAll+0xd8>
80002f10:	f0 1f 00 18 	mcall	80002f70 <xTaskResumeAll+0xdc>
80002f14:	6e 08       	ld.w	r8,r7[0x0]
80002f16:	20 18       	sub	r8,1
80002f18:	8f 08       	st.w	r7[0x0],r8
80002f1a:	6e 08       	ld.w	r8,r7[0x0]
80002f1c:	58 08       	cp.w	r8,0
80002f1e:	cf 91       	brne	80002f10 <xTaskResumeAll+0x7c>
80002f20:	c0 78       	rjmp	80002f2e <xTaskResumeAll+0x9a>
80002f22:	58 14       	cp.w	r4,1
80002f24:	c0 50       	breq	80002f2e <xTaskResumeAll+0x9a>
80002f26:	49 48       	lddpc	r8,80002f74 <xTaskResumeAll+0xe0>
80002f28:	70 08       	ld.w	r8,r8[0x0]
80002f2a:	58 18       	cp.w	r8,1
80002f2c:	c0 71       	brne	80002f3a <xTaskResumeAll+0xa6>
80002f2e:	30 09       	mov	r9,0
80002f30:	49 18       	lddpc	r8,80002f74 <xTaskResumeAll+0xe0>
80002f32:	91 09       	st.w	r8[0x0],r9
80002f34:	d7 33       	scall
80002f36:	30 17       	mov	r7,1
80002f38:	c0 28       	rjmp	80002f3c <xTaskResumeAll+0xa8>
80002f3a:	30 07       	mov	r7,0
80002f3c:	f0 1f 00 0f 	mcall	80002f78 <xTaskResumeAll+0xe4>
80002f40:	0e 9c       	mov	r12,r7
80002f42:	e3 cd 80 fe 	ldm	sp++,r1-r7,pc
80002f46:	00 00       	add	r0,r0
80002f48:	80 00       	ld.sh	r0,r0[0x0]
80002f4a:	2a 48       	sub	r8,-92
80002f4c:	00 00       	add	r0,r0
80002f4e:	07 1c       	ld.sh	r12,r3++
80002f50:	00 00       	add	r0,r0
80002f52:	07 38       	ld.ub	r8,r3++
80002f54:	00 00       	add	r0,r0
80002f56:	06 f0       	st.b	--r3,r0
80002f58:	00 00       	add	r0,r0
80002f5a:	07 54       	ld.sh	r4,--r3
80002f5c:	00 00       	add	r0,r0
80002f5e:	06 38       	cp.w	r8,r3
80002f60:	00 00       	add	r0,r0
80002f62:	06 ec       	st.h	--r3,r12
80002f64:	80 00       	ld.sh	r0,r0[0x0]
80002f66:	29 8e       	sub	lr,-104
80002f68:	80 00       	ld.sh	r0,r0[0x0]
80002f6a:	29 3e       	sub	lr,-109
80002f6c:	00 00       	add	r0,r0
80002f6e:	06 1c       	sub	r12,r3
80002f70:	80 00       	ld.sh	r0,r0[0x0]
80002f72:	2d 80       	sub	r0,-40
80002f74:	00 00       	add	r0,r0
80002f76:	07 3c       	ld.ub	r12,r3++
80002f78:	80 00       	ld.sh	r0,r0[0x0]
80002f7a:	2b 54       	sub	r4,-75

80002f7c <vTaskResume>:
80002f7c:	eb cd 40 c0 	pushm	r6-r7,lr
80002f80:	18 97       	mov	r7,r12
80002f82:	58 0c       	cp.w	r12,0
80002f84:	c2 a0       	breq	80002fd8 <vTaskResume+0x5c>
80002f86:	49 68       	lddpc	r8,80002fdc <vTaskResume+0x60>
80002f88:	70 08       	ld.w	r8,r8[0x0]
80002f8a:	10 3c       	cp.w	r12,r8
80002f8c:	c2 60       	breq	80002fd8 <vTaskResume+0x5c>
80002f8e:	f0 1f 00 15 	mcall	80002fe0 <vTaskResume+0x64>
80002f92:	0e 9c       	mov	r12,r7
80002f94:	f0 1f 00 14 	mcall	80002fe4 <vTaskResume+0x68>
80002f98:	58 1c       	cp.w	r12,1
80002f9a:	c1 d1       	brne	80002fd4 <vTaskResume+0x58>
80002f9c:	ee c6 ff fc 	sub	r6,r7,-4
80002fa0:	0c 9c       	mov	r12,r6
80002fa2:	f0 1f 00 12 	mcall	80002fe8 <vTaskResume+0x6c>
80002fa6:	6e bc       	ld.w	r12,r7[0x2c]
80002fa8:	49 18       	lddpc	r8,80002fec <vTaskResume+0x70>
80002faa:	70 08       	ld.w	r8,r8[0x0]
80002fac:	10 3c       	cp.w	r12,r8
80002fae:	e0 88 00 04 	brls	80002fb6 <vTaskResume+0x3a>
80002fb2:	48 f8       	lddpc	r8,80002fec <vTaskResume+0x70>
80002fb4:	91 0c       	st.w	r8[0x0],r12
80002fb6:	f8 0c 00 2c 	add	r12,r12,r12<<0x2
80002fba:	0c 9b       	mov	r11,r6
80002fbc:	48 d8       	lddpc	r8,80002ff0 <vTaskResume+0x74>
80002fbe:	f0 0c 00 2c 	add	r12,r8,r12<<0x2
80002fc2:	f0 1f 00 0d 	mcall	80002ff4 <vTaskResume+0x78>
80002fc6:	48 68       	lddpc	r8,80002fdc <vTaskResume+0x60>
80002fc8:	70 08       	ld.w	r8,r8[0x0]
80002fca:	6e b9       	ld.w	r9,r7[0x2c]
80002fcc:	70 b8       	ld.w	r8,r8[0x2c]
80002fce:	10 39       	cp.w	r9,r8
80002fd0:	c0 23       	brcs	80002fd4 <vTaskResume+0x58>
80002fd2:	d7 33       	scall
80002fd4:	f0 1f 00 09 	mcall	80002ff8 <vTaskResume+0x7c>
80002fd8:	e3 cd 80 c0 	ldm	sp++,r6-r7,pc
80002fdc:	00 00       	add	r0,r0
80002fde:	06 ec       	st.h	--r3,r12
80002fe0:	80 00       	ld.sh	r0,r0[0x0]
80002fe2:	2a 48       	sub	r8,-92
80002fe4:	80 00       	ld.sh	r0,r0[0x0]
80002fe6:	2c b0       	sub	r0,-53
80002fe8:	80 00       	ld.sh	r0,r0[0x0]
80002fea:	29 8e       	sub	lr,-104
80002fec:	00 00       	add	r0,r0
80002fee:	07 54       	ld.sh	r4,--r3
80002ff0:	00 00       	add	r0,r0
80002ff2:	06 38       	cp.w	r8,r3
80002ff4:	80 00       	ld.sh	r0,r0[0x0]
80002ff6:	29 3e       	sub	lr,-109
80002ff8:	80 00       	ld.sh	r0,r0[0x0]
80002ffa:	2b 54       	sub	r4,-75

80002ffc <vTaskSuspend>:
80002ffc:	eb cd 40 e0 	pushm	r5-r7,lr
80003000:	18 97       	mov	r7,r12
80003002:	f0 1f 00 1c 	mcall	80003070 <vTaskSuspend+0x74>
80003006:	49 c8       	lddpc	r8,80003074 <vTaskSuspend+0x78>
80003008:	70 08       	ld.w	r8,r8[0x0]
8000300a:	10 37       	cp.w	r7,r8
8000300c:	c0 31       	brne	80003012 <vTaskSuspend+0x16>
8000300e:	30 07       	mov	r7,0
80003010:	c0 38       	rjmp	80003016 <vTaskSuspend+0x1a>
80003012:	58 07       	cp.w	r7,0
80003014:	c0 41       	brne	8000301c <vTaskSuspend+0x20>
80003016:	49 88       	lddpc	r8,80003074 <vTaskSuspend+0x78>
80003018:	70 06       	ld.w	r6,r8[0x0]
8000301a:	c0 28       	rjmp	8000301e <vTaskSuspend+0x22>
8000301c:	0e 96       	mov	r6,r7
8000301e:	ec c5 ff fc 	sub	r5,r6,-4
80003022:	0a 9c       	mov	r12,r5
80003024:	f0 1f 00 15 	mcall	80003078 <vTaskSuspend+0x7c>
80003028:	6c a8       	ld.w	r8,r6[0x28]
8000302a:	58 08       	cp.w	r8,0
8000302c:	c0 50       	breq	80003036 <vTaskSuspend+0x3a>
8000302e:	ec cc ff e8 	sub	r12,r6,-24
80003032:	f0 1f 00 12 	mcall	80003078 <vTaskSuspend+0x7c>
80003036:	0a 9b       	mov	r11,r5
80003038:	49 1c       	lddpc	r12,8000307c <vTaskSuspend+0x80>
8000303a:	f0 1f 00 12 	mcall	80003080 <vTaskSuspend+0x84>
8000303e:	f0 1f 00 12 	mcall	80003084 <vTaskSuspend+0x88>
80003042:	58 07       	cp.w	r7,0
80003044:	c1 31       	brne	8000306a <vTaskSuspend+0x6e>
80003046:	49 18       	lddpc	r8,80003088 <vTaskSuspend+0x8c>
80003048:	70 08       	ld.w	r8,r8[0x0]
8000304a:	58 08       	cp.w	r8,0
8000304c:	c0 40       	breq	80003054 <vTaskSuspend+0x58>
8000304e:	d7 33       	scall
80003050:	e3 cd 80 e0 	ldm	sp++,r5-r7,pc
80003054:	48 e8       	lddpc	r8,8000308c <vTaskSuspend+0x90>
80003056:	70 08       	ld.w	r8,r8[0x0]
80003058:	58 18       	cp.w	r8,1
8000305a:	c0 61       	brne	80003066 <vTaskSuspend+0x6a>
8000305c:	30 09       	mov	r9,0
8000305e:	48 68       	lddpc	r8,80003074 <vTaskSuspend+0x78>
80003060:	91 09       	st.w	r8[0x0],r9
80003062:	e3 cd 80 e0 	ldm	sp++,r5-r7,pc
80003066:	f0 1f 00 0b 	mcall	80003090 <vTaskSuspend+0x94>
8000306a:	e3 cd 80 e0 	ldm	sp++,r5-r7,pc
8000306e:	00 00       	add	r0,r0
80003070:	80 00       	ld.sh	r0,r0[0x0]
80003072:	2a 48       	sub	r8,-92
80003074:	00 00       	add	r0,r0
80003076:	06 ec       	st.h	--r3,r12
80003078:	80 00       	ld.sh	r0,r0[0x0]
8000307a:	29 8e       	sub	lr,-104
8000307c:	00 00       	add	r0,r0
8000307e:	07 40       	ld.w	r0,--r3
80003080:	80 00       	ld.sh	r0,r0[0x0]
80003082:	29 3e       	sub	lr,-109
80003084:	80 00       	ld.sh	r0,r0[0x0]
80003086:	2b 54       	sub	r4,-75
80003088:	00 00       	add	r0,r0
8000308a:	06 28       	rsub	r8,r3
8000308c:	00 00       	add	r0,r0
8000308e:	07 38       	ld.ub	r8,r3++
80003090:	80 00       	ld.sh	r0,r0[0x0]
80003092:	2c e0       	sub	r0,-50

80003094 <prvAddCurrentTaskToDelayedList>:
80003094:	eb cd 40 80 	pushm	r7,lr
80003098:	18 97       	mov	r7,r12
8000309a:	49 08       	lddpc	r8,800030d8 <prvAddCurrentTaskToDelayedList+0x44>
8000309c:	70 08       	ld.w	r8,r8[0x0]
8000309e:	91 1c       	st.w	r8[0x4],r12
800030a0:	48 f8       	lddpc	r8,800030dc <prvAddCurrentTaskToDelayedList+0x48>
800030a2:	70 08       	ld.w	r8,r8[0x0]
800030a4:	10 3c       	cp.w	r12,r8
800030a6:	c0 a2       	brcc	800030ba <prvAddCurrentTaskToDelayedList+0x26>
800030a8:	48 c8       	lddpc	r8,800030d8 <prvAddCurrentTaskToDelayedList+0x44>
800030aa:	70 0b       	ld.w	r11,r8[0x0]
800030ac:	48 d8       	lddpc	r8,800030e0 <prvAddCurrentTaskToDelayedList+0x4c>
800030ae:	70 0c       	ld.w	r12,r8[0x0]
800030b0:	2f cb       	sub	r11,-4
800030b2:	f0 1f 00 0d 	mcall	800030e4 <prvAddCurrentTaskToDelayedList+0x50>
800030b6:	e3 cd 80 80 	ldm	sp++,r7,pc
800030ba:	48 88       	lddpc	r8,800030d8 <prvAddCurrentTaskToDelayedList+0x44>
800030bc:	70 0b       	ld.w	r11,r8[0x0]
800030be:	48 b8       	lddpc	r8,800030e8 <prvAddCurrentTaskToDelayedList+0x54>
800030c0:	70 0c       	ld.w	r12,r8[0x0]
800030c2:	2f cb       	sub	r11,-4
800030c4:	f0 1f 00 08 	mcall	800030e4 <prvAddCurrentTaskToDelayedList+0x50>
800030c8:	48 98       	lddpc	r8,800030ec <prvAddCurrentTaskToDelayedList+0x58>
800030ca:	70 08       	ld.w	r8,r8[0x0]
800030cc:	10 37       	cp.w	r7,r8
800030ce:	c0 32       	brcc	800030d4 <prvAddCurrentTaskToDelayedList+0x40>
800030d0:	48 78       	lddpc	r8,800030ec <prvAddCurrentTaskToDelayedList+0x58>
800030d2:	91 07       	st.w	r8[0x0],r7
800030d4:	e3 cd 80 80 	ldm	sp++,r7,pc
800030d8:	00 00       	add	r0,r0
800030da:	06 ec       	st.h	--r3,r12
800030dc:	00 00       	add	r0,r0
800030de:	07 18       	ld.sh	r8,r3++
800030e0:	00 00       	add	r0,r0
800030e2:	06 34       	cp.w	r4,r3
800030e4:	80 00       	ld.sh	r0,r0[0x0]
800030e6:	29 5a       	sub	r10,-107
800030e8:	00 00       	add	r0,r0
800030ea:	06 24       	rsub	r4,r3
800030ec:	00 00       	add	r0,r0
800030ee:	00 20       	rsub	r0,r0

800030f0 <vTaskDelayUntil>:
800030f0:	eb cd 40 c0 	pushm	r6-r7,lr
800030f4:	18 96       	mov	r6,r12
800030f6:	16 97       	mov	r7,r11
800030f8:	f0 1f 00 18 	mcall	80003158 <vTaskDelayUntil+0x68>
800030fc:	6c 08       	ld.w	r8,r6[0x0]
800030fe:	10 07       	add	r7,r8
80003100:	49 79       	lddpc	r9,8000315c <vTaskDelayUntil+0x6c>
80003102:	72 09       	ld.w	r9,r9[0x0]
80003104:	12 38       	cp.w	r8,r9
80003106:	e0 88 00 0c 	brls	8000311e <vTaskDelayUntil+0x2e>
8000310a:	0e 38       	cp.w	r8,r7
8000310c:	e0 88 00 22 	brls	80003150 <vTaskDelayUntil+0x60>
80003110:	49 38       	lddpc	r8,8000315c <vTaskDelayUntil+0x6c>
80003112:	70 08       	ld.w	r8,r8[0x0]
80003114:	8d 07       	st.w	r6[0x0],r7
80003116:	10 37       	cp.w	r7,r8
80003118:	e0 88 00 14 	brls	80003140 <vTaskDelayUntil+0x50>
8000311c:	c0 a8       	rjmp	80003130 <vTaskDelayUntil+0x40>
8000311e:	0e 38       	cp.w	r8,r7
80003120:	e0 8b 00 16 	brhi	8000314c <vTaskDelayUntil+0x5c>
80003124:	48 e8       	lddpc	r8,8000315c <vTaskDelayUntil+0x6c>
80003126:	70 08       	ld.w	r8,r8[0x0]
80003128:	10 37       	cp.w	r7,r8
8000312a:	e0 8b 00 11 	brhi	8000314c <vTaskDelayUntil+0x5c>
8000312e:	c1 18       	rjmp	80003150 <vTaskDelayUntil+0x60>
80003130:	48 c8       	lddpc	r8,80003160 <vTaskDelayUntil+0x70>
80003132:	70 0c       	ld.w	r12,r8[0x0]
80003134:	2f cc       	sub	r12,-4
80003136:	f0 1f 00 0c 	mcall	80003164 <vTaskDelayUntil+0x74>
8000313a:	0e 9c       	mov	r12,r7
8000313c:	f0 1f 00 0b 	mcall	80003168 <vTaskDelayUntil+0x78>
80003140:	f0 1f 00 0b 	mcall	8000316c <vTaskDelayUntil+0x7c>
80003144:	c0 81       	brne	80003154 <vTaskDelayUntil+0x64>
80003146:	d7 33       	scall
80003148:	e3 cd 80 c0 	ldm	sp++,r6-r7,pc
8000314c:	8d 07       	st.w	r6[0x0],r7
8000314e:	cf 1b       	rjmp	80003130 <vTaskDelayUntil+0x40>
80003150:	8d 07       	st.w	r6[0x0],r7
80003152:	cf 7b       	rjmp	80003140 <vTaskDelayUntil+0x50>
80003154:	e3 cd 80 c0 	ldm	sp++,r6-r7,pc
80003158:	80 00       	ld.sh	r0,r0[0x0]
8000315a:	2c d0       	sub	r0,-51
8000315c:	00 00       	add	r0,r0
8000315e:	07 18       	ld.sh	r8,r3++
80003160:	00 00       	add	r0,r0
80003162:	06 ec       	st.h	--r3,r12
80003164:	80 00       	ld.sh	r0,r0[0x0]
80003166:	29 8e       	sub	lr,-104
80003168:	80 00       	ld.sh	r0,r0[0x0]
8000316a:	30 94       	mov	r4,9
8000316c:	80 00       	ld.sh	r0,r0[0x0]
8000316e:	2e 94       	sub	r4,-23

80003170 <prvIdleTask>:
80003170:	eb cd 40 f8 	pushm	r3-r7,lr
80003174:	49 57       	lddpc	r7,800031c8 <prvIdleTask+0x58>
80003176:	49 64       	lddpc	r4,800031cc <prvIdleTask+0x5c>
80003178:	49 63       	lddpc	r3,800031d0 <prvIdleTask+0x60>
8000317a:	49 75       	lddpc	r5,800031d4 <prvIdleTask+0x64>
8000317c:	6e 08       	ld.w	r8,r7[0x0]
8000317e:	58 08       	cp.w	r8,0
80003180:	c1 e0       	breq	800031bc <prvIdleTask+0x4c>
80003182:	f0 1f 00 16 	mcall	800031d8 <prvIdleTask+0x68>
80003186:	68 06       	ld.w	r6,r4[0x0]
80003188:	f0 1f 00 15 	mcall	800031dc <prvIdleTask+0x6c>
8000318c:	58 06       	cp.w	r6,0
8000318e:	c1 70       	breq	800031bc <prvIdleTask+0x4c>
80003190:	f0 1f 00 14 	mcall	800031e0 <prvIdleTask+0x70>
80003194:	68 38       	ld.w	r8,r4[0xc]
80003196:	70 36       	ld.w	r6,r8[0xc]
80003198:	ec cc ff fc 	sub	r12,r6,-4
8000319c:	f0 1f 00 12 	mcall	800031e4 <prvIdleTask+0x74>
800031a0:	66 08       	ld.w	r8,r3[0x0]
800031a2:	20 18       	sub	r8,1
800031a4:	87 08       	st.w	r3[0x0],r8
800031a6:	6e 08       	ld.w	r8,r7[0x0]
800031a8:	20 18       	sub	r8,1
800031aa:	8f 08       	st.w	r7[0x0],r8
800031ac:	f0 1f 00 0f 	mcall	800031e8 <prvIdleTask+0x78>
800031b0:	6c cc       	ld.w	r12,r6[0x30]
800031b2:	f0 1f 00 0f 	mcall	800031ec <prvIdleTask+0x7c>
800031b6:	0c 9c       	mov	r12,r6
800031b8:	f0 1f 00 0d 	mcall	800031ec <prvIdleTask+0x7c>
800031bc:	6a 08       	ld.w	r8,r5[0x0]
800031be:	58 18       	cp.w	r8,1
800031c0:	fe 98 ff de 	brls	8000317c <prvIdleTask+0xc>
800031c4:	d7 33       	scall
800031c6:	cd bb       	rjmp	8000317c <prvIdleTask+0xc>
800031c8:	00 00       	add	r0,r0
800031ca:	06 2c       	rsub	r12,r3
800031cc:	00 00       	add	r0,r0
800031ce:	06 d8       	st.w	--r3,r8
800031d0:	00 00       	add	r0,r0
800031d2:	07 38       	ld.ub	r8,r3++
800031d4:	00 00       	add	r0,r0
800031d6:	06 38       	cp.w	r8,r3
800031d8:	80 00       	ld.sh	r0,r0[0x0]
800031da:	2c d0       	sub	r0,-51
800031dc:	80 00       	ld.sh	r0,r0[0x0]
800031de:	2e 94       	sub	r4,-23
800031e0:	80 00       	ld.sh	r0,r0[0x0]
800031e2:	2a 48       	sub	r8,-92
800031e4:	80 00       	ld.sh	r0,r0[0x0]
800031e6:	29 8e       	sub	lr,-104
800031e8:	80 00       	ld.sh	r0,r0[0x0]
800031ea:	2b 54       	sub	r4,-75
800031ec:	80 00       	ld.sh	r0,r0[0x0]
800031ee:	2c 60       	sub	r0,-58

800031f0 <xTaskGenericCreate>:
800031f0:	d4 31       	pushm	r0-r7,lr
800031f2:	20 1d       	sub	sp,4
800031f4:	fa c4 ff d8 	sub	r4,sp,-40
800031f8:	50 0c       	stdsp	sp[0x0],r12
800031fa:	16 91       	mov	r1,r11
800031fc:	14 97       	mov	r7,r10
800031fe:	12 90       	mov	r0,r9
80003200:	10 93       	mov	r3,r8
80003202:	68 02       	ld.w	r2,r4[0x0]
80003204:	68 16       	ld.w	r6,r4[0x4]
80003206:	34 4c       	mov	r12,68
80003208:	f0 1f 00 5b 	mcall	80003374 <xTaskGenericCreate+0x184>
8000320c:	18 95       	mov	r5,r12
8000320e:	c0 31       	brne	80003214 <xTaskGenericCreate+0x24>
80003210:	3f fc       	mov	r12,-1
80003212:	ca d8       	rjmp	8000336c <xTaskGenericCreate+0x17c>
80003214:	58 06       	cp.w	r6,0
80003216:	e0 81 00 ad 	brne	80003370 <xTaskGenericCreate+0x180>
8000321a:	0e 9c       	mov	r12,r7
8000321c:	5c 7c       	castu.h	r12
8000321e:	a3 6c       	lsl	r12,0x2
80003220:	f0 1f 00 55 	mcall	80003374 <xTaskGenericCreate+0x184>
80003224:	18 96       	mov	r6,r12
80003226:	8b cc       	st.w	r5[0x30],r12
80003228:	c0 61       	brne	80003234 <xTaskGenericCreate+0x44>
8000322a:	0a 9c       	mov	r12,r5
8000322c:	f0 1f 00 53 	mcall	80003378 <xTaskGenericCreate+0x188>
80003230:	3f fc       	mov	r12,-1
80003232:	c9 d8       	rjmp	8000336c <xTaskGenericCreate+0x17c>
80003234:	5c 77       	castu.h	r7
80003236:	ee 0a 15 02 	lsl	r10,r7,0x2
8000323a:	e0 6b 00 a5 	mov	r11,165
8000323e:	0c 9c       	mov	r12,r6
80003240:	f0 1f 00 4f 	mcall	8000337c <xTaskGenericCreate+0x18c>
80003244:	ee c6 00 01 	sub	r6,r7,1
80003248:	6a c8       	ld.w	r8,r5[0x30]
8000324a:	f0 06 00 26 	add	r6,r8,r6<<0x2
8000324e:	e0 16 ff fc 	andl	r6,0xfffc
80003252:	31 0a       	mov	r10,16
80003254:	02 9b       	mov	r11,r1
80003256:	ea cc ff cc 	sub	r12,r5,-52
8000325a:	f0 1f 00 4a 	mcall	80003380 <xTaskGenericCreate+0x190>
8000325e:	30 08       	mov	r8,0
80003260:	eb 68 00 43 	st.b	r5[67],r8
80003264:	58 73       	cp.w	r3,7
80003266:	e6 07 17 80 	movls	r7,r3
8000326a:	f9 b7 0b 07 	movhi	r7,7
8000326e:	8b b7       	st.w	r5[0x2c],r7
80003270:	ea c4 ff fc 	sub	r4,r5,-4
80003274:	08 9c       	mov	r12,r4
80003276:	f0 1f 00 44 	mcall	80003384 <xTaskGenericCreate+0x194>
8000327a:	ea cc ff e8 	sub	r12,r5,-24
8000327e:	f0 1f 00 42 	mcall	80003384 <xTaskGenericCreate+0x194>
80003282:	8b 45       	st.w	r5[0x10],r5
80003284:	ee 07 11 08 	rsub	r7,r7,8
80003288:	8b 67       	st.w	r5[0x18],r7
8000328a:	8b 95       	st.w	r5[0x24],r5
8000328c:	00 9a       	mov	r10,r0
8000328e:	40 0b       	lddsp	r11,sp[0x0]
80003290:	0c 9c       	mov	r12,r6
80003292:	f0 1f 00 3e 	mcall	80003388 <xTaskGenericCreate+0x198>
80003296:	8b 0c       	st.w	r5[0x0],r12
80003298:	58 02       	cp.w	r2,0
8000329a:	e5 f5 1a 00 	st.wne	r2[0x0],r5
8000329e:	f0 1f 00 3c 	mcall	8000338c <xTaskGenericCreate+0x19c>
800032a2:	4b c8       	lddpc	r8,80003390 <xTaskGenericCreate+0x1a0>
800032a4:	70 09       	ld.w	r9,r8[0x0]
800032a6:	2f f9       	sub	r9,-1
800032a8:	91 09       	st.w	r8[0x0],r9
800032aa:	4b b8       	lddpc	r8,80003394 <xTaskGenericCreate+0x1a4>
800032ac:	70 08       	ld.w	r8,r8[0x0]
800032ae:	58 08       	cp.w	r8,0
800032b0:	c2 61       	brne	800032fc <xTaskGenericCreate+0x10c>
800032b2:	4b 98       	lddpc	r8,80003394 <xTaskGenericCreate+0x1a4>
800032b4:	91 05       	st.w	r8[0x0],r5
800032b6:	4b 78       	lddpc	r8,80003390 <xTaskGenericCreate+0x1a0>
800032b8:	70 08       	ld.w	r8,r8[0x0]
800032ba:	58 18       	cp.w	r8,1
800032bc:	c2 b1       	brne	80003312 <xTaskGenericCreate+0x122>
800032be:	4b 77       	lddpc	r7,80003398 <xTaskGenericCreate+0x1a8>
800032c0:	ee c6 ff 60 	sub	r6,r7,-160
800032c4:	0e 9c       	mov	r12,r7
800032c6:	f0 1f 00 36 	mcall	8000339c <xTaskGenericCreate+0x1ac>
800032ca:	2e c7       	sub	r7,-20
800032cc:	0c 37       	cp.w	r7,r6
800032ce:	cf b1       	brne	800032c4 <xTaskGenericCreate+0xd4>
800032d0:	4b 47       	lddpc	r7,800033a0 <xTaskGenericCreate+0x1b0>
800032d2:	0e 9c       	mov	r12,r7
800032d4:	f0 1f 00 32 	mcall	8000339c <xTaskGenericCreate+0x1ac>
800032d8:	4b 36       	lddpc	r6,800033a4 <xTaskGenericCreate+0x1b4>
800032da:	0c 9c       	mov	r12,r6
800032dc:	f0 1f 00 30 	mcall	8000339c <xTaskGenericCreate+0x1ac>
800032e0:	4b 2c       	lddpc	r12,800033a8 <xTaskGenericCreate+0x1b8>
800032e2:	f0 1f 00 2f 	mcall	8000339c <xTaskGenericCreate+0x1ac>
800032e6:	4b 2c       	lddpc	r12,800033ac <xTaskGenericCreate+0x1bc>
800032e8:	f0 1f 00 2d 	mcall	8000339c <xTaskGenericCreate+0x1ac>
800032ec:	4b 1c       	lddpc	r12,800033b0 <xTaskGenericCreate+0x1c0>
800032ee:	f0 1f 00 2c 	mcall	8000339c <xTaskGenericCreate+0x1ac>
800032f2:	4b 18       	lddpc	r8,800033b4 <xTaskGenericCreate+0x1c4>
800032f4:	91 07       	st.w	r8[0x0],r7
800032f6:	4b 18       	lddpc	r8,800033b8 <xTaskGenericCreate+0x1c8>
800032f8:	91 06       	st.w	r8[0x0],r6
800032fa:	c0 c8       	rjmp	80003312 <xTaskGenericCreate+0x122>
800032fc:	4b 08       	lddpc	r8,800033bc <xTaskGenericCreate+0x1cc>
800032fe:	70 08       	ld.w	r8,r8[0x0]
80003300:	58 08       	cp.w	r8,0
80003302:	c0 81       	brne	80003312 <xTaskGenericCreate+0x122>
80003304:	4a 48       	lddpc	r8,80003394 <xTaskGenericCreate+0x1a4>
80003306:	70 08       	ld.w	r8,r8[0x0]
80003308:	70 b8       	ld.w	r8,r8[0x2c]
8000330a:	10 33       	cp.w	r3,r8
8000330c:	c0 33       	brcs	80003312 <xTaskGenericCreate+0x122>
8000330e:	4a 28       	lddpc	r8,80003394 <xTaskGenericCreate+0x1a4>
80003310:	91 05       	st.w	r8[0x0],r5
80003312:	6a b8       	ld.w	r8,r5[0x2c]
80003314:	4a b9       	lddpc	r9,800033c0 <xTaskGenericCreate+0x1d0>
80003316:	72 09       	ld.w	r9,r9[0x0]
80003318:	12 38       	cp.w	r8,r9
8000331a:	e0 88 00 04 	brls	80003322 <xTaskGenericCreate+0x132>
8000331e:	4a 99       	lddpc	r9,800033c0 <xTaskGenericCreate+0x1d0>
80003320:	93 08       	st.w	r9[0x0],r8
80003322:	4a 98       	lddpc	r8,800033c4 <xTaskGenericCreate+0x1d4>
80003324:	70 09       	ld.w	r9,r8[0x0]
80003326:	2f f9       	sub	r9,-1
80003328:	91 09       	st.w	r8[0x0],r9
8000332a:	6a b8       	ld.w	r8,r5[0x2c]
8000332c:	4a 79       	lddpc	r9,800033c8 <xTaskGenericCreate+0x1d8>
8000332e:	72 09       	ld.w	r9,r9[0x0]
80003330:	12 38       	cp.w	r8,r9
80003332:	e0 88 00 04 	brls	8000333a <xTaskGenericCreate+0x14a>
80003336:	4a 59       	lddpc	r9,800033c8 <xTaskGenericCreate+0x1d8>
80003338:	93 08       	st.w	r9[0x0],r8
8000333a:	6a bc       	ld.w	r12,r5[0x2c]
8000333c:	f8 0c 00 2c 	add	r12,r12,r12<<0x2
80003340:	08 9b       	mov	r11,r4
80003342:	49 68       	lddpc	r8,80003398 <xTaskGenericCreate+0x1a8>
80003344:	f0 0c 00 2c 	add	r12,r8,r12<<0x2
80003348:	f0 1f 00 21 	mcall	800033cc <xTaskGenericCreate+0x1dc>
8000334c:	f0 1f 00 21 	mcall	800033d0 <xTaskGenericCreate+0x1e0>
80003350:	49 b8       	lddpc	r8,800033bc <xTaskGenericCreate+0x1cc>
80003352:	70 08       	ld.w	r8,r8[0x0]
80003354:	58 08       	cp.w	r8,0
80003356:	c0 a0       	breq	8000336a <xTaskGenericCreate+0x17a>
80003358:	48 f8       	lddpc	r8,80003394 <xTaskGenericCreate+0x1a4>
8000335a:	70 08       	ld.w	r8,r8[0x0]
8000335c:	70 b8       	ld.w	r8,r8[0x2c]
8000335e:	10 33       	cp.w	r3,r8
80003360:	e0 88 00 05 	brls	8000336a <xTaskGenericCreate+0x17a>
80003364:	d7 33       	scall
80003366:	30 1c       	mov	r12,1
80003368:	c0 28       	rjmp	8000336c <xTaskGenericCreate+0x17c>
8000336a:	30 1c       	mov	r12,1
8000336c:	2f fd       	sub	sp,-4
8000336e:	d8 32       	popm	r0-r7,pc
80003370:	99 c6       	st.w	r12[0x30],r6
80003372:	c6 1b       	rjmp	80003234 <xTaskGenericCreate+0x44>
80003374:	80 00       	ld.sh	r0,r0[0x0]
80003376:	2c 88       	sub	r8,-56
80003378:	80 00       	ld.sh	r0,r0[0x0]
8000337a:	2c 60       	sub	r0,-58
8000337c:	80 00       	ld.sh	r0,r0[0x0]
8000337e:	38 a4       	mov	r4,-118
80003380:	80 00       	ld.sh	r0,r0[0x0]
80003382:	38 d4       	mov	r4,-115
80003384:	80 00       	ld.sh	r0,r0[0x0]
80003386:	29 38       	sub	r8,-109
80003388:	80 00       	ld.sh	r0,r0[0x0]
8000338a:	29 b4       	sub	r4,-101
8000338c:	80 00       	ld.sh	r0,r0[0x0]
8000338e:	2a 48       	sub	r8,-92
80003390:	00 00       	add	r0,r0
80003392:	07 38       	ld.ub	r8,r3++
80003394:	00 00       	add	r0,r0
80003396:	06 ec       	st.h	--r3,r12
80003398:	00 00       	add	r0,r0
8000339a:	06 38       	cp.w	r8,r3
8000339c:	80 00       	ld.sh	r0,r0[0x0]
8000339e:	29 24       	sub	r4,-110
800033a0:	00 00       	add	r0,r0
800033a2:	07 04       	ld.w	r4,r3++
800033a4:	00 00       	add	r0,r0
800033a6:	07 20       	ld.uh	r0,r3++
800033a8:	00 00       	add	r0,r0
800033aa:	06 f0       	st.b	--r3,r0
800033ac:	00 00       	add	r0,r0
800033ae:	06 d8       	st.w	--r3,r8
800033b0:	00 00       	add	r0,r0
800033b2:	07 40       	ld.w	r0,--r3
800033b4:	00 00       	add	r0,r0
800033b6:	06 24       	rsub	r4,r3
800033b8:	00 00       	add	r0,r0
800033ba:	06 34       	cp.w	r4,r3
800033bc:	00 00       	add	r0,r0
800033be:	06 28       	rsub	r8,r3
800033c0:	00 00       	add	r0,r0
800033c2:	06 20       	rsub	r0,r3
800033c4:	00 00       	add	r0,r0
800033c6:	07 34       	ld.ub	r4,r3++
800033c8:	00 00       	add	r0,r0
800033ca:	07 54       	ld.sh	r4,--r3
800033cc:	80 00       	ld.sh	r0,r0[0x0]
800033ce:	29 3e       	sub	lr,-109
800033d0:	80 00       	ld.sh	r0,r0[0x0]
800033d2:	2b 54       	sub	r4,-75

800033d4 <vTaskStartScheduler>:
800033d4:	d4 01       	pushm	lr
800033d6:	30 09       	mov	r9,0
800033d8:	1a d9       	st.w	--sp,r9
800033da:	1a d9       	st.w	--sp,r9
800033dc:	1a d9       	st.w	--sp,r9
800033de:	12 98       	mov	r8,r9
800033e0:	e0 6a 01 00 	mov	r10,256
800033e4:	48 9b       	lddpc	r11,80003408 <vTaskStartScheduler+0x34>
800033e6:	48 ac       	lddpc	r12,8000340c <vTaskStartScheduler+0x38>
800033e8:	f0 1f 00 0a 	mcall	80003410 <vTaskStartScheduler+0x3c>
800033ec:	2f dd       	sub	sp,-12
800033ee:	58 1c       	cp.w	r12,1
800033f0:	c0 a1       	brne	80003404 <vTaskStartScheduler+0x30>
800033f2:	d3 03       	ssrf	0x10
800033f4:	30 19       	mov	r9,1
800033f6:	48 88       	lddpc	r8,80003414 <vTaskStartScheduler+0x40>
800033f8:	91 09       	st.w	r8[0x0],r9
800033fa:	30 09       	mov	r9,0
800033fc:	48 78       	lddpc	r8,80003418 <vTaskStartScheduler+0x44>
800033fe:	91 09       	st.w	r8[0x0],r9
80003400:	f0 1f 00 07 	mcall	8000341c <vTaskStartScheduler+0x48>
80003404:	d8 02       	popm	pc
80003406:	00 00       	add	r0,r0
80003408:	80 00       	ld.sh	r0,r0[0x0]
8000340a:	42 08       	lddsp	r8,sp[0x80]
8000340c:	80 00       	ld.sh	r0,r0[0x0]
8000340e:	31 70       	mov	r0,23
80003410:	80 00       	ld.sh	r0,r0[0x0]
80003412:	31 f0       	mov	r0,31
80003414:	00 00       	add	r0,r0
80003416:	06 28       	rsub	r8,r3
80003418:	00 00       	add	r0,r0
8000341a:	07 18       	ld.sh	r8,r3++
8000341c:	80 00       	ld.sh	r0,r0[0x0]
8000341e:	2a 58       	sub	r8,-91

80003420 <atexit>:
80003420:	d4 01       	pushm	lr
80003422:	30 09       	mov	r9,0
80003424:	18 9b       	mov	r11,r12
80003426:	12 9a       	mov	r10,r9
80003428:	12 9c       	mov	r12,r9
8000342a:	e0 a0 02 8b 	rcall	80003940 <__register_exitproc>
8000342e:	d8 02       	popm	pc

80003430 <exit>:
80003430:	d4 21       	pushm	r4-r7,lr
80003432:	30 0b       	mov	r11,0
80003434:	18 97       	mov	r7,r12
80003436:	e0 a0 02 d7 	rcall	800039e4 <__call_exitprocs>
8000343a:	fe c8 f2 26 	sub	r8,pc,-3546
8000343e:	70 0c       	ld.w	r12,r8[0x0]
80003440:	78 a8       	ld.w	r8,r12[0x28]
80003442:	58 08       	cp.w	r8,0
80003444:	c0 20       	breq	80003448 <exit+0x18>
80003446:	5d 18       	icall	r8
80003448:	0e 9c       	mov	r12,r7
8000344a:	e0 a0 02 5a 	rcall	800038fe <_exit>
8000344e:	d7 03       	nop

80003450 <free>:
80003450:	d4 01       	pushm	lr
80003452:	e0 68 01 14 	mov	r8,276
80003456:	18 9b       	mov	r11,r12
80003458:	70 0c       	ld.w	r12,r8[0x0]
8000345a:	e0 a0 03 79 	rcall	80003b4c <_free_r>
8000345e:	d8 02       	popm	pc

80003460 <malloc>:
80003460:	d4 01       	pushm	lr
80003462:	e0 68 01 14 	mov	r8,276
80003466:	18 9b       	mov	r11,r12
80003468:	70 0c       	ld.w	r12,r8[0x0]
8000346a:	c0 3c       	rcall	80003470 <_malloc_r>
8000346c:	d8 02       	popm	pc
8000346e:	d7 03       	nop

80003470 <_malloc_r>:
80003470:	d4 31       	pushm	r0-r7,lr
80003472:	f6 c8 ff f5 	sub	r8,r11,-11
80003476:	18 95       	mov	r5,r12
80003478:	10 97       	mov	r7,r8
8000347a:	e0 17 ff f8 	andl	r7,0xfff8
8000347e:	59 68       	cp.w	r8,22
80003480:	f9 b7 08 10 	movls	r7,16
80003484:	16 37       	cp.w	r7,r11
80003486:	5f 38       	srlo	r8
80003488:	f1 e7 13 f8 	or	r8,r8,r7>>0x1f
8000348c:	c0 50       	breq	80003496 <_malloc_r+0x26>
8000348e:	30 c8       	mov	r8,12
80003490:	99 38       	st.w	r12[0xc],r8
80003492:	e0 8f 01 f7 	bral	80003880 <_malloc_r+0x410>
80003496:	fe b0 fb b1 	rcall	80002bf8 <__malloc_lock>
8000349a:	e0 47 01 f7 	cp.w	r7,503
8000349e:	e0 8b 00 1d 	brhi	800034d8 <_malloc_r+0x68>
800034a2:	ee 03 16 03 	lsr	r3,r7,0x3
800034a6:	e0 68 01 18 	mov	r8,280
800034aa:	f0 03 00 38 	add	r8,r8,r3<<0x3
800034ae:	70 36       	ld.w	r6,r8[0xc]
800034b0:	10 36       	cp.w	r6,r8
800034b2:	c0 61       	brne	800034be <_malloc_r+0x4e>
800034b4:	ec c8 ff f8 	sub	r8,r6,-8
800034b8:	70 36       	ld.w	r6,r8[0xc]
800034ba:	10 36       	cp.w	r6,r8
800034bc:	c0 c0       	breq	800034d4 <_malloc_r+0x64>
800034be:	6c 18       	ld.w	r8,r6[0x4]
800034c0:	e0 18 ff fc 	andl	r8,0xfffc
800034c4:	6c 3a       	ld.w	r10,r6[0xc]
800034c6:	ec 08 00 09 	add	r9,r6,r8
800034ca:	0a 9c       	mov	r12,r5
800034cc:	6c 28       	ld.w	r8,r6[0x8]
800034ce:	95 28       	st.w	r10[0x8],r8
800034d0:	91 3a       	st.w	r8[0xc],r10
800034d2:	c4 78       	rjmp	80003560 <_malloc_r+0xf0>
800034d4:	2f e3       	sub	r3,-2
800034d6:	c4 d8       	rjmp	80003570 <_malloc_r+0x100>
800034d8:	ee 03 16 09 	lsr	r3,r7,0x9
800034dc:	c0 41       	brne	800034e4 <_malloc_r+0x74>
800034de:	ee 03 16 03 	lsr	r3,r7,0x3
800034e2:	c2 68       	rjmp	8000352e <_malloc_r+0xbe>
800034e4:	58 43       	cp.w	r3,4
800034e6:	e0 8b 00 06 	brhi	800034f2 <_malloc_r+0x82>
800034ea:	ee 03 16 06 	lsr	r3,r7,0x6
800034ee:	2c 83       	sub	r3,-56
800034f0:	c1 f8       	rjmp	8000352e <_malloc_r+0xbe>
800034f2:	59 43       	cp.w	r3,20
800034f4:	e0 8b 00 04 	brhi	800034fc <_malloc_r+0x8c>
800034f8:	2a 53       	sub	r3,-91
800034fa:	c1 a8       	rjmp	8000352e <_malloc_r+0xbe>
800034fc:	e0 43 00 54 	cp.w	r3,84
80003500:	e0 8b 00 06 	brhi	8000350c <_malloc_r+0x9c>
80003504:	ee 03 16 0c 	lsr	r3,r7,0xc
80003508:	29 23       	sub	r3,-110
8000350a:	c1 28       	rjmp	8000352e <_malloc_r+0xbe>
8000350c:	e0 43 01 54 	cp.w	r3,340
80003510:	e0 8b 00 06 	brhi	8000351c <_malloc_r+0xac>
80003514:	ee 03 16 0f 	lsr	r3,r7,0xf
80003518:	28 93       	sub	r3,-119
8000351a:	c0 a8       	rjmp	8000352e <_malloc_r+0xbe>
8000351c:	e0 43 05 54 	cp.w	r3,1364
80003520:	e0 88 00 04 	brls	80003528 <_malloc_r+0xb8>
80003524:	37 e3       	mov	r3,126
80003526:	c0 48       	rjmp	8000352e <_malloc_r+0xbe>
80003528:	ee 03 16 12 	lsr	r3,r7,0x12
8000352c:	28 43       	sub	r3,-124
8000352e:	e0 6a 01 18 	mov	r10,280
80003532:	f4 03 00 3a 	add	r10,r10,r3<<0x3
80003536:	74 36       	ld.w	r6,r10[0xc]
80003538:	c1 98       	rjmp	8000356a <_malloc_r+0xfa>
8000353a:	6c 19       	ld.w	r9,r6[0x4]
8000353c:	e0 19 ff fc 	andl	r9,0xfffc
80003540:	f2 07 01 0b 	sub	r11,r9,r7
80003544:	58 fb       	cp.w	r11,15
80003546:	e0 8a 00 04 	brle	8000354e <_malloc_r+0xde>
8000354a:	20 13       	sub	r3,1
8000354c:	c1 18       	rjmp	8000356e <_malloc_r+0xfe>
8000354e:	6c 38       	ld.w	r8,r6[0xc]
80003550:	58 0b       	cp.w	r11,0
80003552:	c0 b5       	brlt	80003568 <_malloc_r+0xf8>
80003554:	6c 2a       	ld.w	r10,r6[0x8]
80003556:	ec 09 00 09 	add	r9,r6,r9
8000355a:	0a 9c       	mov	r12,r5
8000355c:	91 2a       	st.w	r8[0x8],r10
8000355e:	95 38       	st.w	r10[0xc],r8
80003560:	72 18       	ld.w	r8,r9[0x4]
80003562:	a1 a8       	sbr	r8,0x0
80003564:	93 18       	st.w	r9[0x4],r8
80003566:	cb c8       	rjmp	800036de <_malloc_r+0x26e>
80003568:	10 96       	mov	r6,r8
8000356a:	14 36       	cp.w	r6,r10
8000356c:	ce 71       	brne	8000353a <_malloc_r+0xca>
8000356e:	2f f3       	sub	r3,-1
80003570:	e0 6a 01 18 	mov	r10,280
80003574:	f4 cc ff f8 	sub	r12,r10,-8
80003578:	78 26       	ld.w	r6,r12[0x8]
8000357a:	18 36       	cp.w	r6,r12
8000357c:	c6 c0       	breq	80003654 <_malloc_r+0x1e4>
8000357e:	6c 19       	ld.w	r9,r6[0x4]
80003580:	e0 19 ff fc 	andl	r9,0xfffc
80003584:	f2 07 01 08 	sub	r8,r9,r7
80003588:	58 f8       	cp.w	r8,15
8000358a:	e0 89 00 8f 	brgt	800036a8 <_malloc_r+0x238>
8000358e:	99 3c       	st.w	r12[0xc],r12
80003590:	99 2c       	st.w	r12[0x8],r12
80003592:	58 08       	cp.w	r8,0
80003594:	c0 55       	brlt	8000359e <_malloc_r+0x12e>
80003596:	ec 09 00 09 	add	r9,r6,r9
8000359a:	0a 9c       	mov	r12,r5
8000359c:	ce 2b       	rjmp	80003560 <_malloc_r+0xf0>
8000359e:	e0 49 01 ff 	cp.w	r9,511
800035a2:	e0 8b 00 13 	brhi	800035c8 <_malloc_r+0x158>
800035a6:	a3 99       	lsr	r9,0x3
800035a8:	f4 09 00 38 	add	r8,r10,r9<<0x3
800035ac:	70 2b       	ld.w	r11,r8[0x8]
800035ae:	8d 38       	st.w	r6[0xc],r8
800035b0:	8d 2b       	st.w	r6[0x8],r11
800035b2:	97 36       	st.w	r11[0xc],r6
800035b4:	91 26       	st.w	r8[0x8],r6
800035b6:	a3 49       	asr	r9,0x2
800035b8:	74 18       	ld.w	r8,r10[0x4]
800035ba:	30 1b       	mov	r11,1
800035bc:	f6 09 09 49 	lsl	r9,r11,r9
800035c0:	f1 e9 10 09 	or	r9,r8,r9
800035c4:	95 19       	st.w	r10[0x4],r9
800035c6:	c4 78       	rjmp	80003654 <_malloc_r+0x1e4>
800035c8:	f2 0a 16 09 	lsr	r10,r9,0x9
800035cc:	58 4a       	cp.w	r10,4
800035ce:	e0 8b 00 07 	brhi	800035dc <_malloc_r+0x16c>
800035d2:	f2 0a 16 06 	lsr	r10,r9,0x6
800035d6:	2c 8a       	sub	r10,-56
800035d8:	c2 08       	rjmp	80003618 <_malloc_r+0x1a8>
800035da:	d7 03       	nop
800035dc:	59 4a       	cp.w	r10,20
800035de:	e0 8b 00 04 	brhi	800035e6 <_malloc_r+0x176>
800035e2:	2a 5a       	sub	r10,-91
800035e4:	c1 a8       	rjmp	80003618 <_malloc_r+0x1a8>
800035e6:	e0 4a 00 54 	cp.w	r10,84
800035ea:	e0 8b 00 06 	brhi	800035f6 <_malloc_r+0x186>
800035ee:	f2 0a 16 0c 	lsr	r10,r9,0xc
800035f2:	29 2a       	sub	r10,-110
800035f4:	c1 28       	rjmp	80003618 <_malloc_r+0x1a8>
800035f6:	e0 4a 01 54 	cp.w	r10,340
800035fa:	e0 8b 00 06 	brhi	80003606 <_malloc_r+0x196>
800035fe:	f2 0a 16 0f 	lsr	r10,r9,0xf
80003602:	28 9a       	sub	r10,-119
80003604:	c0 a8       	rjmp	80003618 <_malloc_r+0x1a8>
80003606:	e0 4a 05 54 	cp.w	r10,1364
8000360a:	e0 88 00 04 	brls	80003612 <_malloc_r+0x1a2>
8000360e:	37 ea       	mov	r10,126
80003610:	c0 48       	rjmp	80003618 <_malloc_r+0x1a8>
80003612:	f2 0a 16 12 	lsr	r10,r9,0x12
80003616:	28 4a       	sub	r10,-124
80003618:	e0 6b 01 18 	mov	r11,280
8000361c:	f6 0a 00 34 	add	r4,r11,r10<<0x3
80003620:	68 28       	ld.w	r8,r4[0x8]
80003622:	08 38       	cp.w	r8,r4
80003624:	c0 e1       	brne	80003640 <_malloc_r+0x1d0>
80003626:	76 19       	ld.w	r9,r11[0x4]
80003628:	a3 4a       	asr	r10,0x2
8000362a:	30 1e       	mov	lr,1
8000362c:	fc 0a 09 4a 	lsl	r10,lr,r10
80003630:	f3 ea 10 0a 	or	r10,r9,r10
80003634:	10 99       	mov	r9,r8
80003636:	97 1a       	st.w	r11[0x4],r10
80003638:	c0 a8       	rjmp	8000364c <_malloc_r+0x1dc>
8000363a:	70 28       	ld.w	r8,r8[0x8]
8000363c:	08 38       	cp.w	r8,r4
8000363e:	c0 60       	breq	8000364a <_malloc_r+0x1da>
80003640:	70 1a       	ld.w	r10,r8[0x4]
80003642:	e0 1a ff fc 	andl	r10,0xfffc
80003646:	14 39       	cp.w	r9,r10
80003648:	cf 93       	brcs	8000363a <_malloc_r+0x1ca>
8000364a:	70 39       	ld.w	r9,r8[0xc]
8000364c:	8d 39       	st.w	r6[0xc],r9
8000364e:	8d 28       	st.w	r6[0x8],r8
80003650:	91 36       	st.w	r8[0xc],r6
80003652:	93 26       	st.w	r9[0x8],r6
80003654:	e6 08 14 02 	asr	r8,r3,0x2
80003658:	30 1b       	mov	r11,1
8000365a:	e0 64 01 18 	mov	r4,280
8000365e:	f6 08 09 4b 	lsl	r11,r11,r8
80003662:	68 18       	ld.w	r8,r4[0x4]
80003664:	10 3b       	cp.w	r11,r8
80003666:	e0 8b 00 6b 	brhi	8000373c <_malloc_r+0x2cc>
8000366a:	f7 e8 00 09 	and	r9,r11,r8
8000366e:	c0 b1       	brne	80003684 <_malloc_r+0x214>
80003670:	e0 13 ff fc 	andl	r3,0xfffc
80003674:	a1 7b       	lsl	r11,0x1
80003676:	2f c3       	sub	r3,-4
80003678:	c0 38       	rjmp	8000367e <_malloc_r+0x20e>
8000367a:	2f c3       	sub	r3,-4
8000367c:	a1 7b       	lsl	r11,0x1
8000367e:	f7 e8 00 09 	and	r9,r11,r8
80003682:	cf c0       	breq	8000367a <_malloc_r+0x20a>
80003684:	e8 03 00 3e 	add	lr,r4,r3<<0x3
80003688:	06 92       	mov	r2,r3
8000368a:	1c 91       	mov	r1,lr
8000368c:	62 36       	ld.w	r6,r1[0xc]
8000368e:	c2 e8       	rjmp	800036ea <_malloc_r+0x27a>
80003690:	6c 1a       	ld.w	r10,r6[0x4]
80003692:	e0 1a ff fc 	andl	r10,0xfffc
80003696:	f4 07 01 08 	sub	r8,r10,r7
8000369a:	58 f8       	cp.w	r8,15
8000369c:	e0 8a 00 15 	brle	800036c6 <_malloc_r+0x256>
800036a0:	6c 3a       	ld.w	r10,r6[0xc]
800036a2:	6c 29       	ld.w	r9,r6[0x8]
800036a4:	95 29       	st.w	r10[0x8],r9
800036a6:	93 3a       	st.w	r9[0xc],r10
800036a8:	0e 99       	mov	r9,r7
800036aa:	ec 07 00 07 	add	r7,r6,r7
800036ae:	a1 a9       	sbr	r9,0x0
800036b0:	99 37       	st.w	r12[0xc],r7
800036b2:	99 27       	st.w	r12[0x8],r7
800036b4:	8d 19       	st.w	r6[0x4],r9
800036b6:	ee 08 09 08 	st.w	r7[r8],r8
800036ba:	8f 2c       	st.w	r7[0x8],r12
800036bc:	8f 3c       	st.w	r7[0xc],r12
800036be:	a1 a8       	sbr	r8,0x0
800036c0:	0a 9c       	mov	r12,r5
800036c2:	8f 18       	st.w	r7[0x4],r8
800036c4:	c0 d8       	rjmp	800036de <_malloc_r+0x26e>
800036c6:	6c 39       	ld.w	r9,r6[0xc]
800036c8:	58 08       	cp.w	r8,0
800036ca:	c0 f5       	brlt	800036e8 <_malloc_r+0x278>
800036cc:	ec 0a 00 0a 	add	r10,r6,r10
800036d0:	74 18       	ld.w	r8,r10[0x4]
800036d2:	a1 a8       	sbr	r8,0x0
800036d4:	0a 9c       	mov	r12,r5
800036d6:	95 18       	st.w	r10[0x4],r8
800036d8:	6c 28       	ld.w	r8,r6[0x8]
800036da:	93 28       	st.w	r9[0x8],r8
800036dc:	91 39       	st.w	r8[0xc],r9
800036de:	fe b0 fa 93 	rcall	80002c04 <__malloc_unlock>
800036e2:	ec cc ff f8 	sub	r12,r6,-8
800036e6:	d8 32       	popm	r0-r7,pc
800036e8:	12 96       	mov	r6,r9
800036ea:	02 36       	cp.w	r6,r1
800036ec:	cd 21       	brne	80003690 <_malloc_r+0x220>
800036ee:	2f f2       	sub	r2,-1
800036f0:	f1 d2 c0 02 	bfextu	r8,r2,0x0,0x2
800036f4:	c0 30       	breq	800036fa <_malloc_r+0x28a>
800036f6:	2f 81       	sub	r1,-8
800036f8:	cc ab       	rjmp	8000368c <_malloc_r+0x21c>
800036fa:	1c 98       	mov	r8,lr
800036fc:	f3 d3 c0 02 	bfextu	r9,r3,0x0,0x2
80003700:	c0 81       	brne	80003710 <_malloc_r+0x2a0>
80003702:	68 19       	ld.w	r9,r4[0x4]
80003704:	f6 08 11 ff 	rsub	r8,r11,-1
80003708:	f3 e8 00 08 	and	r8,r9,r8
8000370c:	89 18       	st.w	r4[0x4],r8
8000370e:	c0 78       	rjmp	8000371c <_malloc_r+0x2ac>
80003710:	f0 c9 00 08 	sub	r9,r8,8
80003714:	20 13       	sub	r3,1
80003716:	70 08       	ld.w	r8,r8[0x0]
80003718:	12 38       	cp.w	r8,r9
8000371a:	cf 10       	breq	800036fc <_malloc_r+0x28c>
8000371c:	a1 7b       	lsl	r11,0x1
8000371e:	68 18       	ld.w	r8,r4[0x4]
80003720:	10 3b       	cp.w	r11,r8
80003722:	e0 8b 00 0d 	brhi	8000373c <_malloc_r+0x2cc>
80003726:	58 0b       	cp.w	r11,0
80003728:	c0 a0       	breq	8000373c <_malloc_r+0x2cc>
8000372a:	04 93       	mov	r3,r2
8000372c:	c0 38       	rjmp	80003732 <_malloc_r+0x2c2>
8000372e:	2f c3       	sub	r3,-4
80003730:	a1 7b       	lsl	r11,0x1
80003732:	f7 e8 00 09 	and	r9,r11,r8
80003736:	ca 71       	brne	80003684 <_malloc_r+0x214>
80003738:	cf bb       	rjmp	8000372e <_malloc_r+0x2be>
8000373a:	d7 03       	nop
8000373c:	68 23       	ld.w	r3,r4[0x8]
8000373e:	66 12       	ld.w	r2,r3[0x4]
80003740:	e0 12 ff fc 	andl	r2,0xfffc
80003744:	0e 32       	cp.w	r2,r7
80003746:	5f 39       	srlo	r9
80003748:	e4 07 01 08 	sub	r8,r2,r7
8000374c:	58 f8       	cp.w	r8,15
8000374e:	5f aa       	srle	r10
80003750:	f5 e9 10 09 	or	r9,r10,r9
80003754:	e0 80 00 98 	breq	80003884 <_malloc_r+0x414>
80003758:	e0 68 07 60 	mov	r8,1888
8000375c:	70 01       	ld.w	r1,r8[0x0]
8000375e:	e0 68 05 24 	mov	r8,1316
80003762:	2f 01       	sub	r1,-16
80003764:	70 08       	ld.w	r8,r8[0x0]
80003766:	0e 01       	add	r1,r7
80003768:	5b f8       	cp.w	r8,-1
8000376a:	c0 40       	breq	80003772 <_malloc_r+0x302>
8000376c:	28 11       	sub	r1,-127
8000376e:	e0 11 ff 80 	andl	r1,0xff80
80003772:	02 9b       	mov	r11,r1
80003774:	0a 9c       	mov	r12,r5
80003776:	c9 fc       	rcall	800038b4 <_sbrk_r>
80003778:	18 96       	mov	r6,r12
8000377a:	5b fc       	cp.w	r12,-1
8000377c:	c7 30       	breq	80003862 <_malloc_r+0x3f2>
8000377e:	e6 02 00 08 	add	r8,r3,r2
80003782:	10 3c       	cp.w	r12,r8
80003784:	c0 32       	brcc	8000378a <_malloc_r+0x31a>
80003786:	08 33       	cp.w	r3,r4
80003788:	c6 d1       	brne	80003862 <_malloc_r+0x3f2>
8000378a:	e0 6a 07 64 	mov	r10,1892
8000378e:	74 09       	ld.w	r9,r10[0x0]
80003790:	e2 09 00 09 	add	r9,r1,r9
80003794:	95 09       	st.w	r10[0x0],r9
80003796:	10 36       	cp.w	r6,r8
80003798:	c0 a1       	brne	800037ac <_malloc_r+0x33c>
8000379a:	f5 d6 c0 07 	bfextu	r10,r6,0x0,0x7
8000379e:	c0 71       	brne	800037ac <_malloc_r+0x33c>
800037a0:	e2 02 00 02 	add	r2,r1,r2
800037a4:	68 28       	ld.w	r8,r4[0x8]
800037a6:	a1 a2       	sbr	r2,0x0
800037a8:	91 12       	st.w	r8[0x4],r2
800037aa:	c4 d8       	rjmp	80003844 <_malloc_r+0x3d4>
800037ac:	e0 6a 05 24 	mov	r10,1316
800037b0:	74 0b       	ld.w	r11,r10[0x0]
800037b2:	5b fb       	cp.w	r11,-1
800037b4:	c0 31       	brne	800037ba <_malloc_r+0x34a>
800037b6:	95 06       	st.w	r10[0x0],r6
800037b8:	c0 78       	rjmp	800037c6 <_malloc_r+0x356>
800037ba:	ec 09 00 09 	add	r9,r6,r9
800037be:	e0 6a 07 64 	mov	r10,1892
800037c2:	10 19       	sub	r9,r8
800037c4:	95 09       	st.w	r10[0x0],r9
800037c6:	f1 d6 c0 03 	bfextu	r8,r6,0x0,0x3
800037ca:	f0 09 11 08 	rsub	r9,r8,8
800037ce:	58 08       	cp.w	r8,0
800037d0:	f2 08 17 10 	movne	r8,r9
800037d4:	ed d8 e1 06 	addne	r6,r6,r8
800037d8:	28 08       	sub	r8,-128
800037da:	ec 01 00 01 	add	r1,r6,r1
800037de:	0a 9c       	mov	r12,r5
800037e0:	e3 d1 c0 07 	bfextu	r1,r1,0x0,0x7
800037e4:	f0 01 01 01 	sub	r1,r8,r1
800037e8:	02 9b       	mov	r11,r1
800037ea:	c6 5c       	rcall	800038b4 <_sbrk_r>
800037ec:	e0 68 07 64 	mov	r8,1892
800037f0:	5b fc       	cp.w	r12,-1
800037f2:	ec 0c 17 00 	moveq	r12,r6
800037f6:	f9 b1 00 00 	moveq	r1,0
800037fa:	70 09       	ld.w	r9,r8[0x0]
800037fc:	0c 1c       	sub	r12,r6
800037fe:	89 26       	st.w	r4[0x8],r6
80003800:	02 0c       	add	r12,r1
80003802:	12 01       	add	r1,r9
80003804:	a1 ac       	sbr	r12,0x0
80003806:	91 01       	st.w	r8[0x0],r1
80003808:	8d 1c       	st.w	r6[0x4],r12
8000380a:	08 33       	cp.w	r3,r4
8000380c:	c1 c0       	breq	80003844 <_malloc_r+0x3d4>
8000380e:	58 f2       	cp.w	r2,15
80003810:	e0 8b 00 05 	brhi	8000381a <_malloc_r+0x3aa>
80003814:	30 18       	mov	r8,1
80003816:	8d 18       	st.w	r6[0x4],r8
80003818:	c2 58       	rjmp	80003862 <_malloc_r+0x3f2>
8000381a:	30 59       	mov	r9,5
8000381c:	20 c2       	sub	r2,12
8000381e:	e0 12 ff f8 	andl	r2,0xfff8
80003822:	e6 02 00 08 	add	r8,r3,r2
80003826:	91 29       	st.w	r8[0x8],r9
80003828:	91 19       	st.w	r8[0x4],r9
8000382a:	66 18       	ld.w	r8,r3[0x4]
8000382c:	f1 d8 c0 01 	bfextu	r8,r8,0x0,0x1
80003830:	e5 e8 10 08 	or	r8,r2,r8
80003834:	87 18       	st.w	r3[0x4],r8
80003836:	58 f2       	cp.w	r2,15
80003838:	e0 88 00 06 	brls	80003844 <_malloc_r+0x3d4>
8000383c:	e6 cb ff f8 	sub	r11,r3,-8
80003840:	0a 9c       	mov	r12,r5
80003842:	c8 5d       	rcall	80003b4c <_free_r>
80003844:	e0 69 07 5c 	mov	r9,1884
80003848:	72 0a       	ld.w	r10,r9[0x0]
8000384a:	e0 68 07 64 	mov	r8,1892
8000384e:	70 08       	ld.w	r8,r8[0x0]
80003850:	14 38       	cp.w	r8,r10
80003852:	f3 f8 ba 00 	st.whi	r9[0x0],r8
80003856:	e0 69 07 58 	mov	r9,1880
8000385a:	72 0a       	ld.w	r10,r9[0x0]
8000385c:	14 38       	cp.w	r8,r10
8000385e:	f3 f8 ba 00 	st.whi	r9[0x0],r8
80003862:	68 28       	ld.w	r8,r4[0x8]
80003864:	70 18       	ld.w	r8,r8[0x4]
80003866:	e0 18 ff fc 	andl	r8,0xfffc
8000386a:	0e 38       	cp.w	r8,r7
8000386c:	5f 39       	srlo	r9
8000386e:	0e 18       	sub	r8,r7
80003870:	58 f8       	cp.w	r8,15
80003872:	5f aa       	srle	r10
80003874:	f5 e9 10 09 	or	r9,r10,r9
80003878:	c0 60       	breq	80003884 <_malloc_r+0x414>
8000387a:	0a 9c       	mov	r12,r5
8000387c:	fe b0 f9 c4 	rcall	80002c04 <__malloc_unlock>
80003880:	d8 3a       	popm	r0-r7,pc,r12=0
80003882:	d7 03       	nop
80003884:	68 26       	ld.w	r6,r4[0x8]
80003886:	a1 a8       	sbr	r8,0x0
80003888:	0e 99       	mov	r9,r7
8000388a:	a1 a9       	sbr	r9,0x0
8000388c:	8d 19       	st.w	r6[0x4],r9
8000388e:	ec 07 00 07 	add	r7,r6,r7
80003892:	0a 9c       	mov	r12,r5
80003894:	89 27       	st.w	r4[0x8],r7
80003896:	8f 18       	st.w	r7[0x4],r8
80003898:	fe b0 f9 b6 	rcall	80002c04 <__malloc_unlock>
8000389c:	ec cc ff f8 	sub	r12,r6,-8
800038a0:	d8 32       	popm	r0-r7,pc
800038a2:	d7 03       	nop

800038a4 <memset>:
800038a4:	18 98       	mov	r8,r12
800038a6:	c0 38       	rjmp	800038ac <memset+0x8>
800038a8:	10 cb       	st.b	r8++,r11
800038aa:	20 1a       	sub	r10,1
800038ac:	58 0a       	cp.w	r10,0
800038ae:	cf d1       	brne	800038a8 <memset+0x4>
800038b0:	5e fc       	retal	r12
800038b2:	d7 03       	nop

800038b4 <_sbrk_r>:
800038b4:	d4 21       	pushm	r4-r7,lr
800038b6:	30 08       	mov	r8,0
800038b8:	18 97       	mov	r7,r12
800038ba:	e0 66 07 94 	mov	r6,1940
800038be:	16 9c       	mov	r12,r11
800038c0:	8d 08       	st.w	r6[0x0],r8
800038c2:	c2 3c       	rcall	80003908 <_sbrk>
800038c4:	5b fc       	cp.w	r12,-1
800038c6:	c0 51       	brne	800038d0 <_sbrk_r+0x1c>
800038c8:	6c 08       	ld.w	r8,r6[0x0]
800038ca:	58 08       	cp.w	r8,0
800038cc:	ef f8 1a 03 	st.wne	r7[0xc],r8
800038d0:	d8 22       	popm	r4-r7,pc
800038d2:	d7 03       	nop

800038d4 <strncpy>:
800038d4:	30 08       	mov	r8,0
800038d6:	10 3a       	cp.w	r10,r8
800038d8:	5e 0c       	reteq	r12
800038da:	f6 08 07 09 	ld.ub	r9,r11[r8]
800038de:	f8 08 0b 09 	st.b	r12[r8],r9
800038e2:	2f f8       	sub	r8,-1
800038e4:	58 09       	cp.w	r9,0
800038e6:	cf 81       	brne	800038d6 <strncpy+0x2>
800038e8:	10 3a       	cp.w	r10,r8
800038ea:	5e 0c       	reteq	r12
800038ec:	f8 08 0b 09 	st.b	r12[r8],r9
800038f0:	2f f8       	sub	r8,-1
800038f2:	cf bb       	rjmp	800038e8 <strncpy+0x14>

800038f4 <_init_argv>:
800038f4:	30 e8       	mov	r8,14
800038f6:	d6 73       	breakpoint
800038f8:	3f fc       	mov	r12,-1
800038fa:	35 8b       	mov	r11,88
800038fc:	5e fc       	retal	r12

800038fe <_exit>:
800038fe:	30 d8       	mov	r8,13
80003900:	d6 73       	breakpoint
80003902:	3f fc       	mov	r12,-1
80003904:	35 8b       	mov	r11,88
80003906:	c0 08       	rjmp	80003906 <_exit+0x8>

80003908 <_sbrk>:
80003908:	d4 01       	pushm	lr
8000390a:	e0 68 07 8c 	mov	r8,1932
8000390e:	70 09       	ld.w	r9,r8[0x0]
80003910:	58 09       	cp.w	r9,0
80003912:	c0 41       	brne	8000391a <_sbrk+0x12>
80003914:	e0 69 07 98 	mov	r9,1944
80003918:	91 09       	st.w	r8[0x0],r9
8000391a:	e0 69 07 8c 	mov	r9,1932
8000391e:	e0 6a f0 00 	mov	r10,61440
80003922:	72 08       	ld.w	r8,r9[0x0]
80003924:	f0 0c 00 0c 	add	r12,r8,r12
80003928:	14 3c       	cp.w	r12,r10
8000392a:	e0 8b 00 04 	brhi	80003932 <_sbrk+0x2a>
8000392e:	93 0c       	st.w	r9[0x0],r12
80003930:	c0 58       	rjmp	8000393a <_sbrk+0x32>
80003932:	cb fc       	rcall	80003ab0 <__errno>
80003934:	30 c8       	mov	r8,12
80003936:	99 08       	st.w	r12[0x0],r8
80003938:	3f f8       	mov	r8,-1
8000393a:	10 9c       	mov	r12,r8
8000393c:	d8 02       	popm	pc
8000393e:	d7 03       	nop

80003940 <__register_exitproc>:
80003940:	d4 31       	pushm	r0-r7,lr
80003942:	fe c8 f7 2e 	sub	r8,pc,-2258
80003946:	70 03       	ld.w	r3,r8[0x0]
80003948:	67 24       	ld.w	r4,r3[0x48]
8000394a:	e6 c8 ff b4 	sub	r8,r3,-76
8000394e:	58 04       	cp.w	r4,0
80003950:	f0 04 17 00 	moveq	r4,r8
80003954:	e7 f4 0a 12 	st.weq	r3[0x48],r4
80003958:	18 97       	mov	r7,r12
8000395a:	16 96       	mov	r6,r11
8000395c:	14 95       	mov	r5,r10
8000395e:	12 92       	mov	r2,r9
80003960:	68 18       	ld.w	r8,r4[0x4]
80003962:	59 f8       	cp.w	r8,31
80003964:	e0 8a 00 0e 	brle	80003980 <__register_exitproc+0x40>
80003968:	e0 6c 00 8c 	mov	r12,140
8000396c:	fe b0 fd 7a 	rcall	80003460 <malloc>
80003970:	18 94       	mov	r4,r12
80003972:	c3 80       	breq	800039e2 <__register_exitproc+0xa2>
80003974:	67 28       	ld.w	r8,r3[0x48]
80003976:	99 08       	st.w	r12[0x0],r8
80003978:	e7 4c 00 48 	st.w	r3[72],r12
8000397c:	30 08       	mov	r8,0
8000397e:	99 18       	st.w	r12[0x4],r8
80003980:	58 07       	cp.w	r7,0
80003982:	c2 70       	breq	800039d0 <__register_exitproc+0x90>
80003984:	e8 fc 00 88 	ld.w	r12,r4[136]
80003988:	58 0c       	cp.w	r12,0
8000398a:	c0 d1       	brne	800039a4 <__register_exitproc+0x64>
8000398c:	e0 6c 01 08 	mov	r12,264
80003990:	fe b0 fd 68 	rcall	80003460 <malloc>
80003994:	c2 70       	breq	800039e2 <__register_exitproc+0xa2>
80003996:	30 08       	mov	r8,0
80003998:	e9 4c 00 88 	st.w	r4[136],r12
8000399c:	f9 48 01 04 	st.w	r12[260],r8
800039a0:	f9 48 01 00 	st.w	r12[256],r8
800039a4:	68 18       	ld.w	r8,r4[0x4]
800039a6:	f0 c9 ff e0 	sub	r9,r8,-32
800039aa:	f8 08 09 25 	st.w	r12[r8<<0x2],r5
800039ae:	f8 09 09 22 	st.w	r12[r9<<0x2],r2
800039b2:	30 1a       	mov	r10,1
800039b4:	f8 f9 01 00 	ld.w	r9,r12[256]
800039b8:	f4 08 09 48 	lsl	r8,r10,r8
800039bc:	10 49       	or	r9,r8
800039be:	f9 49 01 00 	st.w	r12[256],r9
800039c2:	58 27       	cp.w	r7,2
800039c4:	f9 f9 00 41 	ld.weq	r9,r12[0x104]
800039c8:	f3 d8 e0 38 	oreq	r8,r9,r8
800039cc:	f9 f8 0a 41 	st.weq	r12[0x104],r8
800039d0:	68 18       	ld.w	r8,r4[0x4]
800039d2:	30 0c       	mov	r12,0
800039d4:	f0 c9 ff ff 	sub	r9,r8,-1
800039d8:	2f e8       	sub	r8,-2
800039da:	89 19       	st.w	r4[0x4],r9
800039dc:	e8 08 09 26 	st.w	r4[r8<<0x2],r6
800039e0:	d8 32       	popm	r0-r7,pc
800039e2:	dc 3a       	popm	r0-r7,pc,r12=-1

800039e4 <__call_exitprocs>:
800039e4:	d4 31       	pushm	r0-r7,lr
800039e6:	20 3d       	sub	sp,12
800039e8:	fe c8 f7 d4 	sub	r8,pc,-2092
800039ec:	50 2c       	stdsp	sp[0x8],r12
800039ee:	70 08       	ld.w	r8,r8[0x0]
800039f0:	16 91       	mov	r1,r11
800039f2:	50 08       	stdsp	sp[0x0],r8
800039f4:	2b 88       	sub	r8,-72
800039f6:	50 18       	stdsp	sp[0x4],r8
800039f8:	40 0a       	lddsp	r10,sp[0x0]
800039fa:	40 14       	lddsp	r4,sp[0x4]
800039fc:	75 27       	ld.w	r7,r10[0x48]
800039fe:	c5 58       	rjmp	80003aa8 <__call_exitprocs+0xc4>
80003a00:	6e 15       	ld.w	r5,r7[0x4]
80003a02:	ee f6 00 88 	ld.w	r6,r7[136]
80003a06:	ea c2 ff ff 	sub	r2,r5,-1
80003a0a:	20 15       	sub	r5,1
80003a0c:	ee 02 00 22 	add	r2,r7,r2<<0x2
80003a10:	ec 05 00 23 	add	r3,r6,r5<<0x2
80003a14:	c3 58       	rjmp	80003a7e <__call_exitprocs+0x9a>
80003a16:	58 01       	cp.w	r1,0
80003a18:	c0 70       	breq	80003a26 <__call_exitprocs+0x42>
80003a1a:	58 06       	cp.w	r6,0
80003a1c:	c2 e0       	breq	80003a78 <__call_exitprocs+0x94>
80003a1e:	e6 f8 00 80 	ld.w	r8,r3[128]
80003a22:	02 38       	cp.w	r8,r1
80003a24:	c2 a1       	brne	80003a78 <__call_exitprocs+0x94>
80003a26:	6e 19       	ld.w	r9,r7[0x4]
80003a28:	64 08       	ld.w	r8,r2[0x0]
80003a2a:	20 19       	sub	r9,1
80003a2c:	12 35       	cp.w	r5,r9
80003a2e:	ef f5 0a 01 	st.weq	r7[0x4],r5
80003a32:	f9 b9 01 00 	movne	r9,0
80003a36:	e5 f9 1a 00 	st.wne	r2[0x0],r9
80003a3a:	58 08       	cp.w	r8,0
80003a3c:	c1 e0       	breq	80003a78 <__call_exitprocs+0x94>
80003a3e:	6e 10       	ld.w	r0,r7[0x4]
80003a40:	58 06       	cp.w	r6,0
80003a42:	c0 90       	breq	80003a54 <__call_exitprocs+0x70>
80003a44:	30 1a       	mov	r10,1
80003a46:	f4 05 09 49 	lsl	r9,r10,r5
80003a4a:	ec fa 01 00 	ld.w	r10,r6[256]
80003a4e:	f3 ea 00 0a 	and	r10,r9,r10
80003a52:	c0 31       	brne	80003a58 <__call_exitprocs+0x74>
80003a54:	5d 18       	icall	r8
80003a56:	c0 b8       	rjmp	80003a6c <__call_exitprocs+0x88>
80003a58:	ec fa 01 04 	ld.w	r10,r6[260]
80003a5c:	66 0b       	ld.w	r11,r3[0x0]
80003a5e:	14 69       	and	r9,r10
80003a60:	c0 41       	brne	80003a68 <__call_exitprocs+0x84>
80003a62:	40 2c       	lddsp	r12,sp[0x8]
80003a64:	5d 18       	icall	r8
80003a66:	c0 38       	rjmp	80003a6c <__call_exitprocs+0x88>
80003a68:	16 9c       	mov	r12,r11
80003a6a:	5d 18       	icall	r8
80003a6c:	6e 18       	ld.w	r8,r7[0x4]
80003a6e:	10 30       	cp.w	r0,r8
80003a70:	cc 41       	brne	800039f8 <__call_exitprocs+0x14>
80003a72:	68 08       	ld.w	r8,r4[0x0]
80003a74:	0e 38       	cp.w	r8,r7
80003a76:	cc 11       	brne	800039f8 <__call_exitprocs+0x14>
80003a78:	20 15       	sub	r5,1
80003a7a:	20 43       	sub	r3,4
80003a7c:	20 42       	sub	r2,4
80003a7e:	58 05       	cp.w	r5,0
80003a80:	cc b4       	brge	80003a16 <__call_exitprocs+0x32>
80003a82:	6e 18       	ld.w	r8,r7[0x4]
80003a84:	58 08       	cp.w	r8,0
80003a86:	c0 f1       	brne	80003aa4 <__call_exitprocs+0xc0>
80003a88:	6e 08       	ld.w	r8,r7[0x0]
80003a8a:	58 08       	cp.w	r8,0
80003a8c:	c0 c0       	breq	80003aa4 <__call_exitprocs+0xc0>
80003a8e:	89 08       	st.w	r4[0x0],r8
80003a90:	58 06       	cp.w	r6,0
80003a92:	c0 40       	breq	80003a9a <__call_exitprocs+0xb6>
80003a94:	0c 9c       	mov	r12,r6
80003a96:	fe b0 fc dd 	rcall	80003450 <free>
80003a9a:	0e 9c       	mov	r12,r7
80003a9c:	fe b0 fc da 	rcall	80003450 <free>
80003aa0:	68 07       	ld.w	r7,r4[0x0]
80003aa2:	c0 38       	rjmp	80003aa8 <__call_exitprocs+0xc4>
80003aa4:	0e 94       	mov	r4,r7
80003aa6:	6e 07       	ld.w	r7,r7[0x0]
80003aa8:	58 07       	cp.w	r7,0
80003aaa:	ca b1       	brne	80003a00 <__call_exitprocs+0x1c>
80003aac:	2f dd       	sub	sp,-12
80003aae:	d8 32       	popm	r0-r7,pc

80003ab0 <__errno>:
80003ab0:	e0 68 01 14 	mov	r8,276
80003ab4:	70 0c       	ld.w	r12,r8[0x0]
80003ab6:	2f 4c       	sub	r12,-12
80003ab8:	5e fc       	retal	r12
80003aba:	d7 03       	nop

80003abc <_malloc_trim_r>:
80003abc:	d4 21       	pushm	r4-r7,lr
80003abe:	16 95       	mov	r5,r11
80003ac0:	18 97       	mov	r7,r12
80003ac2:	fe b0 f8 9b 	rcall	80002bf8 <__malloc_lock>
80003ac6:	e0 64 01 18 	mov	r4,280
80003aca:	68 28       	ld.w	r8,r4[0x8]
80003acc:	70 16       	ld.w	r6,r8[0x4]
80003ace:	e0 16 ff fc 	andl	r6,0xfffc
80003ad2:	ec c8 ff 91 	sub	r8,r6,-111
80003ad6:	f0 05 01 05 	sub	r5,r8,r5
80003ada:	e0 15 ff 80 	andl	r5,0xff80
80003ade:	ea c5 00 80 	sub	r5,r5,128
80003ae2:	e0 45 00 7f 	cp.w	r5,127
80003ae6:	e0 8a 00 22 	brle	80003b2a <_malloc_trim_r+0x6e>
80003aea:	30 0b       	mov	r11,0
80003aec:	0e 9c       	mov	r12,r7
80003aee:	ce 3e       	rcall	800038b4 <_sbrk_r>
80003af0:	68 28       	ld.w	r8,r4[0x8]
80003af2:	0c 08       	add	r8,r6
80003af4:	10 3c       	cp.w	r12,r8
80003af6:	c1 a1       	brne	80003b2a <_malloc_trim_r+0x6e>
80003af8:	ea 0b 11 00 	rsub	r11,r5,0
80003afc:	0e 9c       	mov	r12,r7
80003afe:	cd be       	rcall	800038b4 <_sbrk_r>
80003b00:	5b fc       	cp.w	r12,-1
80003b02:	c1 81       	brne	80003b32 <_malloc_trim_r+0x76>
80003b04:	30 0b       	mov	r11,0
80003b06:	0e 9c       	mov	r12,r7
80003b08:	cd 6e       	rcall	800038b4 <_sbrk_r>
80003b0a:	68 28       	ld.w	r8,r4[0x8]
80003b0c:	f8 08 01 09 	sub	r9,r12,r8
80003b10:	58 f9       	cp.w	r9,15
80003b12:	e0 8a 00 0c 	brle	80003b2a <_malloc_trim_r+0x6e>
80003b16:	a1 a9       	sbr	r9,0x0
80003b18:	91 19       	st.w	r8[0x4],r9
80003b1a:	e0 68 05 24 	mov	r8,1316
80003b1e:	70 09       	ld.w	r9,r8[0x0]
80003b20:	e0 68 07 64 	mov	r8,1892
80003b24:	f8 09 01 09 	sub	r9,r12,r9
80003b28:	91 09       	st.w	r8[0x0],r9
80003b2a:	0e 9c       	mov	r12,r7
80003b2c:	fe b0 f8 6c 	rcall	80002c04 <__malloc_unlock>
80003b30:	d8 2a       	popm	r4-r7,pc,r12=0
80003b32:	68 28       	ld.w	r8,r4[0x8]
80003b34:	0a 16       	sub	r6,r5
80003b36:	a1 a6       	sbr	r6,0x0
80003b38:	91 16       	st.w	r8[0x4],r6
80003b3a:	e0 68 07 64 	mov	r8,1892
80003b3e:	70 09       	ld.w	r9,r8[0x0]
80003b40:	0a 19       	sub	r9,r5
80003b42:	0e 9c       	mov	r12,r7
80003b44:	91 09       	st.w	r8[0x0],r9
80003b46:	fe b0 f8 5f 	rcall	80002c04 <__malloc_unlock>
80003b4a:	da 2a       	popm	r4-r7,pc,r12=1

80003b4c <_free_r>:
80003b4c:	d4 21       	pushm	r4-r7,lr
80003b4e:	16 96       	mov	r6,r11
80003b50:	18 97       	mov	r7,r12
80003b52:	58 0b       	cp.w	r11,0
80003b54:	e0 80 00 c0 	breq	80003cd4 <_free_r+0x188>
80003b58:	fe b0 f8 50 	rcall	80002bf8 <__malloc_lock>
80003b5c:	20 86       	sub	r6,8
80003b5e:	e0 6a 01 18 	mov	r10,280
80003b62:	6c 18       	ld.w	r8,r6[0x4]
80003b64:	74 2e       	ld.w	lr,r10[0x8]
80003b66:	f9 d8 c0 01 	bfextu	r12,r8,0x0,0x1
80003b6a:	a1 c8       	cbr	r8,0x0
80003b6c:	ec 08 00 09 	add	r9,r6,r8
80003b70:	72 1b       	ld.w	r11,r9[0x4]
80003b72:	e0 1b ff fc 	andl	r11,0xfffc
80003b76:	1c 39       	cp.w	r9,lr
80003b78:	c1 e1       	brne	80003bb4 <_free_r+0x68>
80003b7a:	f6 08 00 08 	add	r8,r11,r8
80003b7e:	58 0c       	cp.w	r12,0
80003b80:	c0 81       	brne	80003b90 <_free_r+0x44>
80003b82:	6c 09       	ld.w	r9,r6[0x0]
80003b84:	12 16       	sub	r6,r9
80003b86:	12 08       	add	r8,r9
80003b88:	6c 3b       	ld.w	r11,r6[0xc]
80003b8a:	6c 29       	ld.w	r9,r6[0x8]
80003b8c:	97 29       	st.w	r11[0x8],r9
80003b8e:	93 3b       	st.w	r9[0xc],r11
80003b90:	10 99       	mov	r9,r8
80003b92:	95 26       	st.w	r10[0x8],r6
80003b94:	a1 a9       	sbr	r9,0x0
80003b96:	8d 19       	st.w	r6[0x4],r9
80003b98:	e0 69 05 20 	mov	r9,1312
80003b9c:	72 09       	ld.w	r9,r9[0x0]
80003b9e:	12 38       	cp.w	r8,r9
80003ba0:	c0 63       	brcs	80003bac <_free_r+0x60>
80003ba2:	e0 68 07 60 	mov	r8,1888
80003ba6:	0e 9c       	mov	r12,r7
80003ba8:	70 0b       	ld.w	r11,r8[0x0]
80003baa:	c8 9f       	rcall	80003abc <_malloc_trim_r>
80003bac:	0e 9c       	mov	r12,r7
80003bae:	fe b0 f8 2b 	rcall	80002c04 <__malloc_unlock>
80003bb2:	d8 22       	popm	r4-r7,pc
80003bb4:	93 1b       	st.w	r9[0x4],r11
80003bb6:	58 0c       	cp.w	r12,0
80003bb8:	c0 30       	breq	80003bbe <_free_r+0x72>
80003bba:	30 0c       	mov	r12,0
80003bbc:	c1 08       	rjmp	80003bdc <_free_r+0x90>
80003bbe:	6c 0e       	ld.w	lr,r6[0x0]
80003bc0:	f4 c5 ff f8 	sub	r5,r10,-8
80003bc4:	1c 16       	sub	r6,lr
80003bc6:	1c 08       	add	r8,lr
80003bc8:	6c 2e       	ld.w	lr,r6[0x8]
80003bca:	0a 3e       	cp.w	lr,r5
80003bcc:	f9 bc 00 01 	moveq	r12,1
80003bd0:	ed f5 10 03 	ld.wne	r5,r6[0xc]
80003bd4:	eb fe 1a 02 	st.wne	r5[0x8],lr
80003bd8:	fd f5 1a 03 	st.wne	lr[0xc],r5
80003bdc:	f2 0b 00 0e 	add	lr,r9,r11
80003be0:	7c 1e       	ld.w	lr,lr[0x4]
80003be2:	ed be 00 00 	bld	lr,0x0
80003be6:	c1 40       	breq	80003c0e <_free_r+0xc2>
80003be8:	16 08       	add	r8,r11
80003bea:	58 0c       	cp.w	r12,0
80003bec:	c0 d1       	brne	80003c06 <_free_r+0xba>
80003bee:	e0 6e 01 18 	mov	lr,280
80003bf2:	72 2b       	ld.w	r11,r9[0x8]
80003bf4:	2f 8e       	sub	lr,-8
80003bf6:	1c 3b       	cp.w	r11,lr
80003bf8:	c0 71       	brne	80003c06 <_free_r+0xba>
80003bfa:	97 36       	st.w	r11[0xc],r6
80003bfc:	97 26       	st.w	r11[0x8],r6
80003bfe:	8d 2b       	st.w	r6[0x8],r11
80003c00:	8d 3b       	st.w	r6[0xc],r11
80003c02:	30 1c       	mov	r12,1
80003c04:	c0 58       	rjmp	80003c0e <_free_r+0xc2>
80003c06:	72 2b       	ld.w	r11,r9[0x8]
80003c08:	72 39       	ld.w	r9,r9[0xc]
80003c0a:	93 2b       	st.w	r9[0x8],r11
80003c0c:	97 39       	st.w	r11[0xc],r9
80003c0e:	10 99       	mov	r9,r8
80003c10:	ec 08 09 08 	st.w	r6[r8],r8
80003c14:	a1 a9       	sbr	r9,0x0
80003c16:	8d 19       	st.w	r6[0x4],r9
80003c18:	58 0c       	cp.w	r12,0
80003c1a:	c5 a1       	brne	80003cce <_free_r+0x182>
80003c1c:	e0 48 01 ff 	cp.w	r8,511
80003c20:	e0 8b 00 13 	brhi	80003c46 <_free_r+0xfa>
80003c24:	a3 98       	lsr	r8,0x3
80003c26:	f4 08 00 39 	add	r9,r10,r8<<0x3
80003c2a:	72 2b       	ld.w	r11,r9[0x8]
80003c2c:	8d 39       	st.w	r6[0xc],r9
80003c2e:	8d 2b       	st.w	r6[0x8],r11
80003c30:	97 36       	st.w	r11[0xc],r6
80003c32:	93 26       	st.w	r9[0x8],r6
80003c34:	a3 48       	asr	r8,0x2
80003c36:	74 19       	ld.w	r9,r10[0x4]
80003c38:	30 1b       	mov	r11,1
80003c3a:	f6 08 09 48 	lsl	r8,r11,r8
80003c3e:	f3 e8 10 08 	or	r8,r9,r8
80003c42:	95 18       	st.w	r10[0x4],r8
80003c44:	c4 58       	rjmp	80003cce <_free_r+0x182>
80003c46:	f0 0b 16 09 	lsr	r11,r8,0x9
80003c4a:	58 4b       	cp.w	r11,4
80003c4c:	e0 8b 00 06 	brhi	80003c58 <_free_r+0x10c>
80003c50:	f0 0b 16 06 	lsr	r11,r8,0x6
80003c54:	2c 8b       	sub	r11,-56
80003c56:	c2 08       	rjmp	80003c96 <_free_r+0x14a>
80003c58:	59 4b       	cp.w	r11,20
80003c5a:	e0 8b 00 04 	brhi	80003c62 <_free_r+0x116>
80003c5e:	2a 5b       	sub	r11,-91
80003c60:	c1 b8       	rjmp	80003c96 <_free_r+0x14a>
80003c62:	e0 4b 00 54 	cp.w	r11,84
80003c66:	e0 8b 00 06 	brhi	80003c72 <_free_r+0x126>
80003c6a:	f0 0b 16 0c 	lsr	r11,r8,0xc
80003c6e:	29 2b       	sub	r11,-110
80003c70:	c1 38       	rjmp	80003c96 <_free_r+0x14a>
80003c72:	e0 4b 01 54 	cp.w	r11,340
80003c76:	e0 8b 00 06 	brhi	80003c82 <_free_r+0x136>
80003c7a:	f0 0b 16 0f 	lsr	r11,r8,0xf
80003c7e:	28 9b       	sub	r11,-119
80003c80:	c0 b8       	rjmp	80003c96 <_free_r+0x14a>
80003c82:	e0 4b 05 54 	cp.w	r11,1364
80003c86:	e0 88 00 05 	brls	80003c90 <_free_r+0x144>
80003c8a:	37 eb       	mov	r11,126
80003c8c:	c0 58       	rjmp	80003c96 <_free_r+0x14a>
80003c8e:	d7 03       	nop
80003c90:	f0 0b 16 12 	lsr	r11,r8,0x12
80003c94:	28 4b       	sub	r11,-124
80003c96:	f4 0b 00 3c 	add	r12,r10,r11<<0x3
80003c9a:	78 29       	ld.w	r9,r12[0x8]
80003c9c:	18 39       	cp.w	r9,r12
80003c9e:	c0 e1       	brne	80003cba <_free_r+0x16e>
80003ca0:	74 18       	ld.w	r8,r10[0x4]
80003ca2:	a3 4b       	asr	r11,0x2
80003ca4:	30 1c       	mov	r12,1
80003ca6:	f8 0b 09 4b 	lsl	r11,r12,r11
80003caa:	f1 eb 10 0b 	or	r11,r8,r11
80003cae:	12 98       	mov	r8,r9
80003cb0:	95 1b       	st.w	r10[0x4],r11
80003cb2:	c0 a8       	rjmp	80003cc6 <_free_r+0x17a>
80003cb4:	72 29       	ld.w	r9,r9[0x8]
80003cb6:	18 39       	cp.w	r9,r12
80003cb8:	c0 60       	breq	80003cc4 <_free_r+0x178>
80003cba:	72 1a       	ld.w	r10,r9[0x4]
80003cbc:	e0 1a ff fc 	andl	r10,0xfffc
80003cc0:	14 38       	cp.w	r8,r10
80003cc2:	cf 93       	brcs	80003cb4 <_free_r+0x168>
80003cc4:	72 38       	ld.w	r8,r9[0xc]
80003cc6:	8d 38       	st.w	r6[0xc],r8
80003cc8:	8d 29       	st.w	r6[0x8],r9
80003cca:	93 36       	st.w	r9[0xc],r6
80003ccc:	91 26       	st.w	r8[0x8],r6
80003cce:	0e 9c       	mov	r12,r7
80003cd0:	fe b0 f7 9a 	rcall	80002c04 <__malloc_unlock>
80003cd4:	d8 22       	popm	r4-r7,pc
80003cd6:	d7 03       	nop

80003cd8 <__do_global_ctors_aux>:
80003cd8:	d4 21       	pushm	r4-r7,lr
80003cda:	30 c7       	mov	r7,12
80003cdc:	c0 28       	rjmp	80003ce0 <__do_global_ctors_aux+0x8>
80003cde:	5d 18       	icall	r8
80003ce0:	20 47       	sub	r7,4
80003ce2:	6e 08       	ld.w	r8,r7[0x0]
80003ce4:	5b f8       	cp.w	r8,-1
80003ce6:	cf c1       	brne	80003cde <__do_global_ctors_aux+0x6>
80003ce8:	d8 22       	popm	r4-r7,pc
80003cea:	d7 03       	nop

Disassembly of section .exception:

80003e00 <_evba>:
80003e00:	c0 08       	rjmp	80003e00 <_evba>
	...

80003e04 <_handle_TLB_Multiple_Hit>:
80003e04:	c0 08       	rjmp	80003e04 <_handle_TLB_Multiple_Hit>
	...

80003e08 <_handle_Bus_Error_Data_Fetch>:
80003e08:	c0 08       	rjmp	80003e08 <_handle_Bus_Error_Data_Fetch>
	...

80003e0c <_handle_Bus_Error_Instruction_Fetch>:
80003e0c:	c0 08       	rjmp	80003e0c <_handle_Bus_Error_Instruction_Fetch>
	...

80003e10 <_handle_NMI>:
80003e10:	c0 08       	rjmp	80003e10 <_handle_NMI>
	...

80003e14 <_handle_Instruction_Address>:
80003e14:	c0 08       	rjmp	80003e14 <_handle_Instruction_Address>
	...

80003e18 <_handle_ITLB_Protection>:
80003e18:	c0 08       	rjmp	80003e18 <_handle_ITLB_Protection>
	...

80003e1c <_handle_Breakpoint>:
80003e1c:	c0 08       	rjmp	80003e1c <_handle_Breakpoint>
	...

80003e20 <_handle_Illegal_Opcode>:
80003e20:	c0 08       	rjmp	80003e20 <_handle_Illegal_Opcode>
	...

80003e24 <_handle_Unimplemented_Instruction>:
80003e24:	c0 08       	rjmp	80003e24 <_handle_Unimplemented_Instruction>
	...

80003e28 <_handle_Privilege_Violation>:
80003e28:	c0 08       	rjmp	80003e28 <_handle_Privilege_Violation>
	...

80003e2c <_handle_Floating_Point>:
80003e2c:	c0 08       	rjmp	80003e2c <_handle_Floating_Point>
	...

80003e30 <_handle_Coprocessor_Absent>:
80003e30:	c0 08       	rjmp	80003e30 <_handle_Coprocessor_Absent>
	...

80003e34 <_handle_Data_Address_Read>:
80003e34:	c0 08       	rjmp	80003e34 <_handle_Data_Address_Read>
	...

80003e38 <_handle_Data_Address_Write>:
80003e38:	c0 08       	rjmp	80003e38 <_handle_Data_Address_Write>
	...

80003e3c <_handle_DTLB_Protection_Read>:
80003e3c:	c0 08       	rjmp	80003e3c <_handle_DTLB_Protection_Read>
	...

80003e40 <_handle_DTLB_Protection_Write>:
80003e40:	c0 08       	rjmp	80003e40 <_handle_DTLB_Protection_Write>
	...

80003e44 <_handle_DTLB_Modified>:
80003e44:	c0 08       	rjmp	80003e44 <_handle_DTLB_Modified>
	...

80003e50 <_handle_ITLB_Miss>:
80003e50:	c0 08       	rjmp	80003e50 <_handle_ITLB_Miss>
	...

80003e60 <_handle_DTLB_Miss_Read>:
80003e60:	c0 08       	rjmp	80003e60 <_handle_DTLB_Miss_Read>
	...

80003e70 <_handle_DTLB_Miss_Write>:
80003e70:	c0 08       	rjmp	80003e70 <_handle_DTLB_Miss_Write>
	...

80003f00 <_handle_Supervisor_Call>:
80003f00:	fe cf 14 50 	sub	pc,pc,5200

80003f04 <_int0>:
80003f04:	30 0c       	mov	r12,0
80003f06:	fe b0 f3 bb 	rcall	8000267c <_get_interrupt_handler>
80003f0a:	58 0c       	cp.w	r12,0
80003f0c:	f8 0f 17 10 	movne	pc,r12
80003f10:	d6 03       	rete

80003f12 <_int1>:
80003f12:	30 1c       	mov	r12,1
80003f14:	fe b0 f3 b4 	rcall	8000267c <_get_interrupt_handler>
80003f18:	58 0c       	cp.w	r12,0
80003f1a:	f8 0f 17 10 	movne	pc,r12
80003f1e:	d6 03       	rete

80003f20 <_int2>:
80003f20:	30 2c       	mov	r12,2
80003f22:	fe b0 f3 ad 	rcall	8000267c <_get_interrupt_handler>
80003f26:	58 0c       	cp.w	r12,0
80003f28:	f8 0f 17 10 	movne	pc,r12
80003f2c:	d6 03       	rete

80003f2e <_int3>:
80003f2e:	30 3c       	mov	r12,3
80003f30:	fe b0 f3 a6 	rcall	8000267c <_get_interrupt_handler>
80003f34:	58 0c       	cp.w	r12,0
80003f36:	f8 0f 17 10 	movne	pc,r12
80003f3a:	d6 03       	rete
80003f3c:	d7 03       	nop
80003f3e:	d7 03       	nop
80003f40:	d7 03       	nop
80003f42:	d7 03       	nop
80003f44:	d7 03       	nop
80003f46:	d7 03       	nop
80003f48:	d7 03       	nop
80003f4a:	d7 03       	nop
80003f4c:	d7 03       	nop
80003f4e:	d7 03       	nop
80003f50:	d7 03       	nop
80003f52:	d7 03       	nop
80003f54:	d7 03       	nop
80003f56:	d7 03       	nop
80003f58:	d7 03       	nop
80003f5a:	d7 03       	nop
80003f5c:	d7 03       	nop
80003f5e:	d7 03       	nop
80003f60:	d7 03       	nop
80003f62:	d7 03       	nop
80003f64:	d7 03       	nop
80003f66:	d7 03       	nop
80003f68:	d7 03       	nop
80003f6a:	d7 03       	nop
80003f6c:	d7 03       	nop
80003f6e:	d7 03       	nop
80003f70:	d7 03       	nop
80003f72:	d7 03       	nop
80003f74:	d7 03       	nop
80003f76:	d7 03       	nop
80003f78:	d7 03       	nop
80003f7a:	d7 03       	nop
80003f7c:	d7 03       	nop
80003f7e:	d7 03       	nop
80003f80:	d7 03       	nop
80003f82:	d7 03       	nop
80003f84:	d7 03       	nop
80003f86:	d7 03       	nop
80003f88:	d7 03       	nop
80003f8a:	d7 03       	nop
80003f8c:	d7 03       	nop
80003f8e:	d7 03       	nop
80003f90:	d7 03       	nop
80003f92:	d7 03       	nop
80003f94:	d7 03       	nop
80003f96:	d7 03       	nop
80003f98:	d7 03       	nop
80003f9a:	d7 03       	nop
80003f9c:	d7 03       	nop
80003f9e:	d7 03       	nop
80003fa0:	d7 03       	nop
80003fa2:	d7 03       	nop
80003fa4:	d7 03       	nop
80003fa6:	d7 03       	nop
80003fa8:	d7 03       	nop
80003faa:	d7 03       	nop
80003fac:	d7 03       	nop
80003fae:	d7 03       	nop
80003fb0:	d7 03       	nop
80003fb2:	d7 03       	nop
80003fb4:	d7 03       	nop
80003fb6:	d7 03       	nop
80003fb8:	d7 03       	nop
80003fba:	d7 03       	nop
80003fbc:	d7 03       	nop
80003fbe:	d7 03       	nop
80003fc0:	d7 03       	nop
80003fc2:	d7 03       	nop
80003fc4:	d7 03       	nop
80003fc6:	d7 03       	nop
80003fc8:	d7 03       	nop
80003fca:	d7 03       	nop
80003fcc:	d7 03       	nop
80003fce:	d7 03       	nop
80003fd0:	d7 03       	nop
80003fd2:	d7 03       	nop
80003fd4:	d7 03       	nop
80003fd6:	d7 03       	nop
80003fd8:	d7 03       	nop
80003fda:	d7 03       	nop
80003fdc:	d7 03       	nop
80003fde:	d7 03       	nop
80003fe0:	d7 03       	nop
80003fe2:	d7 03       	nop
80003fe4:	d7 03       	nop
80003fe6:	d7 03       	nop
80003fe8:	d7 03       	nop
80003fea:	d7 03       	nop
80003fec:	d7 03       	nop
80003fee:	d7 03       	nop
80003ff0:	d7 03       	nop
80003ff2:	d7 03       	nop
80003ff4:	d7 03       	nop
80003ff6:	d7 03       	nop
80003ff8:	d7 03       	nop
80003ffa:	d7 03       	nop
80003ffc:	d7 03       	nop
80003ffe:	d7 03       	nop

Disassembly of section .fini:

80004000 <_fini>:
80004000:	eb cd 40 40 	pushm	r6,lr
80004004:	48 26       	lddpc	r6,8000400c <_fini+0xc>
80004006:	1e 26       	rsub	r6,pc
80004008:	c0 48       	rjmp	80004010 <_fini+0x10>
8000400a:	d7 03       	nop
8000400c:	80 00       	ld.sh	r0,r0[0x0]
8000400e:	3f ea       	mov	r10,-2
80004010:	fe b0 f0 3a 	rcall	80002084 <__do_global_dtors_aux>
80004014:	e3 cd 80 40 	ldm	sp++,r6,pc
